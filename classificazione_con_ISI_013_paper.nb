(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    682595,      13770]
NotebookOptionsPosition[    645058,      13138]
NotebookOutlinePosition[    645462,      13154]
CellTagsIndexPosition[    645419,      13151]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"filepath", "=", 
   RowBox[{"NotebookDirectory", "[", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9121394965420895`*^9, 
  3.91213950634234*^9}},ExpressionUUID->"cccf1356-34ac-4fb4-9533-\
7454e7e6dd19"],

Cell[CellGroupData[{

Cell["Dataset creation", "Subsection",
 CellChangeTimes->{{3.9048192889334135`*^9, 3.9048192909110928`*^9}, {
  3.912139387755624*^9, 
  3.9121393900167255`*^9}},ExpressionUUID->"c1349309-8b67-466c-a605-\
354e6035568a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"creaDatasetSpikeISI", "[", 
   RowBox[{"dbNeu_", ",", "type_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "neuroni", ",", "datasetOut", ",", "correnti", ",", "valoriTmp", ",", 
      "valori", ",", "isi", ",", "setDiValori"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"correnti", "=", 
       RowBox[{"{", 
        RowBox[{
        "\"\<200\>\"", ",", "\"\<400\>\"", ",", "\"\<600\>\"", ",", 
         "\"\<800\>\"", ",", "\"\<1000\>\""}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"neuroni", "=", 
       RowBox[{"Keys", "@", "dbNeu"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"datasetOut", "=", "\[IndentingNewLine]", 
       RowBox[{"<|", 
        RowBox[{"Table", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"neurone", "->", 
           RowBox[{"<|", 
            RowBox[{"Table", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"valoriTmp", "=", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"type", "==", "\"\<exp\>\""}], ",", 
                  RowBox[{"ToExpression", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"dbNeu", "[", "neurone", "]"}], "[", 
                    "\"\<spike_times_exp\>\"", "]"}], "[", "corr", "]"}], 
                   "]"}], ",", 
                  RowBox[{"ToExpression", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"dbNeu", "[", "neurone", "]"}], "[", 
                    "\"\<spike_times_sim\>\"", "]"}], "[", "corr", "]"}], 
                   "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
               RowBox[{"(*", " ", 
                RowBox[{
                 RowBox[{"se", " ", "valoriTmp"}], " ", "==", " ", "Null"}], 
                "*)"}], "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"valoriTmp", "==", "Null"}], ",", 
                 RowBox[{"valori", " ", "=", " ", "0"}], ",", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"type", "==", "\"\<exp\>\""}], ",", 
                   RowBox[{"valori", "=", 
                    RowBox[{"valoriTmp", "-", "31.2"}]}], ",", 
                   RowBox[{"valori", "=", "valoriTmp"}]}], "]"}]}], "]"}], 
               ";", "\[IndentingNewLine]", 
               RowBox[{"(*", " ", 
                RowBox[{
                 RowBox[{"se", " ", "valoriTmp"}], " ", "==", " ", 
                 RowBox[{"{", "Null", "}"}]}], "*)"}], "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"valoriTmp", "==", 
                  RowBox[{"{", "Null", "}"}]}], ",", 
                 RowBox[{"valori", " ", "=", " ", "0"}], ",", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"type", "==", "\"\<exp\>\""}], ",", 
                   RowBox[{"valori", "=", 
                    RowBox[{"valoriTmp", "-", "31.2"}]}], ",", 
                   RowBox[{"valori", "=", "valoriTmp"}]}], "]"}]}], "]"}], 
               ";", "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Length", "@", "valori"}], ">", "1"}], ",", 
                 "\[IndentingNewLine]", "\t", 
                 RowBox[{
                  RowBox[{"isi", "=", 
                   RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"valori", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}], "-", 
                    RowBox[{"valori", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", 
                    RowBox[{
                    RowBox[{"Length", "@", "valori"}], "-", "1"}]}], "}"}]}], 
                    "]"}]}], ";"}], ",", "\[IndentingNewLine]", "\t", 
                 RowBox[{
                  RowBox[{"If", "[", "\[IndentingNewLine]", "\t", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Length", "@", "valori"}], "==", "1"}], ",", 
                    RowBox[{"isi", " ", "=", "valori"}], ",", 
                    "\[IndentingNewLine]", "\t", 
                    RowBox[{
                    RowBox[{"isi", "=", 
                    RowBox[{"{", "0", "}"}]}], ";"}]}], "]"}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{"valori", "=", "0"}]}]}], "]"}], ";", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"<|", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"corr", "<>", "\"\< - time1stSpike\>\""}], "->", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Length", "@", "valori"}], "<", "1"}], ",", "0", 
                    ",", 
                    RowBox[{"Min", "[", "valori", "]"}]}], "]"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"corr", "<>", "\"\< - timeLastSpike\>\""}], "->", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Length", "@", "valori"}], "<", "1"}], ",", "0", 
                    ",", 
                    RowBox[{"Max", "[", "valori", "]"}]}], "]"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"corr", "<>", "\"\< - spikeNumber\>\""}], "->", 
                  RowBox[{"Length", "[", "valori", "]"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"corr", "<>", " ", "\"\< - ISImin\>\""}], "->", " ", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"NumberQ", "@", 
                    RowBox[{"isi", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ",", 
                    RowBox[{"Min", "[", "isi", "]"}], ",", 
                    RowBox[{"Missing", "[", "]"}]}], "]"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"corr", "<>", " ", "\"\< - ISImax\>\""}], "->", " ", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"NumberQ", "@", 
                    RowBox[{"isi", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ",", 
                    RowBox[{"Max", "[", "isi", "]"}], ",", 
                    RowBox[{"Missing", "[", "]"}]}], "]"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"corr", "<>", " ", "\"\< - ISImean\>\""}], "->", 
                  " ", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"NumberQ", "@", 
                    RowBox[{"isi", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ",", 
                    RowBox[{"Mean", "[", "isi", "]"}], ",", 
                    RowBox[{"Missing", "[", "]"}]}], "]"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"corr", "<>", " ", "\"\< - ISIstd\>\""}], "->", " ", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Length", "[", "isi", "]"}], "<", "2"}], ",", 
                    RowBox[{"Missing", "[", "]"}], ",", 
                    RowBox[{"StandardDeviation", "[", "isi", "]"}]}], 
                   "]"}]}]}], "\[IndentingNewLine]", "|>"}]}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{"corr", ",", "correnti"}], "}"}]}], "]"}], "|>"}]}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"neurone", ",", "neuroni"}], "}"}]}], "]"}], "|>"}]}], 
      ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Print", "[", "datasetOut", "]"}], "*)"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "datasetOut", "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9048192973801622`*^9, 3.904819391743742*^9}, {
   3.9048195115100183`*^9, 3.9048195510213675`*^9}, {3.90481963423664*^9, 
   3.904819657367255*^9}, {3.904819730927846*^9, 3.904819738843298*^9}, {
   3.9048197822815685`*^9, 3.904819856163992*^9}, {3.90481988684017*^9, 
   3.904820098427996*^9}, {3.904820132163433*^9, 3.9048201526217475`*^9}, {
   3.9048202739487185`*^9, 3.904820282589837*^9}, {3.9048293384391613`*^9, 
   3.9048293875646667`*^9}, {3.9048294422474723`*^9, 
   3.9048294488592014`*^9}, {3.9048294792510347`*^9, 3.904829558894245*^9}, {
   3.904829607893645*^9, 3.9048296226816034`*^9}, {3.9048296557696943`*^9, 
   3.904829692794177*^9}, {3.9048298025485687`*^9, 3.9048298708544307`*^9}, {
   3.9048299070449405`*^9, 3.9048299634914865`*^9}, {3.904829998229354*^9, 
   3.9048300513510313`*^9}, {3.9048315776917953`*^9, 3.904831617576721*^9}, {
   3.9048316500921335`*^9, 3.9048316521122303`*^9}, {3.9048775975687094`*^9, 
   3.904877629953809*^9}, {3.904901394477128*^9, 3.9049014110087056`*^9}, 
   3.9049014564158406`*^9, {3.904901600555067*^9, 3.9049016445689864`*^9}, {
   3.904920838111006*^9, 3.9049208411293726`*^9}, {3.904921046321621*^9, 
   3.904921080827958*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"4f3d014e-4e5b-4c2b-82ad-fe1d6a1efe53"],

Cell[CellGroupData[{

Cell["Piramidali", "Subsubsection",
 CellChangeTimes->{{3.9037596751337037`*^9, 
  3.9037596769740086`*^9}},ExpressionUUID->"ae971821-fc8c-4510-b055-\
abd296f203cd"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "filename", " ", "=", " ", 
   "\"\<expNeuronDB_V006small_piramidali_dati_2023_06_15\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dbNeuPyrOrig", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{
     "filepath", "<>", "\"\<\\\\\>\"", "<>", "filename", "<>", 
      "\"\<.json\>\""}], ",", "\"\<RawJSON\>\""}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8708371643172398`*^9, 3.8708371649739227`*^9}, {
   3.870837205358247*^9, 3.8708372889594383`*^9}, {3.8708373717294827`*^9, 
   3.870837375102536*^9}, {3.8708374759074984`*^9, 3.870837491642853*^9}, {
   3.870837678301423*^9, 3.8708376808758116`*^9}, {3.870838008765304*^9, 
   3.8708380426274614`*^9}, {3.870838141648035*^9, 3.870838156343728*^9}, 
   3.870838188336751*^9, 3.8708389006803474`*^9, 3.8708395721715164`*^9, {
   3.899807266745392*^9, 3.899807277069441*^9}, {3.903707485682394*^9, 
   3.9037075063491807`*^9}, {3.903757621461687*^9, 3.903757634322569*^9}, {
   3.9041278458304553`*^9, 3.9041278570353436`*^9}, {3.9041282793914766`*^9, 
   3.90412829533422*^9}, {3.904128713554641*^9, 3.904128726219948*^9}, 
   3.904128765992961*^9, {3.904181635580678*^9, 3.9041816453716936`*^9}, {
   3.904829426764357*^9, 3.9048294284661603`*^9}, 
   3.9121395137028766`*^9},ExpressionUUID->"43732470-518f-47b9-9129-\
3bf7c032c104"],

Cell[BoxData[
 RowBox[{
  RowBox[{"datasetPyr", "=", 
   RowBox[{"creaDatasetSpikeISI", "[", 
    RowBox[{"dbNeuPyrOrig", ",", "\"\<exp\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.904819425032589*^9, 3.904819434212986*^9}, {
   3.904829424605734*^9, 3.9048294250242305`*^9}, {3.9048297012821198`*^9, 
   3.904829705082679*^9}, 3.904831627870962*^9, 3.9048776427737985`*^9, 
   3.9049014703858285`*^9},
 CellLabel->"In[6]:=",ExpressionUUID->"1e9aa822-f41d-4046-9fe4-9b2bb222cf79"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"datasetPyr", "[", 
  RowBox[{"[", "3", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.904302922293828*^9, 3.9043029230394583`*^9}, {
   3.904302971461376*^9, 3.9043029745509024`*^9}, {3.904303040755301*^9, 
   3.904303042643223*^9}, 3.9048196732151794`*^9},
 CellLabel->"In[7]:=",ExpressionUUID->"32c65646-f66a-49e0-93b0-5a58c0d1b469"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"200 - time1stSpike\"\>", "\[Rule]", "0"}], ",", 
   RowBox[{"\<\"200 - timeLastSpike\"\>", "\[Rule]", "0"}], ",", 
   RowBox[{"\<\"200 - spikeNumber\"\>", "\[Rule]", "0"}], ",", 
   RowBox[{"\<\"200 - ISImin\"\>", "\[Rule]", "0"}], ",", 
   RowBox[{"\<\"200 - ISImax\"\>", "\[Rule]", "0"}], ",", 
   RowBox[{"\<\"200 - ISImean\"\>", "\[Rule]", "0"}], ",", 
   RowBox[{"\<\"200 - ISIstd\"\>", "\[Rule]", 
    RowBox[{"Missing", "[", "]"}]}], ",", 
   RowBox[{"\<\"400 - time1stSpike\"\>", "\[Rule]", "0"}], ",", 
   RowBox[{"\<\"400 - timeLastSpike\"\>", "\[Rule]", "0"}], ",", 
   RowBox[{"\<\"400 - spikeNumber\"\>", "\[Rule]", "0"}], ",", 
   RowBox[{"\<\"400 - ISImin\"\>", "\[Rule]", "0"}], ",", 
   RowBox[{"\<\"400 - ISImax\"\>", "\[Rule]", "0"}], ",", 
   RowBox[{"\<\"400 - ISImean\"\>", "\[Rule]", "0"}], ",", 
   RowBox[{"\<\"400 - ISIstd\"\>", "\[Rule]", 
    RowBox[{"Missing", "[", "]"}]}], ",", 
   RowBox[{"\<\"600 - time1stSpike\"\>", "\[Rule]", "0"}], ",", 
   RowBox[{"\<\"600 - timeLastSpike\"\>", "\[Rule]", "0"}], ",", 
   RowBox[{"\<\"600 - spikeNumber\"\>", "\[Rule]", "0"}], ",", 
   RowBox[{"\<\"600 - ISImin\"\>", "\[Rule]", "0"}], ",", 
   RowBox[{"\<\"600 - ISImax\"\>", "\[Rule]", "0"}], ",", 
   RowBox[{"\<\"600 - ISImean\"\>", "\[Rule]", "0"}], ",", 
   RowBox[{"\<\"600 - ISIstd\"\>", "\[Rule]", 
    RowBox[{"Missing", "[", "]"}]}], ",", 
   RowBox[{"\<\"800 - time1stSpike\"\>", "\[Rule]", "43.89999999999999`"}], 
   ",", 
   RowBox[{"\<\"800 - timeLastSpike\"\>", "\[Rule]", "398.5`"}], ",", 
   RowBox[{"\<\"800 - spikeNumber\"\>", "\[Rule]", "4"}], ",", 
   RowBox[{"\<\"800 - ISImin\"\>", "\[Rule]", "44.400000000000006`"}], ",", 
   RowBox[{"\<\"800 - ISImax\"\>", "\[Rule]", "230.79999999999998`"}], ",", 
   RowBox[{"\<\"800 - ISImean\"\>", "\[Rule]", "118.2`"}], ",", 
   RowBox[{"\<\"800 - ISIstd\"\>", "\[Rule]", "99.07229683418063`"}], ",", 
   RowBox[{"\<\"1000 - time1stSpike\"\>", "\[Rule]", "22.099999999999998`"}], 
   ",", 
   RowBox[{"\<\"1000 - timeLastSpike\"\>", "\[Rule]", "190.`"}], ",", 
   RowBox[{"\<\"1000 - spikeNumber\"\>", "\[Rule]", "5"}], ",", 
   RowBox[{"\<\"1000 - ISImin\"\>", "\[Rule]", "17.7`"}], ",", 
   RowBox[{"\<\"1000 - ISImax\"\>", "\[Rule]", "75.7`"}], ",", 
   RowBox[{"\<\"1000 - ISImean\"\>", "\[Rule]", "41.975`"}], ",", 
   RowBox[{"\<\"1000 - ISIstd\"\>", "\[Rule]", "25.02896655211051`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.9043029236610255`*^9, 3.904302975394966*^9, 3.904303043182624*^9, 
   3.90472225819077*^9, 3.9047230957610373`*^9, 3.9048195690046554`*^9, {
   3.904819669286557*^9, 3.904819673827054*^9}, 3.9048197478034887`*^9, {
   3.904819807275553*^9, 3.904819831789354*^9}, 3.904820167145706*^9, 
   3.9048294330539446`*^9, 3.9048295121930094`*^9, {3.9048295520781617`*^9, 
   3.904829565861648*^9}, 3.9048296162894325`*^9, 3.9048297099716144`*^9, 
   3.904829839594662*^9, 3.9048300564087276`*^9, {3.9048316320442095`*^9, 
   3.904831655507413*^9}, 3.904877652233246*^9, 3.9048935841820183`*^9, 
   3.904901650417617*^9, 3.904916677216342*^9, 3.904920986976349*^9, 
   3.9049210863774056`*^9, 3.9049839306134796`*^9, 3.9052267616603465`*^9, 
   3.90522752330534*^9, 3.905411653965809*^9, 3.90651355369979*^9, 
   3.9066854467842903`*^9, 3.906691431972357*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"2952c2d1-5438-4e68-99c9-97be1e41a75d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Values", "@", 
  RowBox[{"datasetPyr", "[", 
   RowBox[{"[", "3", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9049016635199304`*^9, 3.904901674673255*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"856acb7d-9429-449f-b6ff-3498d89ff6aa"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", ",", "0", ",",
    "0", ",", "0", ",", 
   RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", ",", "0", ",",
    "0", ",", "0", ",", 
   RowBox[{"Missing", "[", "]"}], ",", "43.89999999999999`", ",", "398.5`", 
   ",", "4", ",", "44.400000000000006`", ",", "230.79999999999998`", ",", 
   "118.2`", ",", "99.07229683418063`", ",", "22.099999999999998`", ",", 
   "190.`", ",", "5", ",", "17.7`", ",", "75.7`", ",", "41.975`", ",", 
   "25.02896655211051`"}], "}"}]], "Output",
 CellChangeTimes->{{3.9049016692764487`*^9, 3.904901675204727*^9}, 
   3.904916677275182*^9, 3.904921005709313*^9, 3.9049210879558325`*^9, 
   3.9049839306424026`*^9, 3.9052267616964192`*^9, 3.9052275233392487`*^9, 
   3.9054116539997187`*^9, 3.9065135537346945`*^9, 3.906685446805236*^9, 
   3.906691432001255*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"555cfd9c-85e3-4fb9-a266-641696947ced"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Interneuroni", "Subsubsection",
 CellChangeTimes->{{3.9037596751337037`*^9, 
  3.903759686212305*^9}},ExpressionUUID->"d8c2a145-de67-4e82-b2de-\
4acbdc397837"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "filename", " ", "=", " ", 
   "\"\<expNeuronDB_V006small_interneuroni_dati_2022_07_15\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dbNeuIntOrig", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{
     "filepath", "<>", "\"\<\\\\\>\"", "<>", "filename", "<>", 
      "\"\<.json\>\""}], ",", "\"\<RawJSON\>\""}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8708371643172398`*^9, 3.8708371649739227`*^9}, {
   3.870837205358247*^9, 3.8708372889594383`*^9}, {3.8708373717294827`*^9, 
   3.870837375102536*^9}, {3.8708374759074984`*^9, 3.870837491642853*^9}, {
   3.870837678301423*^9, 3.8708376808758116`*^9}, {3.870838008765304*^9, 
   3.8708380426274614`*^9}, {3.870838141648035*^9, 3.870838156343728*^9}, 
   3.870838188336751*^9, 3.8708389006803474`*^9, 3.8708395721715164`*^9, {
   3.899807266745392*^9, 3.899807277069441*^9}, {3.903707485682394*^9, 
   3.9037075063491807`*^9}, {3.903757621461687*^9, 3.903757634322569*^9}, {
   3.9041278458304553`*^9, 3.9041278570353436`*^9}, {3.9041282793914766`*^9, 
   3.90412829533422*^9}, {3.904128713554641*^9, 3.904128726219948*^9}, 
   3.904128765992961*^9, {3.9041289925473223`*^9, 3.9041289974171224`*^9}, {
   3.904181654676033*^9, 3.9041816796859493`*^9}, 
   3.9121395246156125`*^9},ExpressionUUID->"45c8a981-a573-4587-bab1-\
15639d455501"],

Cell[BoxData[
 RowBox[{
  RowBox[{"datasetInt", "=", 
   RowBox[{"creaDatasetSpikeISI", "[", 
    RowBox[{"dbNeuIntOrig", ",", "\"\<exp\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.903758141270085*^9, 3.9037582707399254`*^9}, {
   3.903758336138467*^9, 3.903758346482787*^9}, {3.903758384257289*^9, 
   3.903758715745275*^9}, {3.9037587587653174`*^9, 3.9037588004009714`*^9}, {
   3.9037588322452564`*^9, 3.9037588499267583`*^9}, {3.903759061970398*^9, 
   3.903759111993044*^9}, {3.9037591516010323`*^9, 3.903759227306099*^9}, {
   3.9037592583166714`*^9, 3.9037593318534384`*^9}, {3.903759404500464*^9, 
   3.903759423555605*^9}, {3.903759469991645*^9, 3.9037595434200544`*^9}, {
   3.9037597046407757`*^9, 3.9037597140484924`*^9}, {3.903761506117694*^9, 
   3.903761510772088*^9}, {3.9037616438637223`*^9, 3.903761705626234*^9}, {
   3.903761928141368*^9, 3.9037619381220856`*^9}, 3.90376230836451*^9, {
   3.9037806487725153`*^9, 3.903780649669956*^9}, 3.903780700178892*^9, {
   3.903780789952689*^9, 3.9037808095618887`*^9}, {3.9037821550721436`*^9, 
   3.9037821700118237`*^9}, {3.9041842017871075`*^9, 
   3.9041842214864626`*^9}, {3.90472308007992*^9, 3.904723080267497*^9}, {
   3.904820198864318*^9, 3.9048202052520504`*^9}, {3.9048295758288684`*^9, 
   3.904829588784957*^9}, {3.904829720437092*^9, 3.904829727156568*^9}, 
   3.9048316635296965`*^9, 3.9048776714092236`*^9, 3.904901694451867*^9},
 CellLabel->"In[12]:=",ExpressionUUID->"e6a0c9f3-69eb-49fe-9223-c382ef11a376"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"datasetInt", "[", 
  RowBox[{"[", "3", "]"}], "]"}]], "Input",
 CellChangeTimes->{3.904820228025489*^9},
 CellLabel->"In[13]:=",ExpressionUUID->"25408df2-52d2-42c9-97b2-a84079a33405"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"200 - time1stSpike\"\>", "\[Rule]", "0"}], ",", 
   RowBox[{"\<\"200 - timeLastSpike\"\>", "\[Rule]", "0"}], ",", 
   RowBox[{"\<\"200 - spikeNumber\"\>", "\[Rule]", "0"}], ",", 
   RowBox[{"\<\"200 - ISImin\"\>", "\[Rule]", "0"}], ",", 
   RowBox[{"\<\"200 - ISImax\"\>", "\[Rule]", "0"}], ",", 
   RowBox[{"\<\"200 - ISImean\"\>", "\[Rule]", "0"}], ",", 
   RowBox[{"\<\"200 - ISIstd\"\>", "\[Rule]", 
    RowBox[{"Missing", "[", "]"}]}], ",", 
   RowBox[{"\<\"400 - time1stSpike\"\>", "\[Rule]", "16.000000000000004`"}], 
   ",", 
   RowBox[{"\<\"400 - timeLastSpike\"\>", "\[Rule]", "134.60000000000002`"}], 
   ",", 
   RowBox[{"\<\"400 - spikeNumber\"\>", "\[Rule]", "11"}], ",", 
   RowBox[{"\<\"400 - ISImin\"\>", "\[Rule]", "3.5`"}], ",", 
   RowBox[{"\<\"400 - ISImax\"\>", "\[Rule]", "23.200000000000003`"}], ",", 
   RowBox[{"\<\"400 - ISImean\"\>", "\[Rule]", "11.860000000000003`"}], ",", 
   RowBox[{"\<\"400 - ISIstd\"\>", "\[Rule]", "6.123216293564833`"}], ",", 
   RowBox[{"\<\"600 - time1stSpike\"\>", "\[Rule]", "1.5999999999999979`"}], 
   ",", 
   RowBox[{"\<\"600 - timeLastSpike\"\>", "\[Rule]", "210.60000000000002`"}], 
   ",", 
   RowBox[{"\<\"600 - spikeNumber\"\>", "\[Rule]", "17"}], ",", 
   RowBox[{"\<\"600 - ISImin\"\>", "\[Rule]", "6.100000000000001`"}], ",", 
   RowBox[{"\<\"600 - ISImax\"\>", "\[Rule]", "23.30000000000001`"}], ",", 
   RowBox[{"\<\"600 - ISImean\"\>", "\[Rule]", "13.062500000000002`"}], ",", 
   RowBox[{"\<\"600 - ISIstd\"\>", "\[Rule]", "5.035457609128822`"}], ",", 
   RowBox[{"\<\"800 - time1stSpike\"\>", "\[Rule]", "6.199999999999999`"}], 
   ",", 
   RowBox[{"\<\"800 - timeLastSpike\"\>", "\[Rule]", "398.7`"}], ",", 
   RowBox[{"\<\"800 - spikeNumber\"\>", "\[Rule]", "21"}], ",", 
   RowBox[{"\<\"800 - ISImin\"\>", "\[Rule]", "5.699999999999996`"}], ",", 
   RowBox[{"\<\"800 - ISImax\"\>", "\[Rule]", "110.69999999999999`"}], ",", 
   RowBox[{"\<\"800 - ISImean\"\>", "\[Rule]", "19.624999999999996`"}], ",", 
   RowBox[{"\<\"800 - ISIstd\"\>", "\[Rule]", "26.588241861077567`"}], ",", 
   RowBox[{"\<\"1000 - time1stSpike\"\>", "\[Rule]", "3.6999999999999993`"}], 
   ",", 
   RowBox[{"\<\"1000 - timeLastSpike\"\>", "\[Rule]", "329.2`"}], ",", 
   RowBox[{"\<\"1000 - spikeNumber\"\>", "\[Rule]", "29"}], ",", 
   RowBox[{"\<\"1000 - ISImin\"\>", "\[Rule]", "4.199999999999996`"}], ",", 
   RowBox[{"\<\"1000 - ISImax\"\>", "\[Rule]", "35.69999999999999`"}], ",", 
   RowBox[{"\<\"1000 - ISImean\"\>", "\[Rule]", "11.624999999999998`"}], ",", 
   RowBox[{"\<\"1000 - ISIstd\"\>", "\[Rule]", "6.96747071383498`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.9048202368191442`*^9, 3.9048296293139524`*^9, {3.904829714328885*^9, 
   3.904829729147011*^9}, 3.9048300666238966`*^9, 3.904831666768404*^9, 
   3.9048776763895063`*^9, 3.904893584229891*^9, 3.9049016981510077`*^9, 
   3.904916677336741*^9, 3.9049210114233804`*^9, 3.904921091124262*^9, 
   3.904983930700247*^9, 3.905226761758255*^9, 3.9052275233951006`*^9, 
   3.9054116543856153`*^9, 3.9065135537815695`*^9, 3.906685446982297*^9, 
   3.9066914322706175`*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"c84e3905-6533-4e5d-8735-4a8dd72d878e"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "filename", " ", "=", " ", 
   "\"\<neuronOriginalNeuronsDB_V006small_par_2023_06_15_int\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dbNeuIntOrig", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{
     "filepath", "<>", "\"\<\\\\\>\"", "<>", "filename", "<>", 
      "\"\<.json\>\""}], ",", "\"\<RawJSON\>\""}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8708371643172398`*^9, 3.8708371649739227`*^9}, {
   3.870837205358247*^9, 3.8708372889594383`*^9}, {3.8708373717294827`*^9, 
   3.870837375102536*^9}, {3.8708374759074984`*^9, 3.870837491642853*^9}, {
   3.870837678301423*^9, 3.8708376808758116`*^9}, {3.870838008765304*^9, 
   3.8708380426274614`*^9}, {3.870838141648035*^9, 3.870838156343728*^9}, 
   3.870838188336751*^9, 3.8708389006803474`*^9, 3.8708395721715164`*^9, {
   3.899807266745392*^9, 3.899807277069441*^9}, {3.903707485682394*^9, 
   3.9037075063491807`*^9}, {3.903757621461687*^9, 3.903757634322569*^9}, {
   3.9041278458304553`*^9, 3.9041278570353436`*^9}, {3.9041282793914766`*^9, 
   3.90412829533422*^9}, {3.904128713554641*^9, 3.904128726219948*^9}, 
   3.904128765992961*^9, {3.9041289925473223`*^9, 3.9041289974171224`*^9}, {
   3.904181654676033*^9, 3.904181715123577*^9}, 
   3.9121395343187246`*^9},ExpressionUUID->"4ba32ffa-8e72-40ee-b0c4-\
9861189d4038"],

Cell[BoxData[
 RowBox[{
  RowBox[{"datasetIntSim", "=", 
   RowBox[{"creaDatasetSpikeISI", "[", 
    RowBox[{"dbNeuIntOrig", ",", "\"\<sim\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.9048202503654203`*^9, {3.9048297342405124`*^9, 3.9048297370031557`*^9}, 
   3.9048316748734255`*^9, 3.904877681870584*^9, 3.904901705028311*^9},
 CellLabel->"In[17]:=",ExpressionUUID->"0d30b48a-8790-4dc3-8035-96dbed614ac6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"datasetIntSim", "[", 
  RowBox[{"[", "7", "]"}], "]"}]], "Input",
 CellChangeTimes->{3.904820262293311*^9, 3.904829753128255*^9, 
  3.9049589765108585`*^9},
 CellLabel->"In[18]:=",ExpressionUUID->"1257dae3-a260-41ca-bb98-ecb092c3ded4"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"200 - time1stSpike\"\>", "\[Rule]", "0"}], ",", 
   RowBox[{"\<\"200 - timeLastSpike\"\>", "\[Rule]", "0"}], ",", 
   RowBox[{"\<\"200 - spikeNumber\"\>", "\[Rule]", "0"}], ",", 
   RowBox[{"\<\"200 - ISImin\"\>", "\[Rule]", "0"}], ",", 
   RowBox[{"\<\"200 - ISImax\"\>", "\[Rule]", "0"}], ",", 
   RowBox[{"\<\"200 - ISImean\"\>", "\[Rule]", "0"}], ",", 
   RowBox[{"\<\"200 - ISIstd\"\>", "\[Rule]", 
    RowBox[{"Missing", "[", "]"}]}], ",", 
   RowBox[{"\<\"400 - time1stSpike\"\>", "\[Rule]", "15.2`"}], ",", 
   RowBox[{"\<\"400 - timeLastSpike\"\>", "\[Rule]", "29.2`"}], ",", 
   RowBox[{"\<\"400 - spikeNumber\"\>", "\[Rule]", "3"}], ",", 
   RowBox[{"\<\"400 - ISImin\"\>", "\[Rule]", "6.`"}], ",", 
   RowBox[{"\<\"400 - ISImax\"\>", "\[Rule]", "8.`"}], ",", 
   RowBox[{"\<\"400 - ISImean\"\>", "\[Rule]", "7.`"}], ",", 
   RowBox[{"\<\"400 - ISIstd\"\>", "\[Rule]", "1.4142135623730951`"}], ",", 
   RowBox[{"\<\"600 - time1stSpike\"\>", "\[Rule]", "7.6`"}], ",", 
   RowBox[{"\<\"600 - timeLastSpike\"\>", "\[Rule]", "252.8`"}], ",", 
   RowBox[{"\<\"600 - spikeNumber\"\>", "\[Rule]", "14"}], ",", 
   RowBox[{"\<\"600 - ISImin\"\>", "\[Rule]", "3.8000000000000007`"}], ",", 
   RowBox[{"\<\"600 - ISImax\"\>", "\[Rule]", "31.200000000000017`"}], ",", 
   RowBox[{"\<\"600 - ISImean\"\>", "\[Rule]", "18.861538461538462`"}], ",", 
   RowBox[{"\<\"600 - ISIstd\"\>", "\[Rule]", "10.40236659463753`"}], ",", 
   RowBox[{"\<\"800 - time1stSpike\"\>", "\[Rule]", "5.`"}], ",", 
   RowBox[{"\<\"800 - timeLastSpike\"\>", "\[Rule]", "380.6`"}], ",", 
   RowBox[{"\<\"800 - spikeNumber\"\>", "\[Rule]", "18"}], ",", 
   RowBox[{"\<\"800 - ISImin\"\>", "\[Rule]", "3.1999999999999993`"}], ",", 
   RowBox[{"\<\"800 - ISImax\"\>", "\[Rule]", "34.60000000000002`"}], ",", 
   RowBox[{"\<\"800 - ISImean\"\>", "\[Rule]", "22.094117647058823`"}], ",", 
   RowBox[{"\<\"800 - ISIstd\"\>", "\[Rule]", "12.050957979982096`"}], ",", 
   RowBox[{"\<\"1000 - time1stSpike\"\>", "\[Rule]", "3.8`"}], ",", 
   RowBox[{"\<\"1000 - timeLastSpike\"\>", "\[Rule]", "355.4`"}], ",", 
   RowBox[{"\<\"1000 - spikeNumber\"\>", "\[Rule]", "17"}], ",", 
   RowBox[{"\<\"1000 - ISImin\"\>", "\[Rule]", "3.`"}], ",", 
   RowBox[{"\<\"1000 - ISImax\"\>", "\[Rule]", "36.`"}], ",", 
   RowBox[{"\<\"1000 - ISImean\"\>", "\[Rule]", "21.974999999999998`"}], ",", 
   RowBox[{"\<\"1000 - ISIstd\"\>", "\[Rule]", "13.003358540520725`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.90482026278136*^9, 3.904820289263955*^9}, {
   3.9048297420507035`*^9, 3.9048297535107656`*^9}, 3.9048300725427246`*^9, 
   3.904831678892084*^9, 3.904877684702098*^9, 3.9048935842757697`*^9, 
   3.9049017074582634`*^9, 3.9049166773995895`*^9, 3.904921021881853*^9, 
   3.904921094596297*^9, 3.9049589772548704`*^9, 3.904983930754732*^9, 
   3.905226761810627*^9, 3.905227523444968*^9, 3.9054116544384713`*^9, 
   3.9065135538444014`*^9, 3.9066854470461264`*^9, 3.9066914323803225`*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"41a186da-5abb-419c-bef9-7fb95deb5306"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "@", "datasetIntSim"}]], "Input",
 CellChangeTimes->{{3.9048297587989163`*^9, 3.904829763044866*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"ed877582-6514-48df-95ca-287b74e406cc"],

Cell[BoxData["24"], "Output",
 CellChangeTimes->{3.9048297633671255`*^9, 3.9048300761363735`*^9, 
  3.9048316845410986`*^9, 3.904877687707631*^9, 3.904893584305689*^9, 
  3.904901712478521*^9, 3.9049166774374905`*^9, 3.904921097042906*^9, 
  3.9049839307816596`*^9, 3.9052267618495245`*^9, 3.905227523476531*^9, 
  3.9054116544683933`*^9, 3.906513553867341*^9, 3.9066854470660734`*^9, 
  3.906691432389299*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"32e5075f-69b8-4d95-9fa1-024c0deebebd"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Funcions for classification", "Subsection",
 CellChangeTimes->{{3.9049601379892445`*^9, 3.904960138973316*^9}, {
  3.9121381335975933`*^9, 
  3.912138137643623*^9}},ExpressionUUID->"5af86a42-c60f-42c0-8898-\
119933e92589"],

Cell[BoxData[
 RowBox[{
  RowBox[{"classificaCopie", "[", 
   RowBox[{"dbcopie01_", ",", "myClassifier_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "datasetPyrCopie01b", ",", "indexNotNullRows", ",", 
      "datasetPyrCopie01bCleaned", ",", "classificazioneCopie01b", ",", "a1", 
      ",", "meanProbA1", ",", "stdProbA1", ",", "probaInt", ",", "probaPyr"}],
      "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"datasetPyrCopie01b", "=", 
      RowBox[{"creaDatasetSpikeISI", "[", 
       RowBox[{"dbcopie01", ",", "\"\<sim\>\""}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"delete", " ", "empty", " ", "rows"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"indexNotNullRows", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Total", "@", 
           RowBox[{"DeleteCases", "[", 
            RowBox[{
             RowBox[{"Values", "@", 
              RowBox[{"datasetPyrCopie01b", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], ",", 
             RowBox[{"Missing", "[", "]"}]}], "]"}]}], "!=", "0"}], ",", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"indexNotNullRows", ",", "i"}], "]"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "@", "datasetPyrCopie01b"}]}], "}"}]}], "]"}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"datasetPyrCopie01bCleaned", "=", 
      RowBox[{"datasetPyrCopie01b", "[", 
       RowBox[{"[", "indexNotNullRows", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"classificazioneCopie01b", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"myClassifier", "[", 
         RowBox[{
          RowBox[{"datasetPyrCopie01bCleaned", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"\"\<Probabilities\>\"", ",", "\"\<Decision\>\""}], 
           "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "@", "datasetPyrCopie01bCleaned"}]}], "}"}]}], 
       "]"}]}], ";", 
     RowBox[{"a1", "=", 
      RowBox[{"Counts", "[", 
       RowBox[{"classificazioneCopie01b", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"probaPyr", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"classificazioneCopie01b", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "1"}], "]"}], "]"}], "[", "\"\<pyr\>\"", "]"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "@", "datasetPyrCopie01bCleaned"}]}], "}"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"probaInt", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"classificazioneCopie01b", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "1"}], "]"}], "]"}], "[", "\"\<int\>\"", "]"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "@", "datasetPyrCopie01bCleaned"}]}], "}"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"meanProbA1", "=", 
      RowBox[{"<|", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\"\<pyr\>\"", "->", 
         RowBox[{"Mean", "[", "probaPyr", "]"}]}], ",", 
        RowBox[{"\"\<int\>\"", "->", 
         RowBox[{"Mean", "[", "probaInt", "]"}]}]}], "\[IndentingNewLine]", 
       "|>"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"stdProbA1", "=", 
      RowBox[{"<|", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\"\<pyr\>\"", "->", 
         RowBox[{"StandardDeviation", "[", "probaPyr", "]"}]}], ",", 
        RowBox[{"\"\<int\>\"", "->", 
         RowBox[{"StandardDeviation", "[", "probaInt", "]"}]}]}], 
       "\[IndentingNewLine]", "|>"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{"probaPyr", ",", "probaInt", ",", 
        RowBox[{"Length", "@", "indexNotNullRows"}], ",", "a1", ",", 
        "meanProbA1", ",", "stdProbA1"}], "}"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.9049601549921165`*^9, 3.904960381403051*^9}, {
  3.905226735884058*^9, 3.9052267559833746`*^9}, {3.9052268019207573`*^9, 
  3.90522681471798*^9}, {3.905226906861003*^9, 3.9052269178790617`*^9}, {
  3.9052269489862623`*^9, 3.905226957395094*^9}, {3.9052272867659397`*^9, 
  3.9052273962533503`*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"f8a784ae-1c71-471d-8cb1-6131fa302f13"],

Cell[BoxData[
 RowBox[{
  RowBox[{"classificaCopieEtichette", "[", 
   RowBox[{"dbcopie01_", ",", "myClassifier_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "datasetPyrCopie01b", ",", "indexNotNullRows", ",", 
      "datasetPyrCopie01bCleaned", ",", "classificazioneCopie01b", ",", "a1", 
      ",", "meanProbA1", ",", "stdProbA1", ",", "probaInt", ",", "probaPyr"}],
      "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"datasetPyrCopie01b", "=", 
      RowBox[{"creaDatasetSpikeISI", "[", 
       RowBox[{"dbcopie01", ",", "\"\<sim\>\""}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"delete", " ", "empty", " ", "rows"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"indexNotNullRows", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Total", "@", 
           RowBox[{"DeleteCases", "[", 
            RowBox[{
             RowBox[{"Values", "@", 
              RowBox[{"datasetPyrCopie01b", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], ",", 
             RowBox[{"Missing", "[", "]"}]}], "]"}]}], "!=", "0"}], ",", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"indexNotNullRows", ",", "i"}], "]"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "@", "datasetPyrCopie01b"}]}], "}"}]}], "]"}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"datasetPyrCopie01bCleaned", "=", 
      RowBox[{"datasetPyrCopie01b", "[", 
       RowBox[{"[", "indexNotNullRows", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"classificazioneCopie01b", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"myClassifier", "[", 
         RowBox[{
          RowBox[{"datasetPyrCopie01bCleaned", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"\"\<Probabilities\>\"", ",", "\"\<Decision\>\""}], 
           "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "@", "datasetPyrCopie01bCleaned"}]}], "}"}]}], 
       "]"}]}], ";", 
     RowBox[{"a1", "=", 
      RowBox[{"Counts", "[", 
       RowBox[{"classificazioneCopie01b", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"probaPyr", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"classificazioneCopie01b", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "1"}], "]"}], "]"}], "[", "\"\<pyr\>\"", "]"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "@", "datasetPyrCopie01bCleaned"}]}], "}"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"probaInt", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"classificazioneCopie01b", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "1"}], "]"}], "]"}], "[", "\"\<int\>\"", "]"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "@", "datasetPyrCopie01bCleaned"}]}], "}"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"meanProbA1", "=", 
      RowBox[{"<|", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\"\<pyr\>\"", "->", 
         RowBox[{"Mean", "[", "probaPyr", "]"}]}], ",", 
        RowBox[{"\"\<int\>\"", "->", 
         RowBox[{"Mean", "[", "probaInt", "]"}]}]}], "\[IndentingNewLine]", 
       "|>"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"stdProbA1", "=", 
      RowBox[{"<|", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\"\<pyr\>\"", "->", 
         RowBox[{"StandardDeviation", "[", "probaPyr", "]"}]}], ",", 
        RowBox[{"\"\<int\>\"", "->", 
         RowBox[{"StandardDeviation", "[", "probaInt", "]"}]}]}], 
       "\[IndentingNewLine]", "|>"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Keys", "@", "datasetPyrCopie01bCleaned"}], ",", "probaPyr", 
        ",", "probaInt", ",", 
        RowBox[{"Length", "@", "indexNotNullRows"}], ",", "a1", ",", 
        "meanProbA1", ",", "stdProbA1"}], "}"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.9049601549921165`*^9, 3.904960381403051*^9}, {
  3.905226735884058*^9, 3.9052267559833746`*^9}, {3.9052268019207573`*^9, 
  3.90522681471798*^9}, {3.905226906861003*^9, 3.9052269178790617`*^9}, {
  3.9052269489862623`*^9, 3.905226957395094*^9}, {3.9052272867659397`*^9, 
  3.9052273962533503`*^9}, {3.906527348885784*^9, 3.9065273505511684`*^9}, {
  3.9065275001944776`*^9, 3.9065275066478014`*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"03a35647-e952-471d-863e-0c854f149e5a"]
}, Closed]],

Cell[CellGroupData[{

Cell["Classificatore", "Subsection",
 CellChangeTimes->{{3.904723127396061*^9, 
  3.904723130064479*^9}},ExpressionUUID->"dd55a5b2-987f-4904-922b-\
f0fbe9aef09c"],

Cell[CellGroupData[{

Cell["GBT - exp+sim", "Subsubsection",
 CellChangeTimes->{{3.904304767220214*^9, 3.9043047715340824`*^9}, {
  3.904304871679384*^9, 3.904304873505031*^9}, {3.904304925358124*^9, 
  3.904304984271888*^9}, {3.904305043035658*^9, 3.9043050460540147`*^9}, {
  3.904305094593234*^9, 3.904305124891199*^9}, {3.9043051558735085`*^9, 
  3.9043051591960263`*^9}, {3.904305359701338*^9, 3.904305360329772*^9}, {
  3.9048204113631573`*^9, 3.904820412316573*^9}, {3.904984443663531*^9, 
  3.904984444108392*^9}, {3.9052274932071686`*^9, 
  3.9052274978691854`*^9}},ExpressionUUID->"b6a21df0-8423-49aa-a814-\
2345032e8374"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"trainigPyr", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"datasetPyr", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "->", "\"\<pyr\>\""}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "datasetPyr", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"trainigInt", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"datasetInt", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "->", "\"\<int\>\""}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "@", "datasetInt"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"trainigIntSim", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"datasetIntSim", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "->", "\"\<int\>\""}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "@", "datasetIntSim"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.904303544638073*^9, 3.904303585734994*^9}, {
   3.904303649295026*^9, 3.9043036622620363`*^9}, {3.904303693186796*^9, 
   3.904303718744836*^9}, {3.9043037758934264`*^9, 3.904303793358237*^9}, {
   3.9047224145724287`*^9, 3.904722444417462*^9}, 3.9047226314364862`*^9, {
   3.9047232046470957`*^9, 3.9047232113118553`*^9}, {3.904820303473348*^9, 
   3.9048203234022818`*^9}, {3.9049181476764107`*^9, 3.9049181547889833`*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"acd977c5-d42f-4492-a319-f324d0d4af40"],

Cell[BoxData[
 RowBox[{
  RowBox[{"trainingSet", "=", 
   RowBox[{"Flatten", "@", 
    RowBox[{"{", 
     RowBox[{"trainigPyr", ",", "trainigInt", ",", "trainigIntSim"}], 
     "}"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9043039815983596`*^9, 3.904303983068268*^9}, {
   3.904304020234276*^9, 3.9043040463172708`*^9}, {3.904722448864925*^9, 
   3.90472245374968*^9}, 3.9047232203000546`*^9, {3.9049181582801*^9, 
   3.9049181584981184`*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"3a1cc528-7612-41be-ab0e-ee292da78db2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"trainingSet", "[", 
  RowBox[{"[", "60", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9048203848038197`*^9, 3.904820396103603*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"0f51ee35-17b2-40e0-9e7a-d992fe3b4e78"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[LeftAssociation]", 
   RowBox[{
    RowBox[{"\<\"200 - time1stSpike\"\>", "\[Rule]", "3.5000000000000036`"}], 
    ",", 
    RowBox[{"\<\"200 - timeLastSpike\"\>", "\[Rule]", "249.8`"}], ",", 
    RowBox[{"\<\"200 - spikeNumber\"\>", "\[Rule]", "11"}], ",", 
    RowBox[{"\<\"200 - ISImin\"\>", "\[Rule]", "9.399999999999999`"}], ",", 
    RowBox[{"\<\"200 - ISImax\"\>", "\[Rule]", "67.4`"}], ",", 
    RowBox[{"\<\"200 - ISImean\"\>", "\[Rule]", "24.630000000000003`"}], ",", 
    RowBox[{"\<\"200 - ISIstd\"\>", "\[Rule]", "20.03458398758396`"}], ",", 
    RowBox[{"\<\"400 - time1stSpike\"\>", "\[Rule]", "2.599999999999998`"}], 
    ",", 
    RowBox[{"\<\"400 - timeLastSpike\"\>", "\[Rule]", "108.2`"}], ",", 
    RowBox[{"\<\"400 - spikeNumber\"\>", "\[Rule]", "8"}], ",", 
    RowBox[{"\<\"400 - ISImin\"\>", "\[Rule]", "7.100000000000001`"}], ",", 
    RowBox[{"\<\"400 - ISImax\"\>", "\[Rule]", "25.30000000000001`"}], ",", 
    RowBox[{"\<\"400 - ISImean\"\>", "\[Rule]", "15.085714285714287`"}], ",", 
    RowBox[{"\<\"400 - ISIstd\"\>", "\[Rule]", "6.517777886015186`"}], ",", 
    RowBox[{"\<\"600 - time1stSpike\"\>", "\[Rule]", "3.900000000000002`"}], 
    ",", 
    RowBox[{"\<\"600 - timeLastSpike\"\>", "\[Rule]", "367.3`"}], ",", 
    RowBox[{"\<\"600 - spikeNumber\"\>", "\[Rule]", "12"}], ",", 
    RowBox[{"\<\"600 - ISImin\"\>", "\[Rule]", "12.5`"}], ",", 
    RowBox[{"\<\"600 - ISImax\"\>", "\[Rule]", "68.60000000000004`"}], ",", 
    RowBox[{"\<\"600 - ISImean\"\>", "\[Rule]", "33.03636363636363`"}], ",", 
    RowBox[{"\<\"600 - ISIstd\"\>", "\[Rule]", "21.731050261194138`"}], ",", 
    RowBox[{"\<\"800 - time1stSpike\"\>", "\[Rule]", "5.900000000000002`"}], 
    ",", 
    RowBox[{"\<\"800 - timeLastSpike\"\>", "\[Rule]", "289.40000000000003`"}],
     ",", 
    RowBox[{"\<\"800 - spikeNumber\"\>", "\[Rule]", "22"}], ",", 
    RowBox[{"\<\"800 - ISImin\"\>", "\[Rule]", "4.5`"}], ",", 
    RowBox[{"\<\"800 - ISImax\"\>", "\[Rule]", "42.900000000000034`"}], ",", 
    RowBox[{"\<\"800 - ISImean\"\>", "\[Rule]", "13.5`"}], ",", 
    RowBox[{"\<\"800 - ISIstd\"\>", "\[Rule]", "9.593331016909614`"}], ",", 
    RowBox[{"\<\"1000 - time1stSpike\"\>", "\[Rule]", "3.400000000000002`"}], 
    ",", 
    RowBox[{"\<\"1000 - timeLastSpike\"\>", "\[Rule]", 
     "320.90000000000003`"}], ",", 
    RowBox[{"\<\"1000 - spikeNumber\"\>", "\[Rule]", "29"}], ",", 
    RowBox[{"\<\"1000 - ISImin\"\>", "\[Rule]", "4.100000000000001`"}], ",", 
    RowBox[{"\<\"1000 - ISImax\"\>", "\[Rule]", "24.400000000000034`"}], ",", 
    RowBox[{"\<\"1000 - ISImean\"\>", "\[Rule]", "11.339285714285714`"}], ",", 
    RowBox[{"\<\"1000 - ISIstd\"\>", "\[Rule]", "5.071440681109325`"}]}], 
   "\[RightAssociation]"}], "\[Rule]", "\<\"int\"\>"}]], "Output",
 CellChangeTimes->{{3.904820386077771*^9, 3.9048203963596745`*^9}, 
   3.9048300872123737`*^9, 3.9048316882246637`*^9, 3.904877695069767*^9, 
   3.904901769907528*^9, 3.9049181624013443`*^9, 3.90492110143004*^9, 
   3.904984431058136*^9, 3.905227531413463*^9, 3.9065135611905975`*^9, 
   3.9066854521619143`*^9, 3.9066914372841434`*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"3e7abf63-3bf1-4c07-b134-81a21bcecc28"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"myClassifier01", "=", 
  RowBox[{"Classify", "[", 
   RowBox[{"trainingSet", ",", 
    RowBox[{"Method", "\[Rule]", "\"\<GradientBoostedTrees\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.904304780769126*^9, 3.90430480090244*^9}, {
  3.9043048752702036`*^9, 3.9043048908818817`*^9}, {3.904304928050935*^9, 
  3.9043049627336764`*^9}, {3.9043050596078663`*^9, 3.9043051311699085`*^9}, {
  3.904305162188182*^9, 3.9043051653593388`*^9}, {3.9047226387546415`*^9, 
  3.904722642321561*^9}, {3.904723271117919*^9, 3.9047232715915527`*^9}, {
  3.9048204156468844`*^9, 3.904820420532517*^9}, {3.904984426244841*^9, 
  3.904984428465166*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"3f100938-d687-4b1a-a21f-ecbf7ccd576f"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ClassifierFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{
               PointSize[0.13], 
               GrayLevel[0.45], 
               
               PointBox[{{0.9821769431797024, -0.440194219686987}, {
                1.1339776261519132`, 0.8056918676854272}, {0.5279892326667741,
                 0.6574306661126254}, {0.022147046479890797`, 
                1.4937877187998898`}}], 
               GrayLevel[0.7], 
               
               PointBox[{{-0.9815166384819979, 
                0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
               GrayLevel[0.55], 
               AbsoluteThickness[1.5], 
               LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
             Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Thickness[Tiny], 
                GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, 
              LabelStyle -> {FontFamily -> "Arial"}, 
              Method -> {"ScalingFunctions" -> None}, 
              PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> True,
               PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
              Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
             GrayLevel[0.94]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TemplateBox[{"\"Mixed\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "35", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\""}], "}"}], Short[#, 10]& ]], Annotation[#, 
                    
                    Short[{"Numerical", "Numerical", "Numerical", "Numerical",
                     "Numerical", "Numerical", "Numerical", "Numerical", 
                    "Numerical", "Numerical", "Numerical", "Numerical", 
                    "Numerical", "Numerical", "Numerical", "Numerical", 
                    "Numerical", "Numerical", "Numerical", "Numerical", 
                    "Numerical", "Numerical", "Numerical", "Numerical", 
                    "Numerical", "Numerical", "Numerical", "Numerical", 
                    "Numerical", "Numerical", "Numerical", "Numerical", 
                    "Numerical", "Numerical", "Numerical"}, 10], 
                    "Tooltip"]& ], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{",", "\",\"", "\"int\"", "\"pyr\""}, 
                   "RowWithSeparators"], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{
               PointSize[0.13], 
               GrayLevel[0.45], 
               
               PointBox[{{0.9821769431797024, -0.440194219686987}, {
                1.1339776261519132`, 0.8056918676854272}, {0.5279892326667741,
                 0.6574306661126254}, {0.022147046479890797`, 
                1.4937877187998898`}}], 
               GrayLevel[0.7], 
               
               PointBox[{{-0.9815166384819979, 
                0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
               GrayLevel[0.55], 
               AbsoluteThickness[1.5], 
               LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
             Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Thickness[Tiny], 
                GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, 
              LabelStyle -> {FontFamily -> "Arial"}, 
              Method -> {"ScalingFunctions" -> None}, 
              PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> True,
               PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
              Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
             GrayLevel[0.94]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TemplateBox[{"\"Mixed\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "35", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\""}], "}"}], Short[#, 10]& ]], Annotation[#, 
                    
                    Short[{"Numerical", "Numerical", "Numerical", "Numerical",
                     "Numerical", "Numerical", "Numerical", "Numerical", 
                    "Numerical", "Numerical", "Numerical", "Numerical", 
                    "Numerical", "Numerical", "Numerical", "Numerical", 
                    "Numerical", "Numerical", "Numerical", "Numerical", 
                    "Numerical", "Numerical", "Numerical", "Numerical", 
                    "Numerical", "Numerical", "Numerical", "Numerical", 
                    "Numerical", "Numerical", "Numerical", "Numerical", 
                    "Numerical", "Numerical", "Numerical"}, 10], 
                    "Tooltip"]& ], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{",", "\",\"", "\"int\"", "\"pyr\""}, 
                   "RowWithSeparators"], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"GradientBoostedTrees\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                 "\"Number of training examples: \"", 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["108", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ClassifierFunction[<|
   "ExampleNumber" -> 108, "ClassNumber" -> 2, 
    "Input" -> <|
     "Preprocessor" -> 
      MachineLearning`MLProcessor[
       "ToMLDataset", <|
        "Input" -> <|
          "200 - time1stSpike" -> <|"Type" -> "Numerical"|>, 
           "200 - timeLastSpike" -> <|"Type" -> "Numerical"|>, 
           "200 - spikeNumber" -> <|"Type" -> "Numerical"|>, 
           "200 - ISImin" -> <|"Type" -> "Numerical"|>, 
           "200 - ISImax" -> <|"Type" -> "Numerical"|>, 
           "200 - ISImean" -> <|"Type" -> "Numerical"|>, 
           "200 - ISIstd" -> <|"Type" -> "Numerical"|>, 
           "400 - time1stSpike" -> <|"Type" -> "Numerical"|>, 
           "400 - timeLastSpike" -> <|"Type" -> "Numerical"|>, 
           "400 - spikeNumber" -> <|"Type" -> "Numerical"|>, 
           "400 - ISImin" -> <|"Type" -> "Numerical"|>, 
           "400 - ISImax" -> <|"Type" -> "Numerical"|>, 
           "400 - ISImean" -> <|"Type" -> "Numerical"|>, 
           "400 - ISIstd" -> <|"Type" -> "Numerical"|>, 
           "600 - time1stSpike" -> <|"Type" -> "Numerical"|>, 
           "600 - timeLastSpike" -> <|"Type" -> "Numerical"|>, 
           "600 - spikeNumber" -> <|"Type" -> "Numerical"|>, 
           "600 - ISImin" -> <|"Type" -> "Numerical"|>, 
           "600 - ISImax" -> <|"Type" -> "Numerical"|>, 
           "600 - ISImean" -> <|"Type" -> "Numerical"|>, 
           "600 - ISIstd" -> <|"Type" -> "Numerical"|>, 
           "800 - time1stSpike" -> <|"Type" -> "Numerical"|>, 
           "800 - timeLastSpike" -> <|"Type" -> "Numerical"|>, 
           "800 - spikeNumber" -> <|"Type" -> "Numerical"|>, 
           "800 - ISImin" -> <|"Type" -> "Numerical"|>, 
           "800 - ISImax" -> <|"Type" -> "Numerical"|>, 
           "800 - ISImean" -> <|"Type" -> "Numerical"|>, 
           "800 - ISIstd" -> <|"Type" -> "Numerical"|>, 
           "1000 - time1stSpike" -> <|"Type" -> "Numerical"|>, 
           "1000 - timeLastSpike" -> <|"Type" -> "Numerical"|>, 
           "1000 - spikeNumber" -> <|"Type" -> "Numerical"|>, 
           "1000 - ISImin" -> <|"Type" -> "Numerical"|>, 
           "1000 - ISImax" -> <|"Type" -> "Numerical"|>, 
           "1000 - ISImean" -> <|"Type" -> "Numerical"|>, 
           "1000 - ISIstd" -> <|"Type" -> "Numerical"|>|>, 
         "Output" -> <|
          "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f2" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f6" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f8" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f9" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f10" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f11" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f12" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f13" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f14" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f15" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f16" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f17" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f18" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f19" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f20" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f21" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f22" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f23" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f24" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f25" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f26" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f27" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f28" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f29" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f30" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f31" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f32" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f33" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f34" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f35" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
         "Preprocessor" -> 
         MachineLearning`MLProcessor["Sequence", <|"Processors" -> {
              MachineLearning`MLProcessor[
              "FromNamedFeatures", <|
               "FeatureNames" -> {
                 "200 - time1stSpike", "200 - timeLastSpike", 
                  "200 - spikeNumber", "200 - ISImin", "200 - ISImax", 
                  "200 - ISImean", "200 - ISIstd", "400 - time1stSpike", 
                  "400 - timeLastSpike", "400 - spikeNumber", "400 - ISImin", 
                  "400 - ISImax", "400 - ISImean", "400 - ISIstd", 
                  "600 - time1stSpike", "600 - timeLastSpike", 
                  "600 - spikeNumber", "600 - ISImin", "600 - ISImax", 
                  "600 - ISImean", "600 - ISIstd", "800 - time1stSpike", 
                  "800 - timeLastSpike", "800 - spikeNumber", "800 - ISImin", 
                  "800 - ISImax", "800 - ISImean", "800 - ISIstd", 
                  "1000 - time1stSpike", "1000 - timeLastSpike", 
                  "1000 - spikeNumber", "1000 - ISImin", "1000 - ISImax", 
                  "1000 - ISImean", "1000 - ISIstd"}|>], 
              MachineLearning`MLProcessor[
              "Transpose", <|"FeatureNumber" -> 35|>], 
              MachineLearning`MLProcessor[
              "WrapMLDataset", <|
               "FeatureTypes" -> {
                 "Numerical", "Numerical", "Numerical", "Numerical", 
                  "Numerical", "Numerical", "Numerical", "Numerical", 
                  "Numerical", "Numerical", "Numerical", "Numerical", 
                  "Numerical", "Numerical", "Numerical", "Numerical", 
                  "Numerical", "Numerical", "Numerical", "Numerical", 
                  "Numerical", "Numerical", "Numerical", "Numerical", 
                  "Numerical", "Numerical", "Numerical", "Numerical", 
                  "Numerical", "Numerical", "Numerical", "Numerical", 
                  "Numerical", "Numerical", "Numerical"}, 
                "FeatureKeys" -> {
                 "f1", "f2", "f3", "f4", "f5", "f6", "f7", "f8", "f9", "f10", 
                  "f11", "f12", "f13", "f14", "f15", "f16", "f17", "f18", 
                  "f19", "f20", "f21", "f22", "f23", "f24", "f25", "f26", 
                  "f27", "f28", "f29", "f30", "f31", "f32", "f33", "f34", 
                  "f35"}, "FeatureWeights" -> Automatic, "ExampleWeights" -> 
                Automatic, "RawExample" -> Missing["KeyAbsent", "RawExample"],
                 "StructurePreserving" -> False|>]}|>], "ScalarFeature" -> 
         False, "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
         "Missing" -> "Allowed"|>], "Processor" -> 
      MachineLearning`MLProcessor[
       "Sequence", <|
        "Input" -> <|
          "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f2" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f6" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f8" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f9" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f10" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f11" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f12" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f13" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f14" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f15" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f16" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f17" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f18" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f19" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f20" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f21" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f22" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f23" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f24" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f25" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f26" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f27" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f28" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f29" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f30" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f31" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f32" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f33" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f34" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f35" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
         "Output" -> <|
          "(f1f2f3f4f5f6f7f8f9f10f11f12f13f14f15f16f17f18f19f20f21f22f23f24f25\
f26f27f28f29f30f31f32f33f34f35)" -> <|
            "Type" -> "NumericalVector", "Weight" -> 35|>|>, "Processors" -> {
           MachineLearning`MLProcessor[
           "SynthesizeMissingValues", <|
            "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
             "StructurePreserving" -> True, 
             "Input" -> <|
              "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f2" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f6" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f8" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f9" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f10" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f11" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f12" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f13" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f14" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f15" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f16" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f17" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f18" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f19" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f20" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f21" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f22" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f23" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f24" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f25" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f26" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f27" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f28" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f29" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f30" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f31" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f32" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f33" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f34" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f35" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
             "Distribution" -> 
             LearnedDistribution[<|
               "ExampleNumber" -> 108, "Preprocessor" -> 
                MachineLearning`MLProcessor[
                 "ToMLDataset", <|
                  "Input" -> <|
                    "f1" -> <|"Type" -> "Numerical"|>, 
                    "f2" -> <|"Type" -> "Numerical"|>, 
                    "f3" -> <|"Type" -> "Numerical"|>, 
                    "f4" -> <|"Type" -> "Numerical"|>, 
                    "f5" -> <|"Type" -> "Numerical"|>, 
                    "f6" -> <|"Type" -> "Numerical"|>, 
                    "f7" -> <|"Type" -> "Numerical"|>, 
                    "f8" -> <|"Type" -> "Numerical"|>, 
                    "f9" -> <|"Type" -> "Numerical"|>, 
                    "f10" -> <|"Type" -> "Numerical"|>, 
                    "f11" -> <|"Type" -> "Numerical"|>, 
                    "f12" -> <|"Type" -> "Numerical"|>, 
                    "f13" -> <|"Type" -> "Numerical"|>, 
                    "f14" -> <|"Type" -> "Numerical"|>, 
                    "f15" -> <|"Type" -> "Numerical"|>, 
                    "f16" -> <|"Type" -> "Numerical"|>, 
                    "f17" -> <|"Type" -> "Numerical"|>, 
                    "f18" -> <|"Type" -> "Numerical"|>, 
                    "f19" -> <|"Type" -> "Numerical"|>, 
                    "f20" -> <|"Type" -> "Numerical"|>, 
                    "f21" -> <|"Type" -> "Numerical"|>, 
                    "f22" -> <|"Type" -> "Numerical"|>, 
                    "f23" -> <|"Type" -> "Numerical"|>, 
                    "f24" -> <|"Type" -> "Numerical"|>, 
                    "f25" -> <|"Type" -> "Numerical"|>, 
                    "f26" -> <|"Type" -> "Numerical"|>, 
                    "f27" -> <|"Type" -> "Numerical"|>, 
                    "f28" -> <|"Type" -> "Numerical"|>, 
                    "f29" -> <|"Type" -> "Numerical"|>, 
                    "f30" -> <|"Type" -> "Numerical"|>, 
                    "f31" -> <|"Type" -> "Numerical"|>, 
                    "f32" -> <|"Type" -> "Numerical"|>, 
                    "f33" -> <|"Type" -> "Numerical"|>, 
                    "f34" -> <|"Type" -> "Numerical"|>, 
                    "f35" -> <|"Type" -> "Numerical"|>|>, 
                   "Output" -> <|
                    "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f2" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f6" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f8" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f9" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f10" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f11" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f12" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f13" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f14" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f15" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f16" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f17" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f18" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f19" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f20" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f21" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f22" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f23" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f24" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f25" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f26" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f27" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f28" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f29" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f30" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f31" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f32" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f33" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f34" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f35" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                   "Preprocessor" -> MachineLearning`MLProcessor["Identity"], 
                   "ScalarFeature" -> False, "Invertibility" -> "Perfect", 
                   "StructurePreserving" -> False, "Missing" -> "Allowed"|>], 
                "Processor" -> 
                MachineLearning`MLProcessor[
                 "Sequence", <|
                  "Input" -> <|
                    "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f2" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f6" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f8" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f9" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f10" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f11" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f12" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f13" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f14" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f15" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f16" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f17" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f18" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f19" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f20" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f21" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f22" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f23" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f24" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f25" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f26" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f27" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f28" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f29" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f30" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f31" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f32" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f33" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f34" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f35" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                   "Output" -> <|
                    "(f1f2f3f4f5f6f7f8f9f10f11f12f13f14f15f16f17f18f19f20f21f2\
2f23f24f25f26f27f28f29f30f31f32f33f34f35)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 35|>|>, 
                   "Processors" -> {
                    MachineLearning`MLProcessor[
                    "ToVector", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f2" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f6" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f8" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f9" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f10" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f11" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f12" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f13" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f14" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f15" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f16" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f17" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f18" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f19" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f20" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f21" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f22" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f23" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f24" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f25" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f26" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f27" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f28" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f29" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f30" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f31" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f32" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f33" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f34" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f35" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                    "Output" -> <|
                    "(f1f2f3f4f5f6f7f8f9f10f11f12f13f14f15f16f17f18f19f20f21f2\
2f23f24f25f26f27f28f29f30f31f32f33f34f35)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 35|>|>, 
                    "Version" -> {13.2, 1}, "ID" -> 4349986068316886955|>], 
                    MachineLearning`MLProcessor[
                    "Standardize", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "(f1f2f3f4f5f6f7f8f9f10f11f12f13f14f15f16f17f18f19f20f21f2\
2f23f24f25f26f27f28f29f30f31f32f33f34f35)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 35|>|>, 
                    "Mean" -> {6.999074074074075, 76.16111111111111, 1.75, 
                    9.112037037037036, 28.575925925925926`, 18.07942008094786,
                     37.90644552427412, 23.417592592592595`, 
                    170.6101851851852, 4.194444444444445, 24.51666666666667, 
                    56.175, 37.585642479948035`, 26.7538221485504, 
                    21.489814814814817`, 274.9703703703704, 9.87037037037037, 
                    22.751851851851853`, 71.91666666666667, 42.16564895676505,
                     24.573509693937126`, 9.481481481481474, 
                    321.80092592592587`, 16.11111111111111, 
                    12.593518518518529`, 62.04351851851851, 32.65832466712392,
                     19.49861926454304, 5.647222222222223, 324.8481481481482, 
                    20.49074074074074, 8.838888888888889, 50.69537037037038, 
                    24.307165074248932`, 14.641835157156406`}, 
                    "StandardDeviation" -> {17.073121989306802`, 
                    132.11279224734224`, 3.485953120579579, 
                    19.523064325856037`, 55.044866781088075`, 
                    34.05710932121369, 39.43362541045207, 46.40391102737146, 
                    159.92826893236762`, 4.81907877599248, 48.55585376223386, 
                    67.34704529038966, 50.74892783320901, 27.181982037132123`,
                     41.72535243085917, 132.4004900598402, 9.074038753542775, 
                    36.02952444943749, 60.910741345143336`, 38.78342229925278,
                     24.446625852115705`, 11.873099636613947`, 
                    92.49107508888231, 11.563181444093761`, 10.291392584879, 
                    54.16173473033941, 24.094970592230307`, 25.25772070999359,
                     6.167452379009669, 95.77829684261098, 
                    14.792960797818715`, 6.051860505358991, 48.68766829276975,
                     14.82507898156287, 18.86318552790818}, 
                    "Output" -> <|
                    "(f1f2f3f4f5f6f7f8f9f10f11f12f13f14f15f16f17f18f19f20f21f2\
2f23f24f25f26f27f28f29f30f31f32f33f34f35)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 35|>|>, 
                    "Version" -> {13.2, 1}, "ID" -> 5439362325679053469|>]}, 
                   "Invertibility" -> "Perfect", "StructurePreserving" -> 
                   True, "Missing" -> "Allowed"|>], "PerformanceGoal" -> 
                "DirectTraining", "BatchProcessing" -> Automatic, 
                "Model" -> <|"RotationMatrix" -> CompressedData["
1:eJwN1Pc/FAwcwHEqK/GEHiVlJA0aSDwiXx48eszIKIlCZFTqiccoZc/shhJn
k7PPOfN7OK5DmXdmKGXWIytZefrh8x98Xm9Ju9um17ewsbFJ/Yr3V4S5hYoE
Yh3YrepMLRzrAGv69oo2Gyo+Zpq5px+rwJjwKzEZkxX4rEVJ+rpTEfYY8Qp6
6Eeir5aRkHRNJ9Q8jdFx2dEHER99pAO5X+K8KLH65v5+eCy0/VzPiQYgr/81
zBfXAx4fJ/ZMajZjltFffbqEUlzSSQlt6/KC488kLfjICJGPE3eHr4SC8Egq
e/Bvb7H5Pc/IUl0b2idctXQSJCPbTw1ORnghTmeslLbKVsEQYVF+wLcNRF5M
Tn8RbkRfkbWfUa4B+LTXUoIiTQKvwwc+p5Fb4Vvn3XX7eRJccXVQSVjqRCt3
QzWVTwO4GpM8/jCTgRwitNpD4ql4QsCZzmaLsDAssr2fsweGl4xIyyP1yOOQ
/tvpfDIOvwxqSjCgoFeKtg3zVC5ylKhmmqS+xlri/euBAlRwY+ZZO0f3QsXm
ofEKtnywOfkuqtOgDUJ425z8BuvBXGhXT1JLD/ztspgxGduIyVFymRKrFPTZ
97hPsykBI00cv+GFdLBKV7e7dTcVWff+4ylfp6GWmv4DmwtxoHJ51LzrdAm8
a4Ghe5l0fKro4ml7vAEkv05onT3Jgs2X4mqnFWl4+dihogLxKrSM3jYV7pyH
nkv3+APMHsG6xNsHHv7ZqEly0dNYImHntt0J6nMN0Cn1pq00pBT05SR9nbxK
8LZiT5pf/ANoSSMqB4dlAtsjVkTi+j8YNqAVuPzoOfK7OJs7XAvHMg+74SMx
KfiwyNh12eE5Crl21w3qEZFScnaxcLECHtjdrSpiq4SiuX+ftnjRscOLVC7L
9Qpcmh5a1jNT0Vf1d91nd3tg3luA4LGjHCakebca87zFH0MGS4bpVci/+WmA
O6IIt5uJD0rpt6HHvMJLScc6DKN4DOYplOLXAOdkkdkBuJ+QEPsD3wCNX9Hm
fWUb8GxdXf/G2QIq3sbHQ64XgcmEY+9aHQMzqw+WXFYkgPIZfvbXX57j7NFt
GsTORhBnGCyMhzXit5hEJR2pAHxkPuzW5B+CzP4P9HrbNuBV8tSEyAY49fCi
v1x0Kj6JHlI8fPIF1k1sL9bsQ1RhKFwriMiE34IN9/28kAx3kiYtpIgsGBCw
MKtS68DbC9+YFB8yTmmK+cinkcDNJ8g8dywadSKVVmUyqoEmseJYrzII3D6f
tJW30OH2qV3msT7VePqE8qipKgGOr7htS8pLRU1DQ6qeCmISz+4wL6VUAG2x
8rYMB8wsjtQeWqLBj5KDc8/iymDNzqiY9b4Vzmh2nCuoYkLpa3FTp6d04Oco
u2KgRUHvZR+7HV5kOG3veGlBLg2MmKrlHylkIKaVzR3IQvAzCFE8pZoLTYpm
dv5KvZhGKfXadicFfjo3jvIT6LCqTddxaRmAqdvz25wFGBC4qNEwzKzCSn31
bl71Ehjuq7/zWYMT1WPHgp8oFCItelH3Q1k2PDedpyouBQKbYYWjkGAaXlfz
O1salYKi1hH8H3kKgWJB2CPvnA+WoRltuqllQLUtPM7KS4ZGLnlHfnIh7BP9
olhsXQwVNBODpmkKKEtNR75mdYCa9Fjnm2Pl0Mu6yk8OHsXDTOldQmMNqK5X
Pfd7ch6y/Ru+zDtZDispdvOzy30Yl32mltb9Gq3KAryDIppgtSit2nER8bsJ
81TUgUygvE3+3LFKhpbavmU+60601IpuiVovxdgvs4KX+BtAn5lOtHKtBXrN
waMJe9vB3FMs+h65B8fGvwb3O5bBuhrXlwpJCqrMyQ+FjqaDj/BbeXe/OvD2
8/nI8nqL0zOhkbtD0rHsI0X9aslzDHy/lpj7+B1kj9w2rhorxYtnKisbR4tA
T6aAec6eiJudaySJAArWTz7flKIT8Y1j6+C+rBz4MWQX4qo4CIyKfbYRfu8w
Zf2wuVK9PVCjXlllCFLxeN6JsihGE5rs/3BGSt0Wzzz0WVrcpIDgjVwned1+
dDzyH1NlvBTO/51HnrzVBDc2PpE/LRQhKXhi567TjbCNGHYxybAEa+0tmJV7
K2HW7vkB9q48YN+j+DNwCxW7SuK/vOBoAhdP+4kE1w5o8pvf1sP3Br9Lh0K0
eD/MpToKF8gUYfgI6XdaTw08lLGrH5LNhIaJij5nnXToapC1blYlYMmQ7FCS
3HOIFxd91JnRhDOFu+3Z0yrhYmSVRm09A8R0Ay3G3Fm47L0hpBj0DuJ3ix64
YE2Cax4hNjlDD2Bd74/7LiblcN06skfLMheXjs3YWmIRfCIUjnFaEEEngiju
+pKKQ6Oa8XauVHiwcMEq+Jd7DrdETma5FsNhYSZphZcF8yq85Z7d9WhplJ/x
frABlms+M1RE8jCauHG0UqMRzFcUtDP9a/BP6axp640AsM1SEE6casOcxtp/
N4+Gojec+BoY5Iuc/PKconxUjI53VX/7vRtlA8K+jpuVwLU42boZajM+oXiZ
UR5Ggp44d+P7ukKQX0m2ts9lYfPBA2rhi1TkVeGc+MxZDa3crs+4iPchSOOq
4fL2HCDPXCzgNu3AkRPKQlv3NONtZXaFXIsRjPXcceTQnzVgHqdsVsVox4Hm
xA2BkzbYeLd18yslBPkJEWkTJDLGvGoqIv36bHpv73CiRyt+/xkSSRvLgk59
JQNurUoM4PDXl9gkYeEHthyPKRrSZFI/PxHzx+vhUxkcuo3A4ft9VO54NrLS
Zjr3xGaBeVJaSYo9FZf37Tf652Q7immIX02Ys4XhiCsOLyxSkeRR7NwtQkGF
Xd3tr4x7cFl1nFfnEwnyLH/ImQwTgaHkYuDf7I261c8kO/XysVFlOMzVkQlG
hUOzyrPx2J3AsSQr2oZZ52day2KooODj0L8jpBBJ39K/c53Nhjo3H4HTQU9Q
JvTP7xUGPZgS8IbDbrIbgncom/FmUkBcXtrvb/tiDOQ1bTd+3ICCvS7N9n5P
8HJAeul+vQ7UbqO7n3lABWLsU9W1iiJkSYimE0qDgCvflk6ro2OOUN4tF28a
Ovp/bu1L6QDls4MfPC+lAlu/0B+hWmRsjVjNjYxOA2ebnc9OehHwWl7MgNEQ
A2lHD9R8/a8Kdpl2KY0pkVGCxNtZbkaGONFZ/p/MIlz9xNy8da8b17L5KDbq
vRAfI+N1ML0OCgMTBsQSypE9jmwTmduMOr6DscsTL/CSw9jWQok2XNhkOX1Q
eQSNl9Lejb1MhGmWv/vgaRJO9VqofhnowY0N6bEVZjF0beXmMZVoRILp/C2u
kHh0q71DtfGkgLuw89fkmUF8Zb7FY0GyEn2j06PCntbCXm1MNLQhwBPHqcc9
VsVAjXOqajWmI6uEwFsWngwss4SbZv0D6OQBN0YZvTif5D/YF96FYj9YxjRN
AmiZVc/6PSmCL44/xsXMK1Bl890a53grRAU1Eg41/fIuRtaryS8PZHRcbwhO
1iGHDLtkO0cxqo7utG2Ta8HUB1v5zGTzMdepaS/X1lSQVpnNiLmTDT+D+WaW
BuLAaDf9m/E/dXgtvH3v7j9a0VNZaFknKhFaV6TgkXAc7Iyh5vM30fDGvf1R
ulYdaKBzSyTqVAlwcpXy8DjUwPfsMNJCOxF//2texulcNfoucWvYrY3CCZkI
9b3xOXCp/Hz/xJU3eL/qR9dOQypYbl/lSXMvQI2zxTPN4U3w50hBTsaHerAM
s2z3Embg6sY3EU72ATSfduMrs6IDgzPiasIWGspGRK7LtuWD26tEqflBZayV
3+i4bN2ObtSPf3++yYAkZbuz7Vtif7ksBMSfmSDrLV1z5FUuxu7tCuk6SsHU
m8kSIZHtOPXMrWxT7zHMlFsfSRivR22t87f6yumQ9eavDz1reSgnILhccJOO
h1v11dmnasB3WkBtz0YZ9jMFAqVOMcCZbEqI7qXA+ZF/z71PaMaUpSXrR3kD
GPP6nVfM1VaQDY5XUjeho73l0xyHCTtgjOi45wml4/8/L2Zx
                   "], 
                  "Precisions" -> {0.10146503250470458`, 0.21118654491209388`,
                    0.2766684266455923, 0.35301395165477073`, 
                   0.515921488742857, 0.5366181346066528, 0.6241698906333616, 
                   0.8787471430602574, 0.9659093749441514, 1.104665548193479, 
                   1.17241900359983}, "NoisePrecision" -> 7.9158030717753665`,
                   "Processor" -> 
                  MachineLearning`MLProcessor[
                   "Center", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "(f1f2f3f4f5f6f7f8f9f10f11f12f13f14f15f16f17f18f19f20f21f2\
2f23f24f25f26f27f28f29f30f31f32f33f34f35)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 35|>|>, 
                    "Mean" -> {-0.0007245232099047603, \
-4.071276527035362*^-6, -0.0005060909017493868, -0.0007808731819413327, \
-0.00019017568044073796`, 
                    0.00010647656640408248`, -0.0005416122586773829, \
-0.000863141222868894, -0.0005520250497619993, 0.00012595712820034192`, 
                    0.000029783702447572636`, 0.0004793047679604733, 
                    0.0003186561246232515, 
                    0.001549190701649983, -0.0005984917432654511, 
                    0.0001330392980212326, 0.0006016631707187275, 
                    0.00007677449812452632, 
                    0.0005330897345427545, -0.00006917193276083983, 
                    0.00023947453837385018`, 
                    0.0004923215851339739, -0.0002780632763827297, \
-0.00028171068857572304`, -0.0006453927798562812, 
                    0.0004735849393160752, -0.00014721696899468173`, 
                    0.00018504399131406295`, 
                    0.00013060329770123746`, -0.0005871520199682896, \
-0.0002834468090790815, -0.00003601977211836492, 
                    0.00020470756841370355`, -0.00026765482114093084`, \
-0.0005098196790971182}, 
                    "Output" -> <|
                    "(f1f2f3f4f5f6f7f8f9f10f11f12f13f14f15f16f17f18f19f20f21f2\
2f23f24f25f26f27f28f29f30f31f32f33f34f35)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 35|>|>, 
                    "Version" -> {13.2, 1}, "ID" -> 5537938110584055445|>], 
                  "PostProcessor" -> 
                  MachineLearning`MLProcessor[
                   "FirstValues", <|
                    "Info" -> <|"Type" -> "NumericalVector", "Weight" -> 35|>,
                     "Key" -> 
                    "(f1f2f3f4f5f6f7f8f9f10f11f12f13f14f15f16f17f18f19f20f21f2\
2f23f24f25f26f27f28f29f30f31f32f33f34f35)", "Invertibility" -> "Perfect", 
                    "StructurePreserving" -> False, "Missing" -> "Allowed"|>],
                   "Method" -> "Multinormal", 
                  "Options" -> <|
                   "CovarianceType" -> <|
                    "Value" -> "Full", "Options" -> <||>|>, 
                    "IntrinsicDimension" -> <|
                    "Value" -> 11, "Options" -> <||>|>|>|>, 
                "TrainingInformation" -> <|
                 "Configurations" -> 
                  Dataset[<|<|
                    "Value" -> "Multinormal", 
                    "Options" -> <|
                    "CovarianceType" -> <|"Value" -> "Full"|>, 
                    "IntrinsicDimension" -> <|"Value" -> "Heuristic"|>|>, 
                    "NaiveImputer" -> 
                    MachineLearning`MLProcessor[
                    "ImputeMissing", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "(f1f2f3f4f5f6f7f8f9f10f11f12f13f14f15f16f17f18f19f20f21f2\
2f23f24f25f26f27f28f29f30f31f32f33f34f35)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 35|>|>, 
                    "Mean" -> {-0.0007245232099047598, \
-4.0712765270127465`*^-6, -0.0005060909017493585, -0.000780873181941306, \
-0.00019017568044075645`, 
                    0.00010647656640412463`, -0.0005416122586773953, \
-0.0008631412228689115, -0.0005520250497619942, 0.00012595712820031313`, 
                    0.0000297837024475603, 0.0004793047679604178, 
                    0.0003186561246232587, 
                    0.0015491907016500434`, -0.0005984917432654439, 
                    0.00013303929802119664`, 0.0006016631707187121, 
                    0.00007677449812449857, 
                    0.000533089734542725, -0.00006917193276085165, 
                    0.00023947453837374925`, 
                    0.0004923215851339745, -0.0002780632763826937, \
-0.0002817106885758104, -0.0006453927798562883, 
                    0.0004735849393161466, -0.0001472169689947614, 
                    0.0001850439913141223, 
                    0.00013060329770110525`, -0.0005871520199682639, \
-0.00028344680907916166`, -0.00003601977211834025, 
                    0.00020470756841360678`, -0.00026765482114092266`, \
-0.0005098196790971177}, 
                    "StandardDeviation" -> {0.9999786838337517, 
                    1.0000537576104258`, 0.9998711969245784, 
                    0.9990240103803607, 1.0008635586096428`, 
                    0.9992619656345826, 0.9980590997074258, 
                    1.0002123869316686`, 1.0002592686476501`, 
                    0.9995331095711386, 0.9999177923208962, 
                    0.9997102841164142, 1.0000704899988933`, 
                    1.0009245589195779`, 1.0004303005872377`, 
                    1.000127892938849, 0.9999733274422149, 
                    1.0005328849212534`, 1.0005634968458477`, 
                    0.9996564316725021, 1.0015987026770823`, 
                    1.0003271561932128`, 0.9999078112034406, 
                    1.0002483294375544`, 1.0000251865052032`, 
                    0.9998580875130121, 0.9997748004768324, 
                    1.0001025185339203`, 1.0002108959233624`, 
                    1.0000245322857733`, 1.000494594691545, 
                    0.9999742794061184, 1.0007502201338956`, 
                    0.999914862106442, 1.0000128928566772`}, "Method" -> 
                    "NaiveSampler", "VectorLength" -> 35, 
                    "Output" -> <|
                    "(f1f2f3f4f5f6f7f8f9f10f11f12f13f14f15f16f17f18f19f20f21f2\
2f23f24f25f26f27f28f29f30f31f32f33f34f35)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 35|>|>, "Type" -> 
                    "NumericalVector", "Version" -> {13.2, 1}, "ID" -> 
                    275850252711654426|>], "EMIterations" -> 1|> -> <||>|>, 
                    TypeSystem`Assoc[
                    
                    TypeSystem`Struct[{
                    "Value", "Options", "NaiveImputer", "EMIterations"}, {
                    TypeSystem`Atom[String], 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Struct[{"Value"}, {
                    TypeSystem`Atom[String]}], 2], TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer]}], 
                    TypeSystem`Assoc[
                    TypeSystem`UnknownType, TypeSystem`UnknownType, 
                    TypeSystem`AnyLength], 1], <||>], "BestModelInformation" -> 
                  Dataset[<|
                    "Configuration" -> {
                    "Multinormal", "CovarianceType" -> "Full", 
                    "IntrinsicDimension" -> "Heuristic"}, "ModelUtility" -> 
                    Missing[]|>, 
                    TypeSystem`Struct[{"Configuration", "ModelUtility"}, {
                    TypeSystem`Tuple[{
                    TypeSystem`Atom[String], TypeSystem`AnyType, 
                    TypeSystem`AnyType}], TypeSystem`UnknownType}], <||>]|>, 
                "NaiveImputer" -> 
                MachineLearning`MLProcessor[
                 "ImputeMissing", <|
                  "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                   "StructurePreserving" -> True, 
                   "Input" -> <|
                    "(f1f2f3f4f5f6f7f8f9f10f11f12f13f14f15f16f17f18f19f20f21f2\
2f23f24f25f26f27f28f29f30f31f32f33f34f35)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 35|>|>, 
                   "Mean" -> {-0.0007245232099047598, \
-4.0712765270127465`*^-6, -0.0005060909017493585, -0.000780873181941306, \
-0.00019017568044075645`, 
                    0.00010647656640412463`, -0.0005416122586773953, \
-0.0008631412228689115, -0.0005520250497619942, 0.00012595712820031313`, 
                    0.0000297837024475603, 0.0004793047679604178, 
                    0.0003186561246232587, 
                    0.0015491907016500434`, -0.0005984917432654439, 
                    0.00013303929802119664`, 0.0006016631707187121, 
                    0.00007677449812449857, 
                    0.000533089734542725, -0.00006917193276085165, 
                    0.00023947453837374925`, 
                    0.0004923215851339745, -0.0002780632763826937, \
-0.0002817106885758104, -0.0006453927798562883, 
                    0.0004735849393161466, -0.0001472169689947614, 
                    0.0001850439913141223, 
                    0.00013060329770110525`, -0.0005871520199682639, \
-0.00028344680907916166`, -0.00003601977211834025, 
                    0.00020470756841360678`, -0.00026765482114092266`, \
-0.0005098196790971177}, 
                   "StandardDeviation" -> {0.9999786838337517, 
                    1.0000537576104258`, 0.9998711969245784, 
                    0.9990240103803607, 1.0008635586096428`, 
                    0.9992619656345826, 0.9980590997074258, 
                    1.0002123869316686`, 1.0002592686476501`, 
                    0.9995331095711386, 0.9999177923208962, 
                    0.9997102841164142, 1.0000704899988933`, 
                    1.0009245589195779`, 1.0004303005872377`, 
                    1.000127892938849, 0.9999733274422149, 
                    1.0005328849212534`, 1.0005634968458477`, 
                    0.9996564316725021, 1.0015987026770823`, 
                    1.0003271561932128`, 0.9999078112034406, 
                    1.0002483294375544`, 1.0000251865052032`, 
                    0.9998580875130121, 0.9997748004768324, 
                    1.0001025185339203`, 1.0002108959233624`, 
                    1.0000245322857733`, 1.000494594691545, 
                    0.9999742794061184, 1.0007502201338956`, 
                    0.999914862106442, 1.0000128928566772`}, "Method" -> 
                   "NaiveSampler", "VectorLength" -> 35, 
                   "Output" -> <|
                    "(f1f2f3f4f5f6f7f8f9f10f11f12f13f14f15f16f17f18f19f20f21f2\
2f23f24f25f26f27f28f29f30f31f32f33f34f35)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 35|>|>, "Type" -> 
                   "NumericalVector", "Version" -> {13.2, 1}, "ID" -> 
                   275850252711654426|>], "InputDimension" -> 0, 
                "OutputDimension" -> 35, 
                "Log" -> <|
                 "Example" -> 
                  MachineLearning`MLDataset[<|
                    "f1" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, "Values" -> {27.3}, 
                    "ID" -> 7797313148442062539|>, 
                    "f2" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, "Values" -> {36.8}, 
                    "ID" -> 7925723830368100284|>, 
                    "f3" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, "Values" -> {2}, 
                    "ID" -> 4623027067143569383|>, 
                    "f4" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, 
                    "Values" -> {9.499999999999996}, "ID" -> 
                    2378052898592155972|>, 
                    "f5" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, 
                    "Values" -> {9.499999999999996}, "ID" -> 
                    6253742691279981432|>, 
                    "f6" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, 
                    "Values" -> {9.499999999999996}, "ID" -> 
                    7750295046597710659|>, 
                    "f7" -> <|"Type" -> "Numerical", "Weight" -> 1, "Values" -> {
                    Missing[]}, "ID" -> 7101197045517795021|>, 
                    "f8" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, 
                    "Values" -> {10.400000000000002`}, "ID" -> 
                    8774421324316005215|>, 
                    "f9" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, "Values" -> {93.8}, 
                    "ID" -> 8281562983078791711|>, 
                    "f10" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, "Values" -> {3}, 
                    "ID" -> 6615906480011473302|>, 
                    "f11" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, 
                    "Values" -> {8.899999999999999}, "ID" -> 
                    9028491299267496712|>, 
                    "f12" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, "Values" -> {74.5}, 
                    "ID" -> 6724402381697007065|>, 
                    "f13" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, "Values" -> {41.7}, 
                    "ID" -> 3596605380783368622|>, 
                    "f14" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, 
                    "Values" -> {46.38620484583752}, "ID" -> 
                    6713918230488105204|>, 
                    "f15" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, 
                    "Values" -> {12.500000000000004`}, "ID" -> 
                    1226026325406817909|>, 
                    "f16" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, 
                    "Values" -> {396.40000000000003`}, "ID" -> 
                    6347657013844187342|>, 
                    "f17" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, "Values" -> {5}, 
                    "ID" -> 3206313970183223714|>, 
                    "f18" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, "Values" -> {8.}, 
                    "ID" -> 9112713970058885597|>, 
                    "f19" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, "Values" -> {299.1},
                     "ID" -> 530313765124785045|>, 
                    "f20" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, 
                    "Values" -> {95.97500000000001}, "ID" -> 
                    834416099195719507|>, 
                    "f21" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, 
                    "Values" -> {137.64622225110284`}, "ID" -> 
                    5963706592630747434|>, 
                    "f22" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, 
                    "Values" -> {5.300000000000001}, "ID" -> 
                    1699780357431264663|>, 
                    "f23" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, 
                    "Values" -> {344.40000000000003`}, "ID" -> 
                    5688822297495725580|>, 
                    "f24" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, "Values" -> {6}, 
                    "ID" -> 8711953917290811777|>, 
                    "f25" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, 
                    "Values" -> {7.299999999999997}, "ID" -> 
                    1188964204981764265|>, 
                    "f26" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, 
                    "Values" -> {236.00000000000006`}, "ID" -> 
                    6921717737841486058|>, 
                    "f27" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, 
                    "Values" -> {67.82000000000001}, "ID" -> 
                    3191708700968612953|>, 
                    "f28" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, 
                    "Values" -> {95.48095097976353}, "ID" -> 
                    5210517082932621247|>, 
                    "f29" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, 
                    "Values" -> {5.400000000000002}, "ID" -> 
                    8622311331809248155|>, 
                    "f30" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, 
                    "Values" -> {146.10000000000002`}, "ID" -> 
                    542375187397818677|>, 
                    "f31" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, "Values" -> {6}, 
                    "ID" -> 4577639997050061043|>, 
                    "f32" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, 
                    "Values" -> {6.600000000000001}, "ID" -> 
                    2671548496599706566|>, 
                    "f33" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, 
                    "Values" -> {58.20000000000003}, "ID" -> 
                    2113293135821897587|>, 
                    "f34" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, 
                    "Values" -> {28.140000000000004`}, "ID" -> 
                    3074514993213336650|>, 
                    "f35" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, 
                    "Values" -> {23.12959143608033}, "ID" -> 
                    6874162123589016082|>|>, <|
                    "ExampleNumber" -> 1, "ExampleWeights" -> 1, 
                    "LogDensityRatios" -> 0, "RawExample" -> False|>], 
                  "TrainingTime" -> 0.857039, "MaxTrainingMemory" -> 51890352,
                   "DataMemory" -> 132496, "FunctionMemory" -> 160760, 
                  "LanguageVersion" -> {13.2, 1}, "Date" -> 
                  DateObject[{
                    2023, 10, 19, 10, 4, 0.8457669`7.679825673720369}, 
                    "Instant", "Gregorian", 2.], "ProcessorCount" -> 6, 
                  "ProcessorType" -> "x86-64", "OperatingSystem" -> "Windows",
                   "SystemWordLength" -> 64, "Evaluations" -> {}|>, 
                "LogPDFDistribution" -> 
                MachineLearning`TailedQuantileDistribution[<|
                  "Quantiles" -> {-4.3180009621940485`, -4.3180009621940485`, \
-4.286293361117747, -4.205100926466099, -4.111016664335825, \
-4.093538827462628, -4.069416217922306, -4.047496609509975, \
-4.017898067598204, -4.001781816743477, -3.9912907296428433`}, 
                   "LeftBoundary" -> -4.286293361117747, "LeftScale" -> 
                   0.015853800538150775`, "LeftTailNorm" -> 0.2|>], "Entropy" -> 
                Around[143.99641964047603`, 1.2956014755414549`], 
                "EntropySampleSize" -> 10|>], 
             "Output" -> <|
              "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f2" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f6" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f8" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f9" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f10" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f11" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f12" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f13" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f14" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f15" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f16" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f17" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f18" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f19" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f20" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f21" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f22" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f23" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f24" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f25" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f26" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f27" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f28" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f29" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f30" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f31" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f32" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f33" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f34" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f35" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
             "EvaluationStrategy" -> "ModeFinding", "Version" -> {13.2, 1}, 
             "ID" -> 7940502765907928523|>], 
           MachineLearning`MLProcessor[
           "ToVector", <|
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|
              "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f2" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f6" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f8" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f9" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f10" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f11" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f12" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f13" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f14" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f15" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f16" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f17" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f18" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f19" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f20" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f21" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f22" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f23" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f24" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f25" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f26" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f27" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f28" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f29" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f30" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f31" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f32" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f33" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f34" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f35" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
             "Output" -> <|
              "(f1f2f3f4f5f6f7f8f9f10f11f12f13f14f15f16f17f18f19f20f21f22f23f2\
4f25f26f27f28f29f30f31f32f33f34f35)" -> <|
                "Type" -> "NumericalVector", "Weight" -> 35|>|>, 
             "Version" -> {13.2, 1}, "ID" -> 8490636327876692145|>], 
           MachineLearning`MLProcessor[
           "Standardize", <|
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|
              "(f1f2f3f4f5f6f7f8f9f10f11f12f13f14f15f16f17f18f19f20f21f22f23f2\
4f25f26f27f28f29f30f31f32f33f34f35)" -> <|
                "Type" -> "NumericalVector", "Weight" -> 35|>|>, 
             "Mean" -> {6.999074074074074, 76.16111111111113, 1.75, 
              9.112037037037037, 28.57592592592593, 18.079420080947866`, 
              37.027967350294055`, 23.417592592592595`, 170.61018518518514`, 
              4.194444444444445, 24.516666666666666`, 56.175000000000004`, 
              37.58564247994803, 27.100064094827566`, 21.489814814814814`, 
              274.97037037037023`, 9.87037037037037, 22.751851851851853`, 
              71.91666666666667, 42.165648956765025`, 24.479772531138803`, 
              9.481481481481474, 321.80092592592587`, 16.11111111111111, 
              12.593518518518527`, 62.0435185185185, 32.65832466712392, 
              19.498619264543038`, 5.64722222222222, 324.84814814814825`, 
              20.49074074074074, 8.838888888888885, 50.695370370370355`, 
              24.30716507424894, 14.513467380828335`}, 
             "StandardDeviation" -> {16.993895937737793`, 131.4997365391906, 
              3.4697769167270467`, 19.432469571010728`, 54.7894367866829, 
              33.89907083820725, 20.52629869497149, 46.188578491801174`, 
              159.1861383900033, 4.79671634082327, 48.33053535962693, 
              67.03452831273681, 50.513432697866826`, 20.646818701916775`, 
              41.53173026114159, 131.7860993198332, 9.031931617971578, 
              35.86233317863032, 60.62809136830023, 38.60345185113981, 
              23.139752752234685`, 11.818003749365943`, 92.06187984918034, 
              11.50952370006983, 10.243636445131544`, 53.910402818607004`, 
              23.983160380607067`, 25.14051487706281, 6.1388329560046175`, 
              95.33384759134924, 14.724315597734023`, 6.023777474453094, 
              48.461738218507215`, 14.75628474037816, 18.73482559017934}, 
             "Output" -> <|
              "(f1f2f3f4f5f6f7f8f9f10f11f12f13f14f15f16f17f18f19f20f21f22f23f2\
4f25f26f27f28f29f30f31f32f33f34f35)" -> <|
                "Type" -> "NumericalVector", "Weight" -> 35|>|>, 
             "Version" -> {13.2, 1}, "ID" -> 3843827617569549389|>]}, 
         "Invertibility" -> "Perfect", "StructurePreserving" -> True, 
         "Missing" -> "Imputed"|>]|>, 
    "Output" -> <|
     "Preprocessor" -> 
      MachineLearning`MLProcessor[
       "ToMLDataset", <|
        "Input" -> <|"f1" -> <|"Type" -> "Nominal"|>|>, 
         "Output" -> <|"f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
         "Preprocessor" -> 
         MachineLearning`MLProcessor["Sequence", <|"Processors" -> {
              MachineLearning`MLProcessor["List"], 
              MachineLearning`MLProcessor[
              "WrapMLDataset", <|
               "FeatureTypes" -> {"Nominal"}, "FeatureKeys" -> {"f1"}, 
                "FeatureWeights" -> Automatic, "ExampleWeights" -> Automatic, 
                "RawExample" -> Missing["KeyAbsent", "RawExample"], 
                "StructurePreserving" -> False|>]}|>], "ScalarFeature" -> 
         True, "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
         "Missing" -> "Allowed"|>], "Processor" -> 
      MachineLearning`MLProcessor[
       "Sequence", <|
        "Input" -> <|"f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
         "Output" -> <|"f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
         "Processors" -> {
           MachineLearning`MLProcessor[
           "ToVector", <|
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|"f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
             "Output" -> <|
              "f1" -> <|"Type" -> "NominalVector", "Weight" -> 1|>|>, 
             "Version" -> {13.2, 1}, "ID" -> 6115831310676068980|>], 
           MachineLearning`MLProcessor[
           "IntegerEncodeNominalVector", <|
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|
              "f1" -> <|"Type" -> "NominalVector", "Weight" -> 1|>|>, 
             "Index" -> {<|"int" -> 1, "pyr" -> 2|>}, "MissingCode" -> 0, 
             "Version" -> {13.2, 1}, "ID" -> 5613645175323150044, 
             "Output" -> <|
              "f1" -> <|"Type" -> "NominalVector", "Weight" -> 1|>|>|>], 
           MachineLearning`MLProcessor[
           "FromVector", <|
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|
              "f1" -> <|
                "Type" -> "NominalVector", "Weight" -> 1, 
                 "SetSize" -> {2}|>|>, 
             "Output" -> <|"f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
             "Version" -> {13.2, 1}, "ID" -> 4533265931970828710|>], 
           MachineLearning`MLProcessor[
           "FirstValues", <|
            "Info" -> <|"Type" -> "Nominal", "Weight" -> 1, "SetSize" -> 2|>, 
             "Key" -> "f1", "Invertibility" -> "Perfect", 
             "StructurePreserving" -> False, "Missing" -> "Allowed"|>]}, 
         "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
         "Missing" -> "Allowed"|>], "ProbabilityPostprocessor" -> Identity, 
      "Name" -> "class", 
      "Marginal" -> <|
       "int" -> 0.4636363636363636, "pyr" -> 0.5363636363636364|>|>, 
    "LabelSplitter" -> 
    MachineLearning`MLProcessor[
     "FeatureLabelSplit", <|
      "Processor" -> MachineLearning`MLProcessor["ListSplit"], 
       "PreferLabeled" -> True, "KeepLabelsFormat" -> False|>], 
    "RecalibrationFunction" -> None, "ImputationStrategy" -> Automatic, 
    "Prior" -> Automatic, "Utility" -> 
    SparseArray[
     Automatic, {2, 3}, 0., {1, {{0, 1, 2}, {{2}, {3}}}, {1., 1.}}], 
    "Threshold" -> 0, "TieBreaker" -> RandomChoice, "PerformanceGoal" -> 
    Automatic, "BatchProcessing" -> Automatic, "Model" -> <|"Trees" -> {
        MachineLearning`DecisionTree[<|
         "FeatureIndices" -> RawArray["Integer16",{34, 25, 29, 1, 7}], 
          "NumericalThresholds" -> {-0.42316372692584986`, \
-0.5943027734756469, -0.17412029206752774`, -0.4065850675106048, 
           0.0230640908703208}, "LeafValues" -> 
          RawArray["Real32",{-0.06757998466491699, 0.12011656165122986`, 
            0.2273717224597931, 0.3346268832683563, -0.06757998466491699, 
            0.3346268832683563}], "Children" -> 
          RawArray["Integer16",{{4, 2}, {-2, 3}, {-3, 
            5}, {-1, -5}, {-4, -6}}], "NominalSplits" -> {}, "RootIndex" -> 1,
           "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
        MachineLearning`DecisionTree[<|
         "FeatureIndices" -> RawArray["Integer16",{34, 32, 13, 15}], 
          "NumericalThresholds" -> {-0.42316372692584986`, \
-0.5168873965740203, -0.7415324449539183, -0.29316003620624537`}, 
          "LeafValues" -> 
          RawArray["Real32",{-0.19346529245376587`, -0.026879319921135902`, 
            0.06450347602367401, 0.1787453442811966, 0.17156049609184265`}], 
          "Children" -> 
          RawArray["Integer16",{{-1, 2}, {-2, 3}, {-3, 4}, {-4, -5}}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
          "NominalNodeNumber" -> 0|>], 
        MachineLearning`DecisionTree[<|
         "FeatureIndices" -> RawArray["Integer16",{34, 12, 29, 6}], 
          "NumericalThresholds" -> {-0.42316372692584986`, \
-0.4646200388669967, 0.1429199241101742, -0.2530778348445892}, "LeafValues" -> 
          RawArray["Real32",{-0.17702460289001465`, -0.11732261627912521`, 
            0.13412980735301971`, 0.16477255523204803`, 
            0.17056582868099213`}], "Children" -> 
          RawArray["Integer16",{{-1, 2}, {3, 4}, {-2, -4}, {-3, -5}}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
          "NominalNodeNumber" -> 0|>], 
        MachineLearning`DecisionTree[<|
         "FeatureIndices" -> RawArray["Integer16",{34, 29, 23}], 
          "NumericalThresholds" -> {-0.42316372692584986`, \
-0.17412029206752774`, 0.3953871130943299}, "LeafValues" -> 
          RawArray["Real32",{-0.16452807188034058`, 0.012834274210035801`, 
            0.15756036341190338`, 0.1268501579761505}], "Children" -> 
          RawArray["Integer16",{{-1, 2}, {-2, 3}, {-3, -4}}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
          "NominalNodeNumber" -> 0|>], 
        MachineLearning`DecisionTree[<|
         "FeatureIndices" -> RawArray["Integer16",{34, 11, 29, 18, 1}], 
          "NumericalThresholds" -> {-0.42316372692584986`, \
-0.34600920975208277`, 
           0.1429199241101742, -0.17973389476537702`, -0.4065850675106048}, 
          "LeafValues" -> 
          RawArray["Real32",{-0.15473876893520355`, -0.11114352196455002`, 
            0.15735922753810883`, 0.1471523940563202, 
            0.11717533320188522`, -0.15473876893520355`}], "Children" -> 
          RawArray["Integer16",{{5, 2}, {3, 
            4}, {-2, -4}, {-3, -5}, {-1, -6}}], "NominalSplits" -> {}, 
          "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
          0|>], 
        MachineLearning`DecisionTree[<|
         "FeatureIndices" -> RawArray["Integer16",{34, 29, 1, 6}], 
          "NumericalThresholds" -> {-0.32824365794658655`, \
-0.17412029206752774`, -0.4052778780460357, -0.5343075394630431}, 
          "LeafValues" -> 
          RawArray["Real32",{-0.1492823362350464, 0.001041735871694982, 
            0.15152645111083984`, -0.12616600096225739`, 
            0.13944943249225616`}], "Children" -> 
          RawArray["Integer16",{{3, 2}, {-2, 4}, {-1, -4}, {-3, -5}}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
          "NominalNodeNumber" -> 0|>], 
        MachineLearning`DecisionTree[<|
         "FeatureIndices" -> RawArray["Integer16",{34, 11, 29, 2, 1}], 
          "NumericalThresholds" -> {-0.42316372692584986`, \
-0.34600920975208277`, 
           0.1429199241101742, -0.28533041477203364`, -0.4056942611932754}, 
          "LeafValues" -> 
          RawArray["Real32",{-0.14038874208927155`, -0.10318537056446075`, 
            0.10354898124933243`, 0.13526178896427155`, 
            0.14825764298439026`, -0.14127086102962494`}], "Children" -> 
          RawArray["Integer16",{{5, 2}, {3, 
            4}, {-2, -4}, {-3, -5}, {-1, -6}}], "NominalSplits" -> {}, 
          "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
          0|>], 
        MachineLearning`DecisionTree[<|
         "FeatureIndices" -> RawArray["Integer16",{34, 11, 29, 18, 1}], 
          "NumericalThresholds" -> {-0.42316372692584986`, \
-0.34600920975208277`, 
           0.1429199241101742, -0.17973389476537702`, -0.4056942611932754}, 
          "LeafValues" -> 
          RawArray["Real32",{-0.1350986510515213, -0.09273648262023926, 
            0.1417900025844574, 0.13080494105815887`, 
            0.09803982079029083, -0.13583366572856903`}], "Children" -> 
          RawArray["Integer16",{{5, 2}, {3, 
            4}, {-2, -4}, {-3, -5}, {-1, -6}}], "NominalSplits" -> {}, 
          "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
          0|>], 
        MachineLearning`DecisionTree[<|
         "FeatureIndices" -> RawArray["Integer16",{34, 29, 34, 1}], 
          "NumericalThresholds" -> {-0.42316372692584986`, \
-0.17412029206752774`, 0.27790103852748876`, -0.4056942611932754}, 
          "LeafValues" -> 
          RawArray["Real32",{-0.1306632161140442, -0.0030690154526382685`, 
            0.09891092032194138, 
            0.13764774799346924`, -0.13128240406513214`}], "Children" -> 
          RawArray["Integer16",{{4, 2}, {-2, 3}, {-3, -4}, {-1, -5}}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
          "NominalNodeNumber" -> 0|>], 
        MachineLearning`DecisionTree[<|
         "FeatureIndices" -> RawArray["Integer16",{34, 11, 29, 18, 1}], 
          "NumericalThresholds" -> {-0.42316372692584986`, \
-0.34600920975208277`, 
           0.1429199241101742, -0.17973389476537702`, -0.4056942611932754}, 
          "LeafValues" -> 
          RawArray["Real32",{-0.1269073784351349, -0.08825412392616272, 
            0.13600431382656097`, 0.12388236820697784`, 
            0.0874849185347557, -0.12743377685546875`}], "Children" -> 
          RawArray["Integer16",{{5, 2}, {3, 
            4}, {-2, -4}, {-3, -5}, {-1, -6}}], "NominalSplits" -> {}, 
          "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
          0|>], 
        MachineLearning`DecisionTree[<|
         "FeatureIndices" -> RawArray["Integer16",{29, 34, 34, 32}], 
          "NumericalThresholds" -> {-0.7162206470966338, \
-0.32824365794658655`, -0.07090339437127112, 0.29817010462284094`}, 
          "LeafValues" -> 
          RawArray["Real32",{-0.14617334306240082`, -0.11092421412467957`, 
            0.03647255897521973, 0.13939107954502106`, 0.12184048444032669`}],
           "Children" -> 
          RawArray["Integer16",{{-1, 2}, {-2, 3}, {-3, 4}, {-4, -5}}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
          "NominalNodeNumber" -> 0|>], 
        MachineLearning`DecisionTree[<|
         "FeatureIndices" -> RawArray["Integer16",{29, 35, 34, 6, 27}], 
          "NumericalThresholds" -> {-0.7162206470966338, -0.4413673430681228, \
-0.07090339437127112, -0.5343075394630431, 0.20102269202470782`}, 
          "LeafValues" -> 
          RawArray["Real32",{-0.14114384353160858`, -0.1154637262225151, 
            0.03219347074627876, 0.13718611001968384`, 0.12333972007036209`, 
            0.11840472370386124`}], "Children" -> 
          RawArray["Integer16",{{-1, 2}, {-2, 3}, {-3, 4}, {-4, 
            5}, {-5, -6}}], "NominalSplits" -> {}, "RootIndex" -> 1, 
          "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
        MachineLearning`DecisionTree[<|
         "FeatureIndices" -> RawArray["Integer16",{29, 27, 17, 13}], 
          "NumericalThresholds" -> {-0.7162206470966338, -0.4399051368236541, \
-0.6559549272060393, 0.06421571969985963}, "LeafValues" -> 
          RawArray["Real32",{-0.13679257035255432`, -0.09592807292938232, 
            0.022342808544635773`, 0.13887150585651398`, 
            0.11910542100667953`}], "Children" -> 
          RawArray["Integer16",{{-1, 2}, {-2, 3}, {-3, 4}, {-4, -5}}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
          "NominalNodeNumber" -> 0|>], 
        MachineLearning`DecisionTree[<|
         "FeatureIndices" -> RawArray["Integer16",{29, 27, 17, 13}], 
          "NumericalThresholds" -> {-0.7162206470966338, -0.4399051368236541, \
-0.6559549272060393, 0.06421571969985963}, "LeafValues" -> 
          RawArray["Real32",{-0.13299551606178284`, -0.09051121026277542, 
            0.020282505080103874`, 0.1341039091348648, 0.1169750764966011}], 
          "Children" -> 
          RawArray["Integer16",{{-1, 2}, {-2, 3}, {-3, 4}, {-4, -5}}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
          "NominalNodeNumber" -> 0|>], 
        MachineLearning`DecisionTree[<|
         "FeatureIndices" -> RawArray["Integer16",{34, 29, 16, 9}], 
          "NumericalThresholds" -> {-0.32824365794658655`, \
-0.17412029206752774`, 0.8065663278102876, -1.0660144686698911`}, 
          "LeafValues" -> 
          RawArray["Real32",{-0.11942104995250702`, -0.014552256092429161`, 
            0.12757033109664917`, -0.08592100441455841, 
            0.11395183205604553`}], "Children" -> 
          RawArray["Integer16",{{3, 2}, {-2, 4}, {-1, -4}, {-3, -5}}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
          "NominalNodeNumber" -> 0|>], 
        MachineLearning`DecisionTree[<|
         "FeatureIndices" -> RawArray["Integer16",{29, 31, 34, 32}], 
          "NumericalThresholds" -> {-0.7162206470966338, 
           0.4808083921670914, -0.07090339437127112, 0.29817010462284094`}, 
          "LeafValues" -> 
          RawArray["Real32",{-0.1292990893125534, 
            0.01839619129896164, -0.11442609131336212`, 0.12332071363925934`, 
            0.11305620521306992`}], "Children" -> 
          RawArray["Integer16",{{-1, 2}, {3, -3}, {-2, 4}, {-4, -5}}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
          "NominalNodeNumber" -> 0|>], 
        MachineLearning`DecisionTree[<|
         "FeatureIndices" -> RawArray["Integer16",{29, 31, 9, 29}], 
          "NumericalThresholds" -> {-0.7162206470966338, 
           0.4808083921670914, -0.8781214654445647, -0.46808804571628565`}, 
          "LeafValues" -> 
          RawArray["Real32",{-0.12643414735794067`, 
            0.01744009368121624, -0.11286768317222595`, 0.12788721919059753`, 
            0.11166553199291229`}], "Children" -> 
          RawArray["Integer16",{{-1, 2}, {3, -3}, {-2, 4}, {-4, -5}}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
          "NominalNodeNumber" -> 0|>], 
        MachineLearning`DecisionTree[<|
         "FeatureIndices" -> RawArray["Integer16",{29, 34, 6, 9, 8}], 
          "NumericalThresholds" -> {-0.7162206470966338, \
-0.07090339437127112, -0.5235299170017241, -1.0660144686698911`, \
-0.12207687646150588`}, "LeafValues" -> 
          RawArray["Real32",{-0.12387768179178238`, -0.13846032321453094`, 
            0.1216595470905304, 0.10508914291858673`, 0.11292336136102676`, 
            0.10978615283966064`}], "Children" -> 
          RawArray["Integer16",{{-1, 2}, {3, 4}, {-2, -4}, {-3, 
            5}, {-5, -6}}], "NominalSplits" -> {}, "RootIndex" -> 1, 
          "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
        MachineLearning`DecisionTree[<|
         "FeatureIndices" -> RawArray["Integer16",{29, 34, 1, 9, 8}], 
          "NumericalThresholds" -> {-0.7162206470966338, \
-0.07090339437127112, -0.4028110355138778, -1.0660144686698911`, \
-0.12207687646150588`}, "LeafValues" -> 
          RawArray["Real32",{-0.12158850580453873`, -0.1345672458410263, 
            0.11937744915485382`, 0.1015382632613182, 0.11155331879854202`, 
            0.10876929014921188`}], "Children" -> 
          RawArray["Integer16",{{-1, 2}, {3, 4}, {-2, -4}, {-3, 
            5}, {-5, -6}}], "NominalSplits" -> {}, "RootIndex" -> 1, 
          "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
        MachineLearning`DecisionTree[<|
         "FeatureIndices" -> RawArray["Integer16",{35, 5, 29, 16}], 
          "NumericalThresholds" -> {-0.4413673430681228, -0.5126285254955291, 
           0.05723869614303113, 0.7977171242237092}, "LeafValues" -> 
          RawArray["Real32",{-0.1157904714345932, -0.11870315670967102`, 
            0.11305224150419235`, 
            0.11235854029655457`, -0.09018911421298981}], "Children" -> 
          RawArray["Integer16",{{4, 2}, {3, -3}, {-2, -4}, {-1, -5}}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
          "NominalNodeNumber" -> 0|>], 
        MachineLearning`DecisionTree[<|
         "FeatureIndices" -> RawArray["Integer16",{34, 29, 30, 9}], 
          "NumericalThresholds" -> {-0.32824365794658655`, \
-0.17412029206752774`, 0.7204766869544984, -1.0660144686698911`}, 
          "LeafValues" -> 
          RawArray["Real32",{-0.11181318759918213`, -0.016324015334248543`, 
            0.11563661694526672`, -0.07152169197797775, 0.1077110767364502}], 
          "Children" -> 
          RawArray["Integer16",{{3, 2}, {-2, 4}, {-1, -4}, {-3, -5}}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
          "NominalNodeNumber" -> 0|>], 
        MachineLearning`DecisionTree[<|
         "FeatureIndices" -> RawArray["Integer16",{5, 29, 24, 24, 34}], 
          "NumericalThresholds" -> {-0.5126285254955291, \
-0.04099327698349952, -0.7089359760284423, 
           0.07235131785273553, -0.35274054110050196`}, "LeafValues" -> 
          RawArray["Real32",{-0.10653722286224365`, 0.11497709900140762`, 
            0.11006331443786621`, 0.02961168996989727, 
            0.04766230285167694, -0.1379576027393341}], "Children" -> 
          RawArray["Integer16",{{2, 4}, {5, 
            3}, {-3, -4}, {-2, -5}, {-1, -6}}], "NominalSplits" -> {}, 
          "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
          0|>], 
        MachineLearning`DecisionTree[<|
         "FeatureIndices" -> RawArray["Integer16",{34, 29, 12, 29}], 
          "NumericalThresholds" -> {-0.32824365794658655`, \
-0.17412029206752774`, 0.04346549697220326, 0.1429199241101742}, "LeafValues" -> 
          RawArray["Real32",{-0.10989633202552795`, -0.013073205016553402`, 
            0.11295536905527115`, -0.06616002321243286, 
            0.10643433779478073`}], "Children" -> 
          RawArray["Integer16",{{3, 2}, {-2, 4}, {-1, -4}, {-3, -5}}], 
          "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
          "NominalNodeNumber" -> 0|>], 
        MachineLearning`DecisionTree[<|
         "FeatureIndices" -> RawArray["Integer16",{5, 29, 24, 30, 34}], 
          "NumericalThresholds" -> {-0.5126285254955291, -0.04099327698349952,
            0.08186411112546922, 0.448795959353447, -0.35274054110050196`}, 
          "LeafValues" -> 
          RawArray["Real32",{-0.10535620152950287`, 0.1136116161942482, 
            0.10811001062393188`, 0.03934968635439873, 
            0.026362543925642967`, -0.13268086314201355`}], "Children" -> 
          RawArray["Integer16",{{2, 3}, {5, 
            4}, {-2, -4}, {-3, -5}, {-1, -6}}], "NominalSplits" -> {}, 
          "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
          0|>], 
        MachineLearning`DecisionTree[<|
         "FeatureIndices" -> RawArray["Integer16",{35, 32, 27, 8, 8, 14}], 
          "NumericalThresholds" -> {-0.4413673430681228, -0.5585374236106871, 
           1.0659735798835757`, -0.34583151340484614`, -0.07281964644789694, 
           0.05358711071312428}, "LeafValues" -> 
          RawArray["Real32",{-0.11158301681280136`, -0.05250142142176628, 
            0.11512775719165802`, -0.028054246678948402`, \
-0.08487697690725327, 0.0930250957608223, 0.10777098685503006`}], "Children" -> 
          RawArray["Integer16",{{4, 2}, {-2, 3}, {5, -4}, {-1, -5}, {
            6, -6}, {-3, -7}}], "NominalSplits" -> {}, "RootIndex" -> 1, 
          "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
        MachineLearning`DecisionTree[<|
         "FeatureIndices" -> RawArray["Integer16",{5, 29, 8, 24, 34}], 
          
          "NumericalThresholds" -> {-0.5126285254955291, \
-0.04099327698349952, -0.3895276486873626, -0.7089359760284423, \
-0.35274054110050196`}, "LeafValues" -> 
          RawArray["Real32",{-0.10441631078720093`, 0.03482597693800926, 
            0.10692057013511658`, 0.11166320741176605`, 
            0.022056767717003822`, -0.12736520171165466`}], "Children" -> 
          RawArray["Integer16",{{2, 3}, {5, 
            4}, {-2, -4}, {-3, -5}, {-1, -6}}], "NominalSplits" -> {}, 
          "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
          0|>], 
        MachineLearning`DecisionTree[<|
         "FeatureIndices" -> RawArray["Integer16",{35, 32, 18, 8, 11, 14}], 
          "NumericalThresholds" -> {-0.4413673430681228, -0.562081605195999, 
           0.4277471452951432, -0.34583151340484614`, 
           0.024392478633672002`, -0.02941592969000339}, "LeafValues" -> 
          RawArray["Real32",{-0.10973784327507019`, -0.05886305496096611, 
            0.11348453164100647`, -0.026698686182498932`, \
-0.08180271834135056, 0.09060311317443848, 0.10627737641334534`}], "Children" -> 
          RawArray["Integer16",{{4, 2}, {-2, 3}, {5, -4}, {-1, -5}, {
            6, -6}, {-3, -7}}], "NominalSplits" -> {}, "RootIndex" -> 1, 
          "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
        MachineLearning`DecisionTree[<|
         "FeatureIndices" -> RawArray["Integer16",{5, 29, 8, 24, 34}], 
          "NumericalThresholds" -> {-0.5126285254955291, \
-0.04099327698349952, -0.3911967724561691, -0.7089359760284423, \
-0.35274054110050196`}, "LeafValues" -> 
          RawArray["Real32",{-0.10366936773061752`, 0.02366586960852146, 
            0.1057337075471878, 0.11040893197059631`, 
            0.02101879008114338, -0.12297266721725464`}], "Children" -> 
          RawArray["Integer16",{{2, 3}, {5, 
            4}, {-2, -4}, {-3, -5}, {-1, -6}}], "NominalSplits" -> {}, 
          "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
          0|>], 
        MachineLearning`DecisionTree[<|
         "FeatureIndices" -> RawArray["Integer16",{35, 32, 27, 11, 27, 22}], 
          "NumericalThresholds" -> {-0.46973016858100886`, \
-0.5701652467250823, 1.0659735798835757`, 
           0.024392478633672002`, -0.2851888090372085, -0.367822453379631}, 
          "LeafValues" -> 
          RawArray["Real32",{-0.10397189855575562`, -0.07271017879247665, 
            0.1134522333741188, -0.028140775859355927`, 0.08855513483285904, 
            0.10605134814977646`, -0.11126108467578888`}], "Children" -> 
          RawArray["Integer16",{{6, 2}, {-2, 3}, {4, -4}, {
            5, -5}, {-3, -6}, {-1, -7}}], "NominalSplits" -> {}, "RootIndex" -> 
          1, "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
        MachineLearning`DecisionTree[<|
         "FeatureIndices" -> RawArray["Integer16",{32, 35, 18, 8, 25}], 
          "NumericalThresholds" -> {-0.6218454539775847, -0.4413673430681228, 
           0.4728368073701859, -0.02512277942150831, -0.5939458906650542}, 
          "LeafValues" -> 
          RawArray["Real32",{-0.11342780292034149`, -0.09453362971544266, 
            0.11571159213781357`, -0.03336937353014946, 0.08609496802091599, 
            0.10567567497491837`}], "Children" -> 
          RawArray["Integer16",{{-1, 2}, {-2, 3}, {4, -4}, {
            5, -5}, {-3, -6}}], "NominalSplits" -> {}, "RootIndex" -> 1, 
          "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
        MachineLearning`DecisionTree[<|
         "FeatureIndices" -> RawArray["Integer16",{29, 34, 1, 9, 26}], 
          "NumericalThresholds" -> {-0.7162206470966338, \
-0.07090339437127112, -0.34634712338447565`, -1.0681399703025816`, 
           0.12338723242282869`}, "LeafValues" -> 
          RawArray["Real32",{-0.10893383622169495`, -0.113643117249012, 
            0.10819271206855774`, 0.09730211645364761, 0.10419588536024094`, 
            0.10304237902164459`}], "Children" -> 
          RawArray["Integer16",{{-1, 2}, {3, 4}, {-2, -4}, {-3, 
            5}, {-5, -6}}], "NominalSplits" -> {}, "RootIndex" -> 1, 
          "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
        MachineLearning`DecisionTree[<|
         "FeatureIndices" -> RawArray["Integer16",{32, 35, 27, 13, 25}], 
          "NumericalThresholds" -> {-0.6218454539775847, \
-0.46973016858100886`, 1.0896480083465578`, 
           0.34002274274826055`, -0.53394216299057}, "LeafValues" -> 
          RawArray["Real32",{-0.11093292385339737`, -0.10543684661388397`, 
            0.11155273765325546`, -0.03464299440383911, 0.08697055280208588, 
            0.1045895591378212}], "Children" -> 
          RawArray["Integer16",{{-1, 2}, {-2, 3}, {4, -4}, {
            5, -5}, {-3, -6}}], "NominalSplits" -> {}, "RootIndex" -> 1, 
          "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
        MachineLearning`DecisionTree[<|
         "FeatureIndices" -> RawArray["Integer16",{29, 34, 1, 9, 26}], 
          "NumericalThresholds" -> {-0.7162206470966338, \
-0.07090339437127112, -0.34634712338447565`, -1.0681399703025816`, 
           0.12338723242282869`}, "LeafValues" -> 
          RawArray["Real32",{-0.10747520625591278`, -0.11158306896686554`, 
            0.1066892221570015, 0.09319942444562912, 0.1034330427646637, 
            0.10261109471321106`}], "Children" -> 
          RawArray["Integer16",{{-1, 2}, {3, 4}, {-2, -4}, {-3, 
            5}, {-5, -6}}], "NominalSplits" -> {}, "RootIndex" -> 1, 
          "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
        MachineLearning`DecisionTree[<|
         "FeatureIndices" -> RawArray["Integer16",{29, 33, 34, 14, 8}], 
          "NumericalThresholds" -> {-0.7162206470966338, -0.4693735390901565, \
-0.11785021796822547`, -0.02941592969000339, -0.2961102873086929}, 
          "LeafValues" -> 
          RawArray["Real32",{-0.10676327347755432`, -0.07640589773654938, 
            0.011477680876851082`, 0.10736142843961716`, 0.10341144353151321`,
             0.10234609246253967`}], "Children" -> 
          RawArray["Integer16",{{-1, 2}, {-2, 3}, {-3, 4}, {-4, 
            5}, {-5, -6}}], "NominalSplits" -> {}, "RootIndex" -> 1, 
          "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
        MachineLearning`DecisionTree[<|
         "FeatureIndices" -> RawArray["Integer16",{32, 31, 18, 5, 25}], 
          "NumericalThresholds" -> {-0.6218454539775847, 0.27025185525417333`,
            0.7902031242847444, -0.5187628865242003, -0.5939458906650542}, 
          "LeafValues" -> 
          RawArray["Real32",{-0.10849190503358841`, 
            0.09182479977607727, -0.10248789936304092`, -0.07260484993457794, 
            0.10978975147008896`, 0.10345059633255005`}], "Children" -> 
          RawArray["Integer16",{{-1, 2}, {3, -3}, {4, -4}, {-2, 
            5}, {-5, -6}}], "NominalSplits" -> {}, "RootIndex" -> 1, 
          "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
        MachineLearning`DecisionTree[<|
         "FeatureIndices" -> RawArray["Integer16",{32, 35, 27, 13, 25}], 
          "NumericalThresholds" -> {-0.6218454539775847, -0.4413673430681228, 
           1.3207512497901919`, 0.3077016472816468, -0.5545605421066283}, 
          "LeafValues" -> 
          RawArray["Real32",{-0.10765363276004791`, -0.08772405982017517, 
            0.10849281400442123`, -0.04190884530544281, 0.08481846004724503, 
            0.10320941358804703`}], "Children" -> 
          RawArray["Integer16",{{-1, 2}, {-2, 3}, {4, -4}, {
            5, -5}, {-3, -6}}], "NominalSplits" -> {}, "RootIndex" -> 1, 
          "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
        MachineLearning`DecisionTree[<|
         "FeatureIndices" -> RawArray["Integer16",{22, 32, 35, 15, 13}], 
          "NumericalThresholds" -> {-0.6175624132156371, -0.5925869047641753, \
-0.41516472399234766`, 0.23809066414833072`, 0.06421571969985963}, 
          "LeafValues" -> 
          RawArray[
            "Real32",{-0.10117218643426895`, -0.07383953034877777, \
-0.00890444777905941, 0.1051580160856247, 0.05805525183677673, 
            0.10201690346002579`}], "Children" -> 
          RawArray["Integer16",{{-1, 2}, {-2, 3}, {-3, 4}, {
            5, -5}, {-4, -6}}], "NominalSplits" -> {}, "RootIndex" -> 1, 
          "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
        MachineLearning`DecisionTree[<|
         "FeatureIndices" -> RawArray["Integer16",{29, 34, 1, 12, 8}], 
          "NumericalThresholds" -> {-0.7162206470966338, \
-0.07090339437127112, -0.34634712338447565`, -0.833699733018875, \
-0.24198417365550992`}, "LeafValues" -> 
          RawArray["Real32",{-0.10484801232814789`, -0.10850309580564499`, 
            0.10481563955545425`, 0.08966251462697983, 0.10247314721345901`, 
            0.10158371180295944`}], "Children" -> 
          RawArray["Integer16",{{-1, 2}, {3, 4}, {-2, -4}, {-3, 
            5}, {-5, -6}}], "NominalSplits" -> {}, "RootIndex" -> 1, 
          "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
        MachineLearning`DecisionTree[<|
         "FeatureIndices" -> RawArray["Integer16",{32, 35, 18, 13, 25}], 
          
          "NumericalThresholds" -> {-0.6218454539775847, \
-0.46973016858100886`, 0.5584549307823182, 
           0.2908651530742646, -0.5939458906650542}, "LeafValues" -> 
          RawArray["Real32",{-0.10582169145345688`, -0.10318896919488907`, 
            0.10705483704805374`, -0.04132232442498207, 0.0828619971871376, 
            0.10281946510076523`}], "Children" -> 
          RawArray["Integer16",{{-1, 2}, {-2, 3}, {4, -4}, {
            5, -5}, {-3, -6}}], "NominalSplits" -> {}, "RootIndex" -> 1, 
          "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
        MachineLearning`DecisionTree[<|
         "FeatureIndices" -> RawArray["Integer16",{22, 35, 32, 34, 29, 8}], 
          "NumericalThresholds" -> {-0.6822379231452941, -0.4413673430681228, \
-0.562081605195999, 
           1.0915836095809939`, -0.5305182337760924, -0.29158428311347956`}, 
          "LeafValues" -> 
          RawArray[
            "Real32",{-0.10694199800491333`, -0.08145678788423538, \
-0.017230762168765068`, 0.10454564541578293`, 0.049490343779325485`, 
            0.10227584093809128`, 0.10131923109292984`}], "Children" -> 
          RawArray["Integer16",{{-1, 2}, {-2, 3}, {-3, 4}, {5, -5}, {-4, 
            6}, {-6, -7}}], "NominalSplits" -> {}, "RootIndex" -> 1, 
          "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
        MachineLearning`DecisionTree[<|
         "FeatureIndices" -> RawArray["Integer16",{32, 35, 27, 13, 25}], 
          "NumericalThresholds" -> {-0.6218454539775847, \
-0.46973016858100886`, 1.5566649436950686`, 
           0.3077016472816468, -0.53394216299057}, "LeafValues" -> 
          RawArray["Real32",{-0.10500285774469376`, -0.10268238186836243`, 
            0.10574513673782349`, -0.04557615891098976, 0.07867319136857986, 
            0.10194695740938187`}], "Children" -> 
          RawArray["Integer16",{{-1, 2}, {-2, 3}, {4, -4}, {
            5, -5}, {-3, -6}}], "NominalSplits" -> {}, "RootIndex" -> 1, 
          "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
        MachineLearning`DecisionTree[<|
         "FeatureIndices" -> RawArray["Integer16",{29, 34, 1, 9, 8}], 
          "NumericalThresholds" -> {-0.7162206470966338, -0.07090339437127112,
            0.03381138853728772, -1.0698012113571165`, -0.24198417365550992`},
           "LeafValues" -> 
          RawArray["Real32",{-0.10365854948759079`, -0.09936614334583282, 
            0.10362400859594345`, 0.1045798733830452, 0.10172048956155777`, 
            0.10111330449581146`}], "Children" -> 
          RawArray["Integer16",{{-1, 2}, {3, 4}, {-2, -4}, {-3, 
            5}, {-5, -6}}], "NominalSplits" -> {}, "RootIndex" -> 1, 
          "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
        MachineLearning`DecisionTree[<|
         "FeatureIndices" -> RawArray["Integer16",{29, 34, 1, 33, 8}], 
          "NumericalThresholds" -> {-0.7162206470966338, -0.07090339437127112,
            0.03381138853728772, 0.5106415450572969, -0.383686289191246}, 
          "LeafValues" -> 
          RawArray["Real32",{-0.10330915451049805`, -0.09749186038970947, 
            0.10178849846124649`, 0.10412831604480743`, 0.10358981788158417`, 
            0.10114631801843643`}], "Children" -> 
          RawArray["Integer16",{{-1, 2}, {3, 4}, {-2, -4}, {
            5, -5}, {-3, -6}}], "NominalSplits" -> {}, "RootIndex" -> 1, 
          "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
        MachineLearning`DecisionTree[<|
         "FeatureIndices" -> RawArray["Integer16",{29, 34, 1, 33, 8}], 
          "NumericalThresholds" -> {-0.7162206470966338, -0.07090339437127112,
            0.03381138853728772, 0.5106415450572969, -0.383686289191246}, 
          "LeafValues" -> 
          RawArray["Real32",{-0.10299322754144669`, -0.09545822441577911, 
            0.10161581635475159`, 0.10372266918420792`, 0.1032477617263794, 
            0.10103615373373032`}], "Children" -> 
          RawArray["Integer16",{{-1, 2}, {3, 4}, {-2, -4}, {
            5, -5}, {-3, -6}}], "NominalSplits" -> {}, "RootIndex" -> 1, 
          "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
        MachineLearning`DecisionTree[<|
         "FeatureIndices" -> RawArray["Integer16",{29, 34, 3, 33, 8}], 
          "NumericalThresholds" -> {-0.7162206470966338, -0.07090339437127112,
            0.21991491690278056`, 0.5106415450572969, -0.383686289191246}, 
          "LeafValues" -> 
          RawArray["Real32",{-0.10270755738019943`, -0.10484049469232559`, 
            0.10146002471446991`, 0.08521298319101334, 0.10293834656476974`, 
            0.10093666613101959`}], "Children" -> 
          RawArray["Integer16",{{-1, 2}, {3, 4}, {-2, -4}, {
            5, -5}, {-3, -6}}], "NominalSplits" -> {}, "RootIndex" -> 1, 
          "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
        MachineLearning`DecisionTree[<|
         "FeatureIndices" -> RawArray["Integer16",{32, 33, 18, 13, 25}], 
          "NumericalThresholds" -> {-0.6218454539775847, -0.4693735390901565, 
           1.3235757350921633`, 0.34002274274826055`, -0.5545605421066283}, 
          "LeafValues" -> 
          RawArray["Real32",{-0.10310598462820053`, -0.06390543282032013, 
            0.10370750725269318`, -0.052829310297966, 0.06757448613643646, 
            0.10133018344640732`}], "Children" -> 
          RawArray["Integer16",{{-1, 2}, {-2, 3}, {4, -4}, {
            5, -5}, {-3, -6}}], "NominalSplits" -> {}, "RootIndex" -> 1, 
          "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
        MachineLearning`DecisionTree[<|
         "FeatureIndices" -> RawArray["Integer16",{22, 27, 3, 34, 8}], 
          "NumericalThresholds" -> {-0.6822379231452941, -0.4399051368236541, \
-0.505446285009384, -0.16147416085004804`, -0.3821845799684524}, "LeafValues" -> 
          RawArray["Real32",{-0.10395199805498123`, -0.05860010161995888, 
            0.012042146176099777`, 0.10266108065843582`, 0.1012943685054779, 
            0.10072038322687149`}], "Children" -> 
          RawArray["Integer16",{{-1, 2}, {-2, 3}, {-3, 4}, {-4, 
            5}, {-5, -6}}], "NominalSplits" -> {}, "RootIndex" -> 1, 
          "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
        MachineLearning`DecisionTree[<|
         "FeatureIndices" -> RawArray["Integer16",{29, 34, 1, 9, 8}], 
          "NumericalThresholds" -> {-0.7162206470966338, -0.07090339437127112,
            0.03381138853728772, -1.0707262754440305`, -0.2961102873086929}, 
          "LeafValues" -> 
          RawArray["Real32",{-0.10218331217765808`, -0.0930924266576767, 
            0.10225331038236618`, 0.10279425978660583`, 0.10104312747716904`, 
            0.10066879540681839`}], "Children" -> 
          RawArray["Integer16",{{-1, 2}, {3, 4}, {-2, -4}, {-3, 
            5}, {-5, -6}}], "NominalSplits" -> {}, "RootIndex" -> 1, 
          "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
        MachineLearning`DecisionTree[<|
         "FeatureIndices" -> RawArray["Integer16",{29, 34, 1, 9, 8}], 
          "NumericalThresholds" -> {-0.7162206470966338, \
-0.07090339437127112, -0.34634712338447565`, -1.0707262754440305`, \
-0.2961102873086929}, "LeafValues" -> 
          RawArray["Real32",{-0.10197512805461884`, -0.1035090833902359, 
            0.10203833132982254`, 0.08227945864200592, 0.10094302147626877`, 
            0.10060478746891022`}], "Children" -> 
          RawArray["Integer16",{{-1, 2}, {3, 4}, {-2, -4}, {-3, 
            5}, {-5, -6}}], "NominalSplits" -> {}, "RootIndex" -> 1, 
          "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
        MachineLearning`DecisionTree[<|
         "FeatureIndices" -> RawArray["Integer16",{32, 22, 33, 7, 27, 9}], 
          "NumericalThresholds" -> {-0.6218454539775847, -0.6094448268413543, \
-0.418675810098648, 
           0.20608102530241015`, -0.2851888090372085, -1.0681399703025816`}, 
          "LeafValues" -> 
          RawArray[
            "Real32",{-0.1022467091679573, -0.08208394050598145, \
-0.006372613832354546, 0.102852463722229, 0.03844644874334335, 
            0.10109571367502213`, 0.10063163191080093`}], "Children" -> 
          RawArray["Integer16",{{-1, 2}, {-2, 3}, {-3, 4}, {5, -5}, {-4, 
            6}, {-6, -7}}], "NominalSplits" -> {}, "RootIndex" -> 1, 
          "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>]}, 
      "ClassNumber" -> 2, "IterationsNumber" -> 50, "Processor" -> 
      MachineLearning`MLProcessor[
       "Sequence", <|
        "Input" -> <|
          "(f1f2f3f4f5f6f7f8f9f10f11f12f13f14f15f16f17f18f19f20f21f22f23f24f25\
f26f27f28f29f30f31f32f33f34f35)" -> <|
            "Type" -> "NumericalVector", "Weight" -> 35|>|>, 
         "Output" -> <|
          "(f1f2f3f4f5f6f7f8f9f10f11f12f13f14f15f16f17f18f19f20f21f22f23f24f25\
f26f27f28f29f30f31f32f33f34f35)" -> <|
            "Type" -> "NumericalVector", "Weight" -> 35|>|>, "Processors" -> {
           MachineLearning`MLProcessor[
           "DensifyNumericalVector", <|
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|
              "(f1f2f3f4f5f6f7f8f9f10f11f12f13f14f15f16f17f18f19f20f21f22f23f2\
4f25f26f27f28f29f30f31f32f33f34f35)" -> <|
                "Type" -> "NumericalVector", "Weight" -> 35|>|>, 
             "Version" -> {13.2, 1}, "ID" -> 1272479996199965321, 
             "Output" -> <|
              "(f1f2f3f4f5f6f7f8f9f10f11f12f13f14f15f16f17f18f19f20f21f22f23f2\
4f25f26f27f28f29f30f31f32f33f34f35)" -> <|
                "Type" -> "NumericalVector", "Weight" -> 35|>|>|>], 
           MachineLearning`MLProcessor[
           "FirstValues", <|
            "Info" -> <|"Type" -> "NumericalVector", "Weight" -> 35|>, "Key" -> 
             "(f1f2f3f4f5f6f7f8f9f10f11f12f13f14f15f16f17f18f19f20f21f22f23f24\
f25f26f27f28f29f30f31f32f33f34f35)", "Invertibility" -> "Perfect", 
             "StructurePreserving" -> False, "Missing" -> "Allowed"|>]}, 
         "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
         "Missing" -> "Allowed"|>], "Calibrator" -> None, "Method" -> 
      "GradientBoostedTrees", "PostProcessor" -> 
      MachineLearning`MLProcessor["Identity"], 
      "Options" -> <|
       "BoostingMethod" -> <|"Value" -> "Gradient", "Options" -> <||>|>, 
        MaxTrainingRounds -> <|"Value" -> 50, "Options" -> <||>|>, 
        "LeavesNumber" -> <|"Value" -> 25, "Options" -> <||>|>, 
        "LearningRate" -> <|"Value" -> 0.1, "Options" -> <||>|>, 
        ValidationSet -> <|"Value" -> Automatic, "Options" -> <||>|>, 
        "MaxBinNumber" -> <|"Value" -> 255, "Options" -> <||>|>, 
        "ThreadNumber" -> <|"Value" -> 6, "Options" -> <||>|>, 
        "MaxDepth" -> <|"Value" -> 6, "Options" -> <||>|>, 
        "LeafSize" -> <|"Value" -> 15, "Options" -> <||>|>, 
        "FeatureFraction" -> <|"Value" -> 1, "Options" -> <||>|>, 
        "BaggingFraction" -> <|"Value" -> 1, "Options" -> <||>|>, 
        "BaggingFrequency" -> <|"Value" -> 0, "Options" -> <||>|>, 
        "MinGainToSplit" -> <|"Value" -> 0, "Options" -> <||>|>, 
        "L1Regularization" -> <|"Value" -> 0, "Options" -> <||>|>, 
        "L2Regularization" -> <|"Value" -> 0, "Options" -> <||>|>, 
        "LossFunction" -> <|"Value" -> Automatic, "Options" -> <||>|>|>|>, 
    "TrainingInformation" -> <|
     "Reporting" -> None, "TrainingFunction" -> Classify, "EMIterations" -> 
      Missing["KeyAbsent", "EMIterations"], "ProcessorEntropyShift" -> 0, 
      "PreprocessingTime" -> 2.7619466`7.892760271087781, "LossName" -> 
      "MeanCrossEntropy", "BestModelInformation" -> 
      Dataset[<|"MeanCrossEntropy" -> 
         Around[0.07898519180076136, 0.053646248960619806`], "Accuracy" -> 
         Around[0.9783184884935111, 0.04341116847091838], "EvaluationTime" -> 
         0.00022781237892148727`, "TestSize" -> 22, "ModelMemory" -> 119544, 
         "ModelUtility" -> 1.7179318303930928`, "Round" -> 2, "Iteration" -> 
         10, "TimeStamp" -> 3.9066986418187506`17.34438490070648*^9, 
         "TrainingSize" -> 86, "TrainingTime" -> 0.05011872336272722, 
         "TrainingMemory" -> 438808, "ExperimentCount" -> 1, 
         "MeanCrossEntropyHistory" -> {
           Around[0.07898519180076136, 0.03793362642527604]}, 
         "AccuracyHistory" -> {
           Around[0.9783184884935111, 0.030696331605018033`]}, 
         "IterationHistory" -> {10}, 
         "TimeStampHistory" -> {3.9066986418187506`17.34438490070648*^9}, 
         "Configuration" -> {
          "GradientBoostedTrees", "BoostingMethod" -> "Gradient", 
           MaxTrainingRounds -> 50, "LeavesNumber" -> 25, "LearningRate" -> 
           0.1, ValidationSet -> Automatic, "MaxBinNumber" -> 255, 
           "ThreadNumber" -> 6, "MaxDepth" -> 6, "LeafSize" -> 15, 
           "FeatureFraction" -> 1, "BaggingFraction" -> 1, "BaggingFrequency" -> 
           0, "MinGainToSplit" -> 0, "L1Regularization" -> 0, 
           "L2Regularization" -> 0, "LossFunction" -> Automatic}, 
         "FinalTrainingSize" -> 108|>, 
        TypeSystem`Assoc[
         TypeSystem`Atom[String], TypeSystem`AnyType, 19], <||>], 
      "Configurations" -> 
      Dataset[<|<|
          "Value" -> "GradientBoostedTrees", 
           "Options" -> <|
            "BoostingMethod" -> <|"Value" -> "Gradient"|>, 
             MaxTrainingRounds -> <|"Value" -> 50|>, 
             "LeavesNumber" -> <|"Value" -> 60|>, 
             "LearningRate" -> <|"Value" -> 0.04|>, 
             ValidationSet -> <|"Value" -> Automatic|>, 
             "MaxBinNumber" -> <|"Value" -> 255|>, 
             "ThreadNumber" -> <|"Value" -> 6|>, 
             "MaxDepth" -> <|"Value" -> 6|>, "LeafSize" -> <|"Value" -> 15|>, 
             "FeatureFraction" -> <|"Value" -> 1|>, 
             "BaggingFraction" -> <|"Value" -> 1|>, 
             "BaggingFrequency" -> <|"Value" -> 0|>, 
             "MinGainToSplit" -> <|"Value" -> 0|>, 
             "L1Regularization" -> <|"Value" -> 0|>, 
             "L2Regularization" -> <|"Value" -> 0|>, 
             "LossFunction" -> <|"Value" -> Automatic|>|>|> -> <|
          "Experiments" -> {<|
             "MeanCrossEntropy" -> 
              Around[0.7591354253357039, 0.05202237520882902], "Accuracy" -> 
              Around[0.5159715450569229, 0.07308888114014646], 
              "EvaluationTime" -> 0.000053891100390029246`, "TestSize" -> 93, 
              "ModelMemory" -> 20912, "ModelUtility" -> -0.4312175627749545, 
              "Round" -> 1, "Iteration" -> 1, "TimeStamp" -> 
              3.906698641417875`17.34438490066191*^9, "TrainingSize" -> 15, 
              "TrainingTime" -> 0.03981071705534971, "TrainingMemory" -> 
              127176, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                Around[0.7591354253357039, 0.036785374283593936`]}, 
              "AccuracyHistory" -> {
                Around[0.5159715450569229, 0.05168164348353512]}, 
              "IterationHistory" -> {1}, 
              "TimeStampHistory" -> {
               3.906698641417875`17.34438490066191*^9}|>, <|
             "MeanCrossEntropy" -> 
              Around[0.30202323564273953`, 0.09911027136881449], "Accuracy" -> 
              Around[0.8478837058848154, 0.10704652667627777`], 
              "EvaluationTime" -> 0.00022781237892148727`, "TestSize" -> 22, 
              "ModelMemory" -> 119016, "ModelUtility" -> 0.4404926827863036, 
              "Round" -> 2, "Iteration" -> 21, "TimeStamp" -> 
              3.9066986430661876`17.34438490084515*^9, "TrainingSize" -> 86, 
              "TrainingTime" -> 0.05011872336272722, "TrainingMemory" -> 
              428712, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                Around[0.30202323564273953`, 0.07008154497012765]}, 
              "AccuracyHistory" -> {
                Around[0.8478837058848154, 0.07569332491526266]}, 
              "IterationHistory" -> {21}, 
              "TimeStampHistory" -> {
               3.9066986430661876`17.34438490084515*^9}|>}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 0.00022781237892148727`, "MeanCrossEntropy" -> 
             Around[0.30202323564273953`, 0.09911027136881449], "ModelMemory" -> 
             119016, "TrainingMemory" -> 428712, "TrainingTime" -> 
             0.09393893828709511|>, "Index" -> 1|>, <|
          "Value" -> "GradientBoostedTrees", 
           "Options" -> <|
            "BoostingMethod" -> <|"Value" -> "Gradient"|>, 
             MaxTrainingRounds -> <|"Value" -> 50|>, 
             "LeavesNumber" -> <|"Value" -> 60|>, 
             "LearningRate" -> <|"Value" -> 0.004|>, 
             ValidationSet -> <|"Value" -> Automatic|>, 
             "MaxBinNumber" -> <|"Value" -> 255|>, 
             "ThreadNumber" -> <|"Value" -> 6|>, 
             "MaxDepth" -> <|"Value" -> 6|>, "LeafSize" -> <|"Value" -> 35|>, 
             "FeatureFraction" -> <|"Value" -> 1|>, 
             "BaggingFraction" -> <|"Value" -> 1|>, 
             "BaggingFrequency" -> <|"Value" -> 0|>, 
             "MinGainToSplit" -> <|"Value" -> 0|>, 
             "L1Regularization" -> <|"Value" -> 0|>, 
             "L2Regularization" -> <|"Value" -> 0|>, 
             "LossFunction" -> <|"Value" -> Automatic|>|>|> -> <|
          "Experiments" -> {<|
             "MeanCrossEntropy" -> 
              Around[0.7591354253357039, 0.05202237520882902], "Accuracy" -> 
              Around[0.5159715450569229, 0.07308888114014646], 
              "EvaluationTime" -> 0.000027009531521608382`, "TestSize" -> 93, 
              "ModelMemory" -> 20912, "ModelUtility" -> -0.43121753589338563`,
               "Round" -> 1, "Iteration" -> 4, "TimeStamp" -> 
              3.9066986415606714`17.344384900677788*^9, "TrainingSize" -> 15, 
              "TrainingTime" -> 0.015848931924611134`, "TrainingMemory" -> 
              80752, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                Around[0.7591354253357039, 0.036785374283593936`]}, 
              "AccuracyHistory" -> {
                Around[0.5159715450569229, 0.05168164348353512]}, 
              "IterationHistory" -> {4}, 
              "TimeStampHistory" -> {
               3.9066986415606714`17.344384900677788*^9}|>, <|
             "MeanCrossEntropy" -> 
              Around[0.6325692048817857, 0.05284386053492474], "Accuracy" -> 
              Around[0.8044054450152501, 0.11823129557169094`], 
              "EvaluationTime" -> 0.00018095780479704407`, "TestSize" -> 22, 
              "ModelMemory" -> 115968, 
              "ModelUtility" -> -0.25179523594366104`, "Round" -> 2, 
              "Iteration" -> 14, "TimeStamp" -> 
              3.9066986426695456`17.34438490080106*^9, "TrainingSize" -> 86, 
              "TrainingTime" -> 0.03981071705534971, "TrainingMemory" -> 
              361656, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                Around[0.6325692048817857, 0.03736625212832146]}, 
              "AccuracyHistory" -> {
                Around[0.8044054450152501, 0.08360215084721369]}, 
              "IterationHistory" -> {14}, 
              "TimeStampHistory" -> {
               3.9066986426695456`17.34438490080106*^9}|>}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 0.00018095780479704407`, "MeanCrossEntropy" -> 
             Around[0.6325692048817857, 0.05284386053492474], "ModelMemory" -> 
             115968, "TrainingMemory" -> 361656, "TrainingTime" -> 
             0.05884450634438883|>, "Index" -> 2|>, <|
          "Value" -> "GradientBoostedTrees", 
           "Options" -> <|
            "BoostingMethod" -> <|"Value" -> "Gradient"|>, 
             MaxTrainingRounds -> <|"Value" -> 50|>, 
             "LeavesNumber" -> <|"Value" -> 250|>, 
             "LearningRate" -> <|"Value" -> 0.02|>, 
             ValidationSet -> <|"Value" -> Automatic|>, 
             "MaxBinNumber" -> <|"Value" -> 255|>, 
             "ThreadNumber" -> <|"Value" -> 6|>, 
             "MaxDepth" -> <|"Value" -> 6|>, "LeafSize" -> <|"Value" -> 7|>, 
             "FeatureFraction" -> <|"Value" -> 1|>, 
             "BaggingFraction" -> <|"Value" -> 1|>, 
             "BaggingFrequency" -> <|"Value" -> 0|>, 
             "MinGainToSplit" -> <|"Value" -> 0|>, 
             "L1Regularization" -> <|"Value" -> 0|>, 
             "L2Regularization" -> <|"Value" -> 0|>, 
             "LossFunction" -> <|"Value" -> Automatic|>|>|> -> <|
          "Experiments" -> {<|
             "MeanCrossEntropy" -> 
              Around[0.6086508425592143, 0.05666079227915946], "Accuracy" -> 
              Around[0.7180992046313912, 0.06580264706584096], 
              "EvaluationTime" -> 0.000053891100390029246`, "TestSize" -> 93, 
              "ModelMemory" -> 115968, 
              "ModelUtility" -> -0.21512788441834496`, "Round" -> 1, 
              "Iteration" -> 5, "TimeStamp" -> 
              3.9066986415836097`17.344384900680343*^9, "TrainingSize" -> 15, 
              "TrainingTime" -> 0.03162277660168379, "TrainingMemory" -> 
              309792, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                Around[0.6086508425592143, 0.04006523044799603]}, 
              "AccuracyHistory" -> {
                Around[0.7180992046313912, 0.04652949796028121]}, 
              "IterationHistory" -> {5}, 
              "TimeStampHistory" -> {
               3.9066986415836097`17.344384900680343*^9}|>, <|
             "MeanCrossEntropy" -> 
              Around[0.35478108961019, 0.09256015584278235], "Accuracy" -> 
              Around[0.8478837058848154, 0.10704652667627777`], 
              "EvaluationTime" -> 0.00018095780479704407`, "TestSize" -> 22, 
              "ModelMemory" -> 125888, "ModelUtility" -> 0.2921989360006866, 
              "Round" -> 2, "Iteration" -> 7, "TimeStamp" -> 
              3.9066986416804729`17.344384900691104*^9, "TrainingSize" -> 86, 
              "TrainingTime" -> 0.07943282347242814, "TrainingMemory" -> 
              571736, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                Around[0.35478108961019, 0.06544991386411503]}, 
              "AccuracyHistory" -> {
                Around[0.8478837058848154, 0.07569332491526266]}, 
              "IterationHistory" -> {7}, 
              "TimeStampHistory" -> {
               3.9066986416804729`17.344384900691104*^9}|>}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 0.00018095780479704407`, "MeanCrossEntropy" -> 
             Around[0.35478108961019, 0.09256015584278235], "ModelMemory" -> 
             125888, "TrainingMemory" -> 571736, "TrainingTime" -> 
             0.11741022595190619`|>, "Index" -> 3|>, <|
          "Value" -> "GradientBoostedTrees", 
           "Options" -> <|
            "BoostingMethod" -> <|"Value" -> "Gradient"|>, 
             MaxTrainingRounds -> <|"Value" -> 50|>, 
             "LeavesNumber" -> <|"Value" -> 60|>, 
             "LearningRate" -> <|"Value" -> 0.1|>, 
             ValidationSet -> <|"Value" -> Automatic|>, 
             "MaxBinNumber" -> <|"Value" -> 255|>, 
             "ThreadNumber" -> <|"Value" -> 6|>, 
             "MaxDepth" -> <|"Value" -> 6|>, "LeafSize" -> <|"Value" -> 3|>, 
             "FeatureFraction" -> <|"Value" -> 1|>, 
             "BaggingFraction" -> <|"Value" -> 1|>, 
             "BaggingFrequency" -> <|"Value" -> 0|>, 
             "MinGainToSplit" -> <|"Value" -> 0|>, 
             "L1Regularization" -> <|"Value" -> 0|>, 
             "L2Regularization" -> <|"Value" -> 0|>, 
             "LossFunction" -> <|"Value" -> Automatic|>|>|> -> <|
          "Experiments" -> {<|
             "MeanCrossEntropy" -> 
              Around[0.6758290645540268, 0.19643868958262417`], "Accuracy" -> 
              Around[0.7819289918654342, 0.06039286248038495], 
              "EvaluationTime" -> 0.000053891100390029246`, "TestSize" -> 93, 
              "ModelMemory" -> 118944, 
              "ModelUtility" -> -0.35788206037561865`, "Round" -> 1, 
              "Iteration" -> 6, "TimeStamp" -> 
              3.9066986416274922`17.344384900685217*^9, "TrainingSize" -> 15, 
              "TrainingTime" -> 0.03981071705534971, "TrainingMemory" -> 
              374328, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                Around[0.6758290645540268, 0.13890312949127276`]}, 
              "AccuracyHistory" -> {
                Around[0.7819289918654342, 0.04270420259514682]}, 
              "IterationHistory" -> {6}, 
              "TimeStampHistory" -> {
               3.9066986416274922`17.344384900685217*^9}|>, <|
             "MeanCrossEntropy" -> 
              Around[0.29813066118200565`, 0.36410373536684293`], "Accuracy" -> 
              Around[0.9348402276239458, 0.07356564429936031], 
              "EvaluationTime" -> 0.00022781237892148727`, "TestSize" -> 22, 
              "ModelMemory" -> 130880, "ModelUtility" -> 0.2984911866441404, 
              "Round" -> 2, "Iteration" -> 19, "TimeStamp" -> 
              3.9066986429051134`17.344384900827244*^9, "TrainingSize" -> 86, 
              "TrainingTime" -> 0.07943282347242814, "TrainingMemory" -> 
              689176, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                Around[0.29813066118200565`, 0.2574602203332468]}, 
              "AccuracyHistory" -> {
                Around[0.9348402276239458, 0.052018765946435154`]}, 
              "IterationHistory" -> {19}, 
              "TimeStampHistory" -> {
               3.9066986429051134`17.344384900827244*^9}|>}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 0.00022781237892148727`, "MeanCrossEntropy" -> 
             Around[0.29813066118200565`, 0.36410373536684293`], 
             "ModelMemory" -> 130880, "TrainingMemory" -> 689176, 
             "TrainingTime" -> 0.12559816640557211`|>, "Index" -> 4|>, <|
          "Value" -> "GradientBoostedTrees", 
           "Options" -> <|
            "BoostingMethod" -> <|"Value" -> "Gradient"|>, 
             MaxTrainingRounds -> <|"Value" -> 50|>, 
             "LeavesNumber" -> <|"Value" -> 250|>, 
             "LearningRate" -> <|"Value" -> 0.1|>, 
             ValidationSet -> <|"Value" -> Automatic|>, 
             "MaxBinNumber" -> <|"Value" -> 255|>, 
             "ThreadNumber" -> <|"Value" -> 6|>, 
             "MaxDepth" -> <|"Value" -> 6|>, "LeafSize" -> <|"Value" -> 90|>, 
             "FeatureFraction" -> <|"Value" -> 1|>, 
             "BaggingFraction" -> <|"Value" -> 1|>, 
             "BaggingFrequency" -> <|"Value" -> 0|>, 
             "MinGainToSplit" -> <|"Value" -> 0|>, 
             "L1Regularization" -> <|"Value" -> 0|>, 
             "L2Regularization" -> <|"Value" -> 0|>, 
             "LossFunction" -> <|"Value" -> Automatic|>|>|> -> <|
          "Experiments" -> {<|
             "MeanCrossEntropy" -> 
              Around[0.7591354253357039, 0.05202237520882902], "Accuracy" -> 
              Around[0.5159715450569229, 0.07308888114014646], 
              "EvaluationTime" -> 0.00003400298559320838, "TestSize" -> 93, 
              "ModelMemory" -> 20912, "ModelUtility" -> -0.4312175428868398, 
              "Round" -> 1, "Iteration" -> 2, "TimeStamp" -> 
              3.9066986414699149`17.344384900667702*^9, "TrainingSize" -> 15, 
              "TrainingTime" -> 0.015848931924611134`, "TrainingMemory" -> 
              80552, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                Around[0.7591354253357039, 0.036785374283593936`]}, 
              "AccuracyHistory" -> {
                Around[0.5159715450569229, 0.05168164348353512]}, 
              "IterationHistory" -> {2}, 
              "TimeStampHistory" -> {
               3.9066986414699149`17.344384900667702*^9}|>, <|
             "MeanCrossEntropy" -> 
              Around[0.7060447437340581, 0.0360419467939657], "Accuracy" -> 
              Around[0.5000576189282936, 0.14903441558367644`], 
              "EvaluationTime" -> 0.0000906937415894945, "TestSize" -> 22, 
              "ModelMemory" -> 20912, "ModelUtility" -> -0.35526117808392454`,
               "Round" -> 2, "Iteration" -> 15, "TimeStamp" -> 
              3.9066986427204098`17.344384900806713*^9, "TrainingSize" -> 86, 
              "TrainingTime" -> 0.015848931924611134`, "TrainingMemory" -> 
              162232, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                Around[0.7060447437340581, 0.02548550498517789]}, 
              "AccuracyHistory" -> {
                Around[0.5000576189282936, 0.10538324588939167`]}, 
              "IterationHistory" -> {15}, 
              "TimeStampHistory" -> {
               3.9066986427204098`17.344384900806713*^9}|>}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 0.0000906937415894945, "MeanCrossEntropy" -> 
             Around[0.7060447437340581, 0.0360419467939657], "ModelMemory" -> 
             20912, "TrainingMemory" -> 162232, "TrainingTime" -> 
             0.03296577840319116|>, "Index" -> 5|>, <|
          "Value" -> "GradientBoostedTrees", 
           "Options" -> <|
            "BoostingMethod" -> <|"Value" -> "Gradient"|>, 
             MaxTrainingRounds -> <|"Value" -> 50|>, 
             "LeavesNumber" -> <|"Value" -> 60|>, 
             "LearningRate" -> <|"Value" -> 0.2|>, 
             ValidationSet -> <|"Value" -> Automatic|>, 
             "MaxBinNumber" -> <|"Value" -> 255|>, 
             "ThreadNumber" -> <|"Value" -> 6|>, 
             "MaxDepth" -> <|"Value" -> 6|>, "LeafSize" -> <|"Value" -> 35|>, 
             "FeatureFraction" -> <|"Value" -> 1|>, 
             "BaggingFraction" -> <|"Value" -> 1|>, 
             "BaggingFrequency" -> <|"Value" -> 0|>, 
             "MinGainToSplit" -> <|"Value" -> 0|>, 
             "L1Regularization" -> <|"Value" -> 0|>, 
             "L2Regularization" -> <|"Value" -> 0|>, 
             "LossFunction" -> <|"Value" -> Automatic|>|>|> -> <|
          "Experiments" -> {<|
             "MeanCrossEntropy" -> 
              Around[0.7591354253357039, 0.05202237520882902], "Accuracy" -> 
              Around[0.5159715450569229, 0.07308888114014646], 
              "EvaluationTime" -> 0.000027009531521608382`, "TestSize" -> 93, 
              "ModelMemory" -> 20912, "ModelUtility" -> -0.43121753589338563`,
               "Round" -> 1, "Iteration" -> 8, "TimeStamp" -> 
              3.906698641775865`17.34438490070171*^9, "TrainingSize" -> 15, 
              "TrainingTime" -> 0.015848931924611134`, "TrainingMemory" -> 
              80336, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                Around[0.7591354253357039, 0.036785374283593936`]}, 
              "AccuracyHistory" -> {
                Around[0.5159715450569229, 0.05168164348353512]}, 
              "IterationHistory" -> {8}, 
              "TimeStampHistory" -> {
               3.906698641775865`17.34438490070171*^9}|>, <|
             "MeanCrossEntropy" -> 
              Around[0.29093850656667153`, 0.12052055790479511`], "Accuracy" -> 
              Around[0.8478837058848154, 0.10704652667627777`], 
              "EvaluationTime" -> 0.00018095780479704407`, "TestSize" -> 22, 
              "ModelMemory" -> 115968, "ModelUtility" -> 0.46185612307978985`,
               "Round" -> 2, "Iteration" -> 16, "TimeStamp" -> 
              3.9066986427443474`17.344384900809374*^9, "TrainingSize" -> 86, 
              "TrainingTime" -> 0.03981071705534971, "TrainingMemory" -> 
              361416, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                Around[0.29093850656667153`, 0.08522090376686658]}, 
              "AccuracyHistory" -> {
                Around[0.8478837058848154, 0.07569332491526266]}, 
              "IterationHistory" -> {16}, 
              "TimeStampHistory" -> {
               3.9066986427443474`17.344384900809374*^9}|>}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 0.00018095780479704407`, "MeanCrossEntropy" -> 
             Around[0.29093850656667153`, 0.12052055790479511`], 
             "ModelMemory" -> 115968, "TrainingMemory" -> 361416, 
             "TrainingTime" -> 0.05884450634438883|>, "Index" -> 6|>, <|
          "Value" -> "GradientBoostedTrees", 
           "Options" -> <|
            "BoostingMethod" -> <|"Value" -> "Gradient"|>, 
             MaxTrainingRounds -> <|"Value" -> 50|>, 
             "LeavesNumber" -> <|"Value" -> 25|>, 
             "LearningRate" -> <|"Value" -> 0.1|>, 
             ValidationSet -> <|"Value" -> Automatic|>, 
             "MaxBinNumber" -> <|"Value" -> 255|>, 
             "ThreadNumber" -> <|"Value" -> 6|>, 
             "MaxDepth" -> <|"Value" -> 6|>, "LeafSize" -> <|"Value" -> 15|>, 
             "FeatureFraction" -> <|"Value" -> 1|>, 
             "BaggingFraction" -> <|"Value" -> 1|>, 
             "BaggingFrequency" -> <|"Value" -> 0|>, 
             "MinGainToSplit" -> <|"Value" -> 0|>, 
             "L1Regularization" -> <|"Value" -> 0|>, 
             "L2Regularization" -> <|"Value" -> 0|>, 
             "LossFunction" -> <|"Value" -> Automatic|>|>|> -> <|
          "Experiments" -> {<|
             "MeanCrossEntropy" -> 
              Around[0.7324787422699939, 0.027752434688298338`], "Accuracy" -> 
              Around[0.4840566514399016, 0.04846227838509161], 
              "EvaluationTime" -> 0.000021454433494289023`, "TestSize" -> 186,
               "ModelMemory" -> 20912., "ModelUtility" -> -0.389408155849856, 
              "Round" -> 1, "Iteration" -> 13, "TimeStamp" -> 
              3.9066986419196745`17.344384900717696*^9, "TrainingSize" -> 15, 
              "TrainingTime" -> 0.029424747561300875`, "TrainingMemory" -> 
              133104., "ExperimentCount" -> 2, "MeanCrossEntropyHistory" -> {
                Around[0.7591354253357039, 0.036785374283593936`], 
                Around[0.705822059204284, 0.007897258089673278]}, 
              "AccuracyHistory" -> {
                Around[0.5159715450569229, 0.05168164348353512], 
                Around[0.4521417578228803, 0.05147062030696194]}, 
              "IterationHistory" -> {9, 13}, 
              "TimeStampHistory" -> {
               3.9066986417988038`17.34438490070426*^9, 
                3.9066986419196745`17.344384900717696*^9}|>, <|
             "MeanCrossEntropy" -> 
              Around[0.07898519180076136, 0.053646248960619806`], "Accuracy" -> 
              Around[0.9783184884935111, 0.04341116847091838], 
              "EvaluationTime" -> 0.00022781237892148727`, "TestSize" -> 22, 
              "ModelMemory" -> 119544, "ModelUtility" -> 1.7179318303930928`, 
              "Round" -> 2, "Iteration" -> 10, "TimeStamp" -> 
              3.9066986418187506`17.34438490070648*^9, "TrainingSize" -> 86, 
              "TrainingTime" -> 0.05011872336272722, "TrainingMemory" -> 
              438808, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                Around[0.07898519180076136, 0.03793362642527604]}, 
              "AccuracyHistory" -> {
                Around[0.9783184884935111, 0.030696331605018033`]}, 
              "IterationHistory" -> {10}, 
              "TimeStampHistory" -> {
               3.9066986418187506`17.34438490070648*^9}|>}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 0.00022781237892148727`, "MeanCrossEntropy" -> 
             Around[0.07898519180076136, 0.053646248960619806`], 
             "ModelMemory" -> 119544, "TrainingMemory" -> 438808, 
             "TrainingTime" -> 0.08355296879304627|>, "Index" -> 7|>, <|
          "Value" -> "GradientBoostedTrees", 
           "Options" -> <|
            "BoostingMethod" -> <|"Value" -> "Gradient"|>, 
             MaxTrainingRounds -> <|"Value" -> 50|>, 
             "LeavesNumber" -> <|"Value" -> 110|>, 
             "LearningRate" -> <|"Value" -> 0.2|>, 
             ValidationSet -> <|"Value" -> Automatic|>, 
             "MaxBinNumber" -> <|"Value" -> 255|>, 
             "ThreadNumber" -> <|"Value" -> 6|>, 
             "MaxDepth" -> <|"Value" -> 6|>, "LeafSize" -> <|"Value" -> 7|>, 
             "FeatureFraction" -> <|"Value" -> 1|>, 
             "BaggingFraction" -> <|"Value" -> 1|>, 
             "BaggingFrequency" -> <|"Value" -> 0|>, 
             "MinGainToSplit" -> <|"Value" -> 0|>, 
             "L1Regularization" -> <|"Value" -> 0|>, 
             "L2Regularization" -> <|"Value" -> 0|>, 
             "LossFunction" -> <|"Value" -> Automatic|>|>|> -> <|
          "Experiments" -> {<|
             "MeanCrossEntropy" -> 
              Around[0.7608897705695441, 0.19337101273314622`], "Accuracy" -> 
              Around[0.7500140982484127, 0.06332795485798208], 
              "EvaluationTime" -> 0.00008541163814239586, "TestSize" -> 93, 
              "ModelMemory" -> 115968, "ModelUtility" -> -0.4695024014716226, 
              "Round" -> 1, "Iteration" -> 3, "TimeStamp" -> 
              3.9066986414968426`17.34438490067069*^9, "TrainingSize" -> 15, 
              "TrainingTime" -> 0.05011872336272722, "TrainingMemory" -> 
              309760, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                Around[0.7608897705695441, 0.1367339543885179]}, 
              "AccuracyHistory" -> {
                Around[0.7500140982484127, 0.04477962631875469]}, 
              "IterationHistory" -> {3}, 
              "TimeStampHistory" -> {
               3.9066986414968426`17.34438490067069*^9}|>, <|
             "MeanCrossEntropy" -> 
              Around[0.2726449790765992, 0.3348601303283894], "Accuracy" -> 
              Around[0.934840227623946, 0.07356564429936033], 
              "EvaluationTime" -> 0.00018095780479704407`, "TestSize" -> 22, 
              "ModelMemory" -> 125168, "ModelUtility" -> 0.38674445022108384`,
               "Round" -> 2, "Iteration" -> 20, "TimeStamp" -> 
              3.9066986429933826`17.344384900837056*^9, "TrainingSize" -> 86, 
              "TrainingTime" -> 0.0630957344480193, "TrainingMemory" -> 
              561832, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                Around[0.2726449790765992, 0.2367818689042152]}, 
              "AccuracyHistory" -> {
                Around[0.934840227623946, 0.05201876594643517]}, 
              "IterationHistory" -> {20}, 
              "TimeStampHistory" -> {
               3.9066986429933826`17.344384900837056*^9}|>}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 0.00018095780479704407`, "MeanCrossEntropy" -> 
             Around[0.2726449790765992, 0.3348601303283894], "ModelMemory" -> 
             125168, "TrainingMemory" -> 561832, "TrainingTime" -> 
             0.11826211656658808`|>, "Index" -> 8|>, <|
          "Value" -> "GradientBoostedTrees", 
           "Options" -> <|
            "BoostingMethod" -> <|"Value" -> "Gradient"|>, 
             MaxTrainingRounds -> <|"Value" -> 50|>, 
             "LeavesNumber" -> <|"Value" -> 110|>, 
             "LearningRate" -> <|"Value" -> 0.1|>, 
             ValidationSet -> <|"Value" -> Automatic|>, 
             "MaxBinNumber" -> <|"Value" -> 255|>, 
             "ThreadNumber" -> <|"Value" -> 6|>, 
             "MaxDepth" -> <|"Value" -> 6|>, "LeafSize" -> <|"Value" -> 15|>, 
             "FeatureFraction" -> <|"Value" -> 1|>, 
             "BaggingFraction" -> <|"Value" -> 1|>, 
             "BaggingFrequency" -> <|"Value" -> 0|>, 
             "MinGainToSplit" -> <|"Value" -> 0|>, 
             "L1Regularization" -> <|"Value" -> 0|>, 
             "L2Regularization" -> <|"Value" -> 0|>, 
             "LossFunction" -> <|"Value" -> Automatic|>|>|> -> <|
          "Experiments" -> {<|
             "MeanCrossEntropy" -> 
              Around[0.7591354253357039, 0.05202237520882902], "Accuracy" -> 
              Around[0.5159715450569229, 0.07308888114014646], 
              "EvaluationTime" -> 0.000027009531521608382`, "TestSize" -> 93, 
              "ModelMemory" -> 20912, "ModelUtility" -> -0.43121753589338563`,
               "Round" -> 1, "Iteration" -> 11, "TimeStamp" -> 
              3.9066986418777246`17.344384900713038*^9, "TrainingSize" -> 15, 
              "TrainingTime" -> 0.012589254117941668`, "TrainingMemory" -> 
              80400, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                Around[0.7591354253357039, 0.036785374283593936`]}, 
              "AccuracyHistory" -> {
                Around[0.5159715450569229, 0.05168164348353512]}, 
              "IterationHistory" -> {11}, 
              "TimeStampHistory" -> {
               3.9066986418777246`17.344384900713038*^9}|>, <|
             "MeanCrossEntropy" -> 
              Around[0.19296913400722207`, 0.11969658527564575`], "Accuracy" -> 
              Around[0.9131010971891633, 0.07115121097614362], 
              "EvaluationTime" -> 0.00021219418754667285`, "TestSize" -> 44, 
              "ModelMemory" -> 119394.66666666666`, "ModelUtility" -> 
              0.8350882382908025, "Round" -> 2, "Iteration" -> 22, 
              "TimeStamp" -> 3.9066986431220385`17.34438490085136*^9, 
              "TrainingSize" -> 86, "TrainingTime" -> 0.05011872336272722, 
              "TrainingMemory" -> 435848., "ExperimentCount" -> 2, 
              "MeanCrossEntropyHistory" -> {
                Around[0.07898519180076136, 0.03793362642527604], 
                Around[0.3069530762136828, 0.13588829029771057`]}, 
              "AccuracyHistory" -> {
                Around[0.9783184884935111, 0.030696331605018033`], 
                Around[0.8478837058848154, 0.07569332491526266]}, 
              "IterationHistory" -> {17, 22}, 
              "TimeStampHistory" -> {
               3.9066986427954068`17.344384900815047*^9, 
                3.9066986431220385`17.34438490085136*^9}|>}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 0.00021219418754667285`, "MeanCrossEntropy" -> 
             Around[0.19296913400722207`, 0.11969658527564575`], 
             "ModelMemory" -> 119394.66666666666`, "TrainingMemory" -> 
             435848., "TrainingTime" -> 0.06671747534968707|>, "Index" -> 
           9|>, <|"Value" -> "GradientBoostedTrees", 
           "Options" -> <|
            "BoostingMethod" -> <|"Value" -> "Gradient"|>, 
             MaxTrainingRounds -> <|"Value" -> 50|>, 
             "LeavesNumber" -> <|"Value" -> 60|>, 
             "LearningRate" -> <|"Value" -> 0.04|>, 
             ValidationSet -> <|"Value" -> Automatic|>, 
             "MaxBinNumber" -> <|"Value" -> 255|>, 
             "ThreadNumber" -> <|"Value" -> 6|>, 
             "MaxDepth" -> <|"Value" -> 6|>, "LeafSize" -> <|"Value" -> 35|>, 
             "FeatureFraction" -> <|"Value" -> 1|>, 
             "BaggingFraction" -> <|"Value" -> 1|>, 
             "BaggingFrequency" -> <|"Value" -> 0|>, 
             "MinGainToSplit" -> <|"Value" -> 0|>, 
             "L1Regularization" -> <|"Value" -> 0|>, 
             "L2Regularization" -> <|"Value" -> 0|>, 
             "LossFunction" -> <|"Value" -> Automatic|>|>|> -> <|
          "Experiments" -> {<|
             "MeanCrossEntropy" -> 
              Around[0.7591354253357039, 0.05202237520882902], "Accuracy" -> 
              Around[0.5159715450569229, 0.07308888114014646], 
              "EvaluationTime" -> 0.000021454433494289023`, "TestSize" -> 93, 
              "ModelMemory" -> 20912, "ModelUtility" -> -0.4312175303382876, 
              "Round" -> 1, "Iteration" -> 12, "TimeStamp" -> 
              3.9066986418977332`17.34438490071526*^9, "TrainingSize" -> 15, 
              "TrainingTime" -> 0.015848931924611134`, "TrainingMemory" -> 
              80400, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                Around[0.7591354253357039, 0.036785374283593936`]}, 
              "AccuracyHistory" -> {
                Around[0.5159715450569229, 0.05168164348353512]}, 
              "IterationHistory" -> {12}, 
              "TimeStampHistory" -> {
               3.9066986418977332`17.34438490071526*^9}|>, <|
             "MeanCrossEntropy" -> 
              Around[0.4382234929802379, 0.11787930074345872`], "Accuracy" -> 
              Around[0.8044054450152501, 0.11823129557169094`], 
              "EvaluationTime" -> 0.0002867987929455423, "TestSize" -> 22, 
              "ModelMemory" -> 115968, "ModelUtility" -> 0.07943344646036765, 
              "Round" -> 2, "Iteration" -> 18, "TimeStamp" -> 
              3.9066986428532522`17.34438490082148*^9, "TrainingSize" -> 86, 
              "TrainingTime" -> 0.03981071705534971, "TrainingMemory" -> 
              361624, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                Around[0.4382234929802379, 0.08335325291722809]}, 
              "AccuracyHistory" -> {
                Around[0.8044054450152501, 0.08360215084721369]}, 
              "IterationHistory" -> {18}, 
              "TimeStampHistory" -> {
               3.9066986428532522`17.34438490082148*^9}|>}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 0.0002867987929455423, "MeanCrossEntropy" -> 
             Around[0.4382234929802379, 0.11787930074345872`], "ModelMemory" -> 
             115968, "TrainingMemory" -> 361624, "TrainingTime" -> 
             0.05884450634438883|>, "Index" -> 10|>|>, 
        TypeSystem`Assoc[
         TypeSystem`Struct[{"Value", "Options"}, {
           TypeSystem`Atom[
            TypeSystem`Enumeration["GradientBoostedTrees"]], 
           TypeSystem`Assoc[TypeSystem`AnyType, 
            TypeSystem`Struct[{"Value"}, {TypeSystem`AnyType}], 16]}], 
         TypeSystem`Struct[{"Experiments", "PredictedPerformances", "Index"}, {
           TypeSystem`Vector[
            
            TypeSystem`Struct[{
             "MeanCrossEntropy", "Accuracy", "EvaluationTime", "TestSize", 
              "ModelMemory", "ModelUtility", "Round", "Iteration", 
              "TimeStamp", "TrainingSize", "TrainingTime", "TrainingMemory", 
              "ExperimentCount", "MeanCrossEntropyHistory", "AccuracyHistory",
               "IterationHistory", "TimeStampHistory"}, {
             TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Vector[TypeSystem`AnyType, TypeSystem`AnyLength], 
              TypeSystem`Vector[TypeSystem`AnyType, TypeSystem`AnyLength], 
              TypeSystem`Vector[
               TypeSystem`Atom[Integer], TypeSystem`AnyLength], 
              TypeSystem`Vector[
               TypeSystem`Atom[Real], TypeSystem`AnyLength]}], 2], 
           
           TypeSystem`Struct[{
            "EvaluationTime", "MeanCrossEntropy", "ModelMemory", 
             "TrainingMemory", "TrainingTime"}, {
             TypeSystem`Atom[Real], TypeSystem`AnyType, 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real]}], 
           TypeSystem`Atom[Integer]}], 10], <||>], 
      "TrainingSizes" -> {15, 86}, "MaxTrainingSize" -> 108, 
      "PreprocessorEvaluationTime" -> 8.3671875*^-6, "PreprocessorMemory" -> 
      260792, "InputDimension" -> 35, "OutputDimension" -> 1, 
      "BaselineLogProbability" -> -0.6905002161617066, "VariableBudget" -> 
      True, "CheckpointingInfo" -> <|"Checkpointing" -> False|>, "UserStop" -> 
      False, "NaturalStop" -> True, "AbortStop" -> False, "LastReportingTime" -> 
      3.9066986433800414`17.344384900880044*^9, "RoundPartitioning" -> 
      Dataset[{<|
         "TrainingSizes" -> 15, "TimeBudgets" -> 0.5661272423884002, 
          "ElapsedTimes" -> 1.0733688, "ExperimentCounts" -> 11|>, <|
         "TrainingSizes" -> 86, "TimeBudgets" -> 0.8087532034120003, 
          "ElapsedTimes" -> 0.8398022, "ExperimentCounts" -> 11|>}, 
        TypeSystem`Vector[
         TypeSystem`Struct[{
          "TrainingSizes", "TimeBudgets", "ElapsedTimes", 
           "ExperimentCounts"}, {
           TypeSystem`Atom[Integer], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Integer]}], 2], <||>]|>, "AnomalyDetector" -> None,
     "Log" -> <|
     "Example" -> 
      MachineLearning`MLDataset[<|
        "f1" -> <|
          "Type" -> "Numerical", "Weight" -> 1, "Values" -> {27.3}, "ID" -> 
           3361736597150152620|>, 
         "f2" -> <|
          "Type" -> "Numerical", "Weight" -> 1, "Values" -> {36.8}, "ID" -> 
           7791000776415961216|>, 
         "f3" -> <|
          "Type" -> "Numerical", "Weight" -> 1, "Values" -> {2}, "ID" -> 
           7471635591837465013|>, 
         "f4" -> <|
          "Type" -> "Numerical", "Weight" -> 1, 
           "Values" -> {9.499999999999996}, "ID" -> 1871934678066509046|>, 
         "f5" -> <|
          "Type" -> "Numerical", "Weight" -> 1, 
           "Values" -> {9.499999999999996}, "ID" -> 2970350396350214129|>, 
         "f6" -> <|
          "Type" -> "Numerical", "Weight" -> 1, 
           "Values" -> {9.499999999999996}, "ID" -> 6769000167675608711|>, 
         "f7" -> <|
          "Type" -> "Numerical", "Weight" -> 1, 
           "Values" -> {29.199014843483916`}, "ID" -> 1550773774924340044|>, 
         "f8" -> <|
          "Type" -> "Numerical", "Weight" -> 1, 
           "Values" -> {10.400000000000002`}, "ID" -> 4268274903870089393|>, 
         "f9" -> <|
          "Type" -> "Numerical", "Weight" -> 1, "Values" -> {93.8}, "ID" -> 
           3576477033592387790|>, 
         "f10" -> <|
          "Type" -> "Numerical", "Weight" -> 1, "Values" -> {3}, "ID" -> 
           837637516579522904|>, 
         "f11" -> <|
          "Type" -> "Numerical", "Weight" -> 1, 
           "Values" -> {8.899999999999999}, "ID" -> 274195395572906874|>, 
         "f12" -> <|
          "Type" -> "Numerical", "Weight" -> 1, "Values" -> {74.5}, "ID" -> 
           3125870414610084761|>, 
         "f13" -> <|
          "Type" -> "Numerical", "Weight" -> 1, "Values" -> {41.7}, "ID" -> 
           6841835405318070221|>, 
         "f14" -> <|
          "Type" -> "Numerical", "Weight" -> 1, 
           "Values" -> {46.38620484583752}, "ID" -> 5646877401752303067|>, 
         "f15" -> <|
          "Type" -> "Numerical", "Weight" -> 1, 
           "Values" -> {12.500000000000004`}, "ID" -> 3550613501105575460|>, 
         "f16" -> <|
          "Type" -> "Numerical", "Weight" -> 1, 
           "Values" -> {396.40000000000003`}, "ID" -> 921979950029442881|>, 
         "f17" -> <|
          "Type" -> "Numerical", "Weight" -> 1, "Values" -> {5}, "ID" -> 
           124951178130735326|>, 
         "f18" -> <|
          "Type" -> "Numerical", "Weight" -> 1, "Values" -> {8.}, "ID" -> 
           1971816392997154316|>, 
         "f19" -> <|
          "Type" -> "Numerical", "Weight" -> 1, "Values" -> {299.1}, "ID" -> 
           1512250115311945429|>, 
         "f20" -> <|
          "Type" -> "Numerical", "Weight" -> 1, 
           "Values" -> {95.97500000000001}, "ID" -> 900834101743019479|>, 
         "f21" -> <|
          "Type" -> "Numerical", "Weight" -> 1, 
           "Values" -> {137.64622225110284`}, "ID" -> 2663308431190604298|>, 
         "f22" -> <|
          "Type" -> "Numerical", "Weight" -> 1, 
           "Values" -> {5.300000000000001}, "ID" -> 7688233548282973127|>, 
         "f23" -> <|
          "Type" -> "Numerical", "Weight" -> 1, 
           "Values" -> {344.40000000000003`}, "ID" -> 1945976700479238805|>, 
         "f24" -> <|
          "Type" -> "Numerical", "Weight" -> 1, "Values" -> {6}, "ID" -> 
           5621345997185365717|>, 
         "f25" -> <|
          "Type" -> "Numerical", "Weight" -> 1, 
           "Values" -> {7.299999999999997}, "ID" -> 4985743949459435910|>, 
         "f26" -> <|
          "Type" -> "Numerical", "Weight" -> 1, 
           "Values" -> {236.00000000000006`}, "ID" -> 3950700512008237161|>, 
         "f27" -> <|
          "Type" -> "Numerical", "Weight" -> 1, 
           "Values" -> {67.82000000000001}, "ID" -> 2710640854727856092|>, 
         "f28" -> <|
          "Type" -> "Numerical", "Weight" -> 1, 
           "Values" -> {95.48095097976353}, "ID" -> 7493249357649857508|>, 
         "f29" -> <|
          "Type" -> "Numerical", "Weight" -> 1, 
           "Values" -> {5.400000000000002}, "ID" -> 4529002213904827297|>, 
         "f30" -> <|
          "Type" -> "Numerical", "Weight" -> 1, 
           "Values" -> {146.10000000000002`}, "ID" -> 2459280541508353853|>, 
         "f31" -> <|
          "Type" -> "Numerical", "Weight" -> 1, "Values" -> {6}, "ID" -> 
           4911455155302610795|>, 
         "f32" -> <|
          "Type" -> "Numerical", "Weight" -> 1, 
           "Values" -> {6.600000000000001}, "ID" -> 2611996353135035797|>, 
         "f33" -> <|
          "Type" -> "Numerical", "Weight" -> 1, 
           "Values" -> {58.20000000000003}, "ID" -> 2059918124368005514|>, 
         "f34" -> <|
          "Type" -> "Numerical", "Weight" -> 1, 
           "Values" -> {28.140000000000004`}, "ID" -> 2876406154796192695|>, 
         "f35" -> <|
          "Type" -> "Numerical", "Weight" -> 1, 
           "Values" -> {23.12959143608033}, "ID" -> 8287093896611671235|>|>, <|
        "ExampleNumber" -> 1, "ExampleWeights" -> 1, "LogDensityRatios" -> 0, 
         "RawExample" -> False|>], "TrainingTime" -> 3.5108307, 
      "MaxTrainingMemory" -> 77911368, "DataMemory" -> 595200, 
      "FunctionMemory" -> 664632, "LanguageVersion" -> {13.2, 1}, "Date" -> 
      DateObject[{2023, 10, 19, 10, 4, 3.4588296`8.29150414790569}, "Instant",
         "Gregorian", 2.], "ProcessorCount" -> 6, "ProcessorType" -> "x86-64",
       "OperatingSystem" -> "Windows", "SystemWordLength" -> 64, 
      "Evaluations" -> {}|>|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.906691443524654*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"58a0edf4-f4c0-424e-8786-d7e676a0695a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Information", "[", "myClassifier01", " ", "]"}]], "Input",
 CellChangeTimes->{3.904959049772726*^9},
 CellLabel->"In[40]:=",ExpressionUUID->"32ab41af-3949-4aa1-aa0e-d03378185def"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   StyleBox[
    FrameBox[GridBox[{
       {
        ItemBox[
         FrameBox[
          StyleBox["\<\"Classifier information\"\>", "SuggestionsBarText",
           StripOnInput->False,
           FontSize->12],
          FrameMargins->{{10, 5}, {-4, 2}},
          FrameStyle->None,
          StripOnInput->False],
         Alignment->{Left, Bottom},
         Background->RGBColor[0.96, 0.96, 0.96],
         Frame->{{False, False}, {True, False}},
         FrameStyle->Opacity[0.1],
         ItemSize->{Automatic, 1},
         StripOnInput->False]},
       {
        ItemBox[
         TagBox[
          FrameBox[
           TagBox[GridBox[{
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Data type"], 
                   TextCell["Data type"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TagBox[
                TooltipBox[
                 TemplateBox[{
                   InterpretationBox[
                    Cell["Mixed"], 
                    TextCell["Mixed"]], 
                   StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "35", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]},
                  "RowDefault"],
                 TagBox[
                  RowBox[{"{", 
                    
                    RowBox[{
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\""}], "}"}], Short[#, 10]& ]],
                Annotation[#, 
                 
                 Short[{"Numerical", "Numerical", "Numerical", "Numerical", 
                   "Numerical", "Numerical", "Numerical", "Numerical", 
                   "Numerical", "Numerical", "Numerical", "Numerical", 
                   "Numerical", "Numerical", "Numerical", "Numerical", 
                   "Numerical", "Numerical", "Numerical", "Numerical", 
                   "Numerical", "Numerical", "Numerical", "Numerical", 
                   "Numerical", "Numerical", "Numerical", "Numerical", 
                   "Numerical", "Numerical", "Numerical", "Numerical", 
                   "Numerical", "Numerical", "Numerical"}, 10], "Tooltip"]& ]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Classes"], 
                   TextCell["Classes"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TemplateBox[{",", "\",\"", 
                 InterpretationBox[
                  Cell["int"], 
                  TextCell["int"]], 
                 InterpretationBox[
                  Cell["pyr"], 
                  TextCell["pyr"]]},
                "RowWithSeparators"]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Accuracy"], 
                   TextCell["Accuracy"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TemplateBox[{
                 RowBox[{"(", 
                   InterpretationBox[
                    
                    TemplateBox[{"98.", "4."}, "Around", SyntaxForm -> 
                    PlusMinus], 
                    Around[
                    97.831848849351104036`3., 4.3411168470918379825`3.]], 
                   ")"}], "\"%\"", "percent", "\"Percent\""},
                "QuantityPostfix"]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Method"], 
                   TextCell["Method"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TagBox[
                TooltipBox[
                 
                 InterpretationBox[Cell[
                  "GradientBoostedTrees",ExpressionUUID->
                   "911e8580-3b1a-4db1-a015-9e23f0a5e32c"],
                  TextCell["GradientBoostedTrees"]],
                 StyleBox[
                  TagBox[
                   
                   GridBox[{{"\"BoostingMethod\"", "\"Gradient\""}, {
                    "MaxTrainingRounds", "50"}, {"\"LeavesNumber\"", "25"}, {
                    "\"LearningRate\"", "0.1`"}, {"\"MaxDepth\"", "6"}, {
                    "\"LeafSize\"", "15"}, {"\"L1Regularization\"", "0"}, {
                    "\"L2Regularization\"", "0"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, "Rows" -> {{None}}}, 
                    GridBoxFrame -> {
                    "Columns" -> {{True}}, "Rows" -> {{True}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{1}}}, 
                    FrameStyle -> GrayLevel[0.84]], "Grid"], FontFamily -> 
                  "Verdana", StripOnInput -> False]],
                Annotation[#, 
                 Style[
                  
                  Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 25}, {
                    "LearningRate", 0.1}, {"MaxDepth", 6}, {"LeafSize", 15}, {
                    "L1Regularization", 0}, {"L2Regularization", 0}}, 
                   Alignment -> Left, Frame -> All, FrameStyle -> 
                   GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"], 
                 "Tooltip"]& ]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Single evaluation time"], 
                   TextCell["Single evaluation time"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TemplateBox[{"6.27`", 
                 
                 RowBox[{
                  "\"ms\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]",
                    "\"example\""}], "milliseconds per example", 
                 FractionBox["\"Milliseconds\"", "\"Examples\""]},
                "Quantity"]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Batch evaluation speed"], 
                   TextCell["Batch evaluation speed"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TemplateBox[{"21.1`", 
                 
                 RowBox[{
                  "\"examples\"", "\[InvisibleSpace]", "\"/\"", 
                   "\[InvisibleSpace]", "\"ms\""}], 
                 "examples per millisecond", 
                 FractionBox["\"Examples\"", "\"Milliseconds\""]},
                "Quantity"]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  TagBox[
                   TooltipBox[
                    InterpretationBox[
                    Cell["Loss"], 
                    TextCell["Loss"]], "\"Mean cross entropy\"", TooltipStyle -> 
                    "TextStyling"], 
                   Annotation[#, "Mean cross entropy", "Tooltip"]& ], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TagBox[
                TooltipBox[
                 TemplateBox[{"0.0789851918007613563`3.", 
                   StyleBox[
                    
                    TemplateBox[{
                    "\" \[PlusMinus] \"", "0.0536462489606198065`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                  "RowDefault"],
                 TemplateBox[{"\"95% confidence interval: [\"", 
                   RowBox[{"-", "0.0283073061204782567`3."}], "\", \"", 
                   "0.1862776897220009831`3.", "\"]\""}, "RowDefault"],
                 TooltipStyle->{}],
                Annotation[#, 
                 
                 Row[{"95% confidence interval: [", -0.0283073061204782567`3.,
                    ", ", 0.1862776897220009831`3., "]"}], "Tooltip"]& ]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Model memory"], 
                   TextCell["Model memory"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TemplateBox[{"671.`", "\"kB\"", "kilobytes", "\"Kilobytes\""},
                "Quantity"]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Training examples used"], 
                   TextCell["Training examples used"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TemplateBox[{"108", "\"examples\"", "examples", "\"Examples\""},
                "Quantity"]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Training time"], 
                   TextCell["Training time"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TemplateBox[{"3.51`", "\"s\"", "seconds", "\"Seconds\""},
                "Quantity"]},
              {
               ItemBox[
                
                DynamicModuleBox[{
                 MachineLearning`file12Panel`PackagePrivate`pos$$ = 1}, 
                 DynamicBox[ToBoxes[
                   Show[
                    Part[{
                    Graphics[{{{{}, {}, {{}, {}}}}, 
                    
                    GraphicsComplex[{{
                    2.70805020110221, -0.49651050481924325`}, {
                    4.454347296253507, -2.538494889645213}, {
                    2.70805020110221, -0.49651050481924325`}, {
                    4.454347296253507, -2.538494889645213}, {
                    2.70805020110221, -0.49651050481924325`}, {
                    4.454347296253507, -2.538494889645213}}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    Line[{3, 4}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    Point[{1, 2, 5, 6}]}, {}}, {
                    Tooltip[{
                    Opacity[0.], 
                    Point[1]}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 250}, {
                    "LearningRate", 0.02}, {"MaxDepth", 6}, {"LeafSize", 7}, {
                    "L1Regularization", 0}, {"L2Regularization", 0}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Opacity[0.], 
                    Point[2]}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 25}, {
                    "LearningRate", 0.1}, {"MaxDepth", 6}, {"LeafSize", 15}, {
                    "L1Regularization", 0}, {"L2Regularization", 0}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Opacity[0.], 
                    Point[5]}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 250}, {
                    "LearningRate", 0.02}, {"MaxDepth", 6}, {"LeafSize", 7}, {
                    "L1Regularization", 0}, {"L2Regularization", 0}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Opacity[0.], 
                    Point[6]}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 25}, {
                    "LearningRate", 0.1}, {"MaxDepth", 6}, {"LeafSize", 15}, {
                    "L1Regularization", 0}, {"L2Regularization", 0}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]]}}], {{}, {{}, {}}}}, {
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.6467884819062877`, -2.698291756080215}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    HoldForm["training examples used"], None}}, 
                    FrameTicks -> {{
                    Charting`ScaledTicks[
                    "Log", {Log, Exp}, "Nice", WorkingPrecision -> 
                    15.954589770191003`, RotateLabel -> 0], {}}, {
                    Charting`ScaledTicks[
                    "Log", {Log, Exp}, "Nice", WorkingPrecision -> 
                    15.954589770191003`, RotateLabel -> 0], {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& }, 
                    GridLinesStyle -> GrayLevel[0.5, 0.2], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {
                    "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "DefaultPlotStyle" -> {
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02],
                     "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
                    Scaled[0.05], "OptimizePlotMarkers" -> True, 
                    "OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    Exp[
                    Part[#, 1]], 
                    Exp[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Exp[
                    Part[#, 1]], 
                    Exp[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{2.68790651716321, 
                    4.68213122712422}, {-2.698291756080215, \
-0.49651050481924325`}}, PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.01], 
                    Scaled[0.01]}, {
                    Scaled[0.02], 
                    Scaled[0.08090169943749476]}}, Ticks -> {
                    Charting`ScaledTicks[
                    "Log", {Log, Exp}, "Nice", WorkingPrecision -> 
                    15.954589770191003`, RotateLabel -> 0], 
                    Charting`ScaledTicks[
                    "Log", {Log, Exp}, "Nice", WorkingPrecision -> 
                    15.954589770191003`, RotateLabel -> 0]}}], 
                    Graphics[{{{{}, {}, {{}, {}}}}, 
                    
                    GraphicsComplex[{{2.70805020110221, 0.7180992046313912}, {
                    4.454347296253507, 0.9783184884935111}, {2.70805020110221,
                     0.7180992046313912}, {4.454347296253507, 
                    0.9783184884935111}, {2.70805020110221, 
                    0.7180992046313912}, {4.454347296253507, 
                    0.9783184884935111}}, {{{}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    Line[{3, 4}]}}, {{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    Point[{1, 2, 5, 6}]}, {}}, {
                    Tooltip[{
                    Opacity[0.], 
                    Point[1]}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 250}, {
                    "LearningRate", 0.02}, {"MaxDepth", 6}, {"LeafSize", 7}, {
                    "L1Regularization", 0}, {"L2Regularization", 0}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Opacity[0.], 
                    Point[2]}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 25}, {
                    "LearningRate", 0.1}, {"MaxDepth", 6}, {"LeafSize", 15}, {
                    "L1Regularization", 0}, {"L2Regularization", 0}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Opacity[0.], 
                    Point[5]}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 250}, {
                    "LearningRate", 0.02}, {"MaxDepth", 6}, {"LeafSize", 7}, {
                    "L1Regularization", 0}, {"L2Regularization", 0}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Opacity[0.], 
                    Point[6]}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 25}, {
                    "LearningRate", 0.1}, {"MaxDepth", 6}, {"LeafSize", 15}, {
                    "L1Regularization", 0}, {"L2Regularization", 0}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]]}}], {{}, {{}, {}}}}, {
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.6467884819062877`, 0.7032623206646239}, 
                    DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    HoldForm["training examples used"], None}}, 
                    FrameTicks -> {{Automatic, None}, {
                    Charting`ScaledTicks[
                    "Log", {Log, Exp}, "Nice", WorkingPrecision -> 
                    15.954589770191003`, RotateLabel -> 0], {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Identity, Identity}][#, #2, {6,
                     6}]& }, GridLinesStyle -> GrayLevel[0.5, 0.2], 
                    ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {
                    "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "DefaultPlotStyle" -> {
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02],
                     "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
                    Scaled[0.05], "OptimizePlotMarkers" -> True, 
                    "OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    Exp[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Exp[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{2.68790651716321, 4.68213122712422}, {
                    0.7032623206646239, 1.}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.01], 
                    Scaled[0.01]}, {
                    Scaled[0.05], 
                    Scaled[0.08090169943749476]}}, Ticks -> {
                    Charting`ScaledTicks[
                    "Log", {Log, Exp}, "Nice", WorkingPrecision -> 
                    15.954589770191003`, RotateLabel -> 0], Automatic}}], 
                    Graphics[{{{{{Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.6375746139880286, -0.33470997844179873`, \
-0.03604792458520048], 
                    Opacity[0.20888719723059385`]], {}, {
                    
                    Line[{{2.70805020110221, -0.3465647246988394}, {
                    2.70805020110221, -0.27557509150028814`}}], 
                    
                    Line[{{2.70805020110221, -0.27557509150028814`}, {
                    2.70805020110221, -0.20929266852334288`}}]}}, {
                    Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.6375746139880286, -0.33470997844179873`, \
-0.03604792458520048], 
                    Opacity[0.20888719723059385`]], {}, {
                    
                    Line[{{4.454347296253507, -0.4004733920683872}, {
                    4.454347296253507, -0.34807666710324375`}}], 
                    
                    Line[{{4.454347296253507, -0.34807666710324375`}, {
                    4.454347296253507, -0.2982892090435502}}]}}}, {{
                    Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.6524488022956049, -0.36879846403874234`, 
                    0.17851453096733916`], 
                    Opacity[0.21465251111098735`]], {}, {
                    
                    Line[{{2.70805020110221, -0.3465647246988394}, {
                    2.70805020110221, -0.27557509150028814`}}], 
                    
                    Line[{{2.70805020110221, -0.27557509150028814`}, {
                    2.70805020110221, -0.20929266852334288`}}]}}, {
                    Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.6524488022956049, -0.36879846403874234`, 
                    0.17851453096733916`], 
                    Opacity[0.21465251111098735`]], {}, {
                    
                    Line[{{4.454347296253507, -0.5452008318286998}, {
                    4.454347296253507, -0.4579656495329652}}], 
                    
                    Line[{{4.454347296253507, -0.4579656495329652}, {
                    4.454347296253507, -0.3777336072536472}}]}}}, {{
                    Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.6400536453726247, -0.340391392707956, \
-0.000287515326443874], 
                    Opacity[0.22415790673785482`]], {}, {
                    
                    Line[{{2.70805020110221, -0.3465647246988394}, {
                    2.70805020110221, -0.27557509150028814`}}], 
                    
                    Line[{{2.70805020110221, -0.27557509150028814`}, {
                    2.70805020110221, -0.20929266852334288`}}]}}, {
                    Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.6400536453726247, -0.340391392707956, \
-0.000287515326443874], 
                    Opacity[0.22415790673785482`]], {}, {
                    
                    Line[{{4.454347296253507, -1.1383592604924464`}, {
                    4.454347296253507, -0.8250262407972607}}], 
                    
                    Line[{{4.454347296253507, -0.8250262407972607}, {
                    4.454347296253507, -0.5868021210218877}}]}}}, {{
                    Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.6425326767572207, -0.34607280697411325`, 
                    0.03547289393231273], 
                    Opacity[0.23982965469429118`]], {}, {
                    
                    Line[{{2.70805020110221, -0.5942252577224645}, {
                    2.70805020110221, -0.49651050481924325`}}], 
                    
                    Line[{{2.70805020110221, -0.49651050481924325`}, {
                    2.70805020110221, -0.40749972427902803`}}]}}, {
                    Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.6425326767572207, -0.34607280697411325`, 
                    0.03547289393231273], 
                    Opacity[0.23982965469429118`]], {}, {
                    
                    Line[{{4.454347296253507, -1.3385678719096417`}, {
                    4.454347296253507, -1.0362543286982848`}}], 
                    
                    Line[{{4.454347296253507, -1.0362543286982848`}, {
                    4.454347296253507, -0.8044335629733115}}]}}}, {{
                    Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.662364927833989, -0.3915241211033714, 
                    0.3215561680023656], 
                    Opacity[0.3082682265892902]], {}, {
                    
                    Line[{{2.70805020110221, -0.735240034422864}, {
                    2.70805020110221, -0.39181509800019254`}}], 
                    
                    Line[{{2.70805020110221, -0.39181509800019254`}, {
                    2.70805020110221, -0.13665884470950296`}}]}}, {
                    Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.662364927833989, -0.3915241211033714, 
                    0.3215561680023656], 
                    Opacity[0.3082682265892902]], {}, {
                    
                    Line[{{4.454347296253507, -36.04365338911715}, {
                    4.454347296253507, -1.2102234282300792`}}], 
                    
                    Line[{{4.454347296253507, -1.2102234282300792`}, {
                    4.454347296253507, -0.41213571237767077`}}]}}}, {{
                    Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.6673229906031811, -0.40288694963568594`, 
                    0.39307698651987877`], 
                    Opacity[0.4943035529371539]], {}, {
                    
                    Line[{{2.70805020110221, -0.5664814767166252}, {
                    2.70805020110221, -0.27326677974658864`}}], 
                    
                    Line[{{2.70805020110221, -0.27326677974658864`}, {
                    2.70805020110221, -0.04681828712964194}}]}}, {
                    Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.6673229906031811, -0.40288694963568594`, 
                    0.39307698651987877`], 
                    Opacity[0.4943035529371539]], {}, {
                    
                    Line[{{4.454347296253507, -36.04365338911715}, {
                    4.454347296253507, -1.2995847730497592`}}], 
                    
                    Line[{{4.454347296253507, -1.2995847730497592`}, {
                    4.454347296253507, -0.4983946932596109}}]}}}, {{
                    Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.6326165512188365, -0.3233471499094842, \
-0.1075687431027137], 
                    Opacity[0.2656679988991191]], {}, {
                    
                    Line[{{2.70805020110221, -0.3465647246988394}, {
                    2.70805020110221, -0.27557509150028814`}}], 
                    
                    Line[{{2.70805020110221, -0.27557509150028814`}, {
                    2.70805020110221, -0.20929266852334288`}}]}}, {
                    Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.6326165512188365, -0.3233471499094842, \
-0.1075687431027137], 
                    Opacity[0.2656679988991191]], {}, {
                    
                    Line[{{4.454347296253507, -1.5949781392978928`}, {
                    4.454347296253507, -1.1972513253525676`}}], 
                    
                    Line[{{4.454347296253507, -1.1972513253525676`}, {
                    4.454347296253507, -0.9134609718952823}}]}}}, {{
                    Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.6474907395264128, -0.3574356355064278, 
                    0.10699371244982595`], 
                    Opacity[0.3785041281187439]], {}, {
                    
                    Line[{{2.70805020110221, -0.3465647246988394}, {
                    2.70805020110221, -0.27557509150028814`}}], 
                    
                    Line[{{2.70805020110221, -0.27557509150028814`}, {
                    2.70805020110221, -0.20929266852334288`}}]}}, {
                    Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.6474907395264128, -0.3574356355064278, 
                    0.10699371244982595`], 
                    Opacity[0.3785041281187439]], {}, {
                    
                    Line[{{4.454347296253507, -1.7695013376112534`}, {
                    4.454347296253507, -1.234643351781667}}], 
                    
                    Line[{{4.454347296253507, -1.234643351781667}, {
                    4.454347296253507, -0.8880457426190275}}]}}}, {{
                    Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.6350955826034326, -0.32902856417564147`, \
-0.07180833384395709], 
                    Opacity[0.6852245277701068]], {}, {
                    
                    Line[{{2.70805020110221, -0.3465647246988394}, {
                    2.70805020110221, -0.27557509150028814`}}], 
                    
                    Line[{{2.70805020110221, -0.27557509150028814`}, {
                    2.70805020110221, -0.20929266852334288`}}]}}, {
                    Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.6350955826034326, -0.32902856417564147`, \
-0.07180833384395709], 
                    Opacity[0.6852245277701068]], {}, {
                    
                    Line[{{4.454347296253507, -2.61356924594268}, {
                    4.454347296253507, -1.6452250302907254`}}], 
                    
                    Line[{{4.454347296253507, -1.6452250302907254`}, {
                    4.454347296253507, -1.1626206486607624`}}]}}}, {{
                    Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.657406865064797, -0.38016129257105685`, 
                    0.2500353494848524], 
                    Opacity[1.]], {}, {
                    
                    Line[{{2.70805020110221, -0.3499457677414611}, {
                    2.70805020110221, -0.31132095930384324`}}], 
                    
                    Line[{{2.70805020110221, -0.31132095930384324`}, {
                    2.70805020110221, -0.27413271174690124`}}]}}, {
                    Antialiasing -> False, 
                    Directive[
                    LABColor[
                    0.657406865064797, -0.38016129257105685`, 
                    0.2500353494848524], 
                    Opacity[1.]], {}, {
                    
                    Line[{{4.454347296253507, -3.6754128239751305`}, {
                    4.454347296253507, -2.538494889645213}}], 
                    
                    Line[{{4.454347296253507, -2.538494889645213}, {
                    4.454347296253507, -2.0201811195221264`}}]}}}}}, {{{}, {}, 
                    Tooltip[{
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    LABColor[
                    0.6375746139880286, -0.33470997844179873`, \
-0.03604792458520048], 
                    Opacity[0.20888719723059385`]], 
                    
                    Line[{{2.70805020110221, -0.27557509150028814`}, {
                    4.454347296253507, -0.34807666710324375`}, {
                    4.454347296253507, -0.34807666710324375`}}]}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 250}, {
                    "LearningRate", 0.1}, {"MaxDepth", 6}, {"LeafSize", 90}, {
                    "L1Regularization", 0}, {"L2Regularization", 0}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    LABColor[
                    0.6524488022956049, -0.36879846403874234`, 
                    0.17851453096733916`], 
                    Opacity[0.21465251111098735`]], 
                    
                    Line[{{2.70805020110221, -0.27557509150028814`}, {
                    4.454347296253507, -0.4579656495329652}, {
                    4.454347296253507, -0.4579656495329652}}]}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 60}, {
                    "LearningRate", 0.004}, {"MaxDepth", 6}, {
                    "LeafSize", 35}, {"L1Regularization", 0}, {
                    "L2Regularization", 0}}, Alignment -> Left, Frame -> All, 
                    FrameStyle -> GrayLevel[0.84], Spacings -> {1, 1}, 
                    Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Hue[0.1421359549995791, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    LABColor[
                    0.6400536453726247, -0.340391392707956, \
-0.000287515326443874], 
                    Opacity[0.22415790673785482`]], 
                    
                    Line[{{2.70805020110221, -0.27557509150028814`}, {
                    4.454347296253507, -0.8250262407972607}, {
                    4.454347296253507, -0.8250262407972607}}]}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 60}, {
                    "LearningRate", 0.04}, {"MaxDepth", 6}, {
                    "LeafSize", 35}, {"L1Regularization", 0}, {
                    "L2Regularization", 0}}, Alignment -> Left, Frame -> All, 
                    FrameStyle -> GrayLevel[0.84], Spacings -> {1, 1}, 
                    Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Hue[0.37820393249936934`, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    LABColor[
                    0.6425326767572207, -0.34607280697411325`, 
                    0.03547289393231273], 
                    Opacity[0.23982965469429118`]], 
                    
                    Line[{{2.70805020110221, -0.49651050481924325`}, {
                    4.454347296253507, -1.0362543286982848`}, {
                    4.454347296253507, -1.0362543286982848`}}]}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 250}, {
                    "LearningRate", 0.02}, {"MaxDepth", 6}, {"LeafSize", 7}, {
                    "L1Regularization", 0}, {"L2Regularization", 0}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Hue[0.6142719099991583, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    LABColor[
                    0.662364927833989, -0.3915241211033714, 
                    0.3215561680023656], 
                    Opacity[0.3082682265892902]], 
                    
                    Line[{{2.70805020110221, -0.39181509800019254`}, {
                    4.454347296253507, -1.2102234282300792`}, {
                    4.454347296253507, -1.2102234282300792`}}]}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 60}, {
                    "LearningRate", 0.1}, {"MaxDepth", 6}, {"LeafSize", 3}, {
                    "L1Regularization", 0}, {"L2Regularization", 0}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Hue[0.8503398874989481, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    LABColor[
                    0.6673229906031811, -0.40288694963568594`, 
                    0.39307698651987877`], 
                    Opacity[0.4943035529371539]], 
                    
                    Line[{{2.70805020110221, -0.27326677974658864`}, {
                    4.454347296253507, -1.2995847730497592`}, {
                    4.454347296253507, -1.2995847730497592`}}]}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 110}, {
                    "LearningRate", 0.2}, {"MaxDepth", 6}, {"LeafSize", 7}, {
                    "L1Regularization", 0}, {"L2Regularization", 0}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Hue[0.08640786499873876, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    LABColor[
                    0.6326165512188365, -0.3233471499094842, \
-0.1075687431027137], 
                    Opacity[0.2656679988991191]], 
                    
                    Line[{{2.70805020110221, -0.27557509150028814`}, {
                    4.454347296253507, -1.1972513253525676`}, {
                    4.454347296253507, -1.1972513253525676`}}]}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 60}, {
                    "LearningRate", 0.04}, {"MaxDepth", 6}, {
                    "LeafSize", 15}, {"L1Regularization", 0}, {
                    "L2Regularization", 0}}, Alignment -> Left, Frame -> All, 
                    FrameStyle -> GrayLevel[0.84], Spacings -> {1, 1}, 
                    Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Hue[0.3224758424985268, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    LABColor[
                    0.6474907395264128, -0.3574356355064278, 
                    0.10699371244982595`], 
                    Opacity[0.3785041281187439]], 
                    
                    Line[{{2.70805020110221, -0.27557509150028814`}, {
                    4.454347296253507, -1.234643351781667}, {
                    4.454347296253507, -1.234643351781667}}]}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 60}, {
                    "LearningRate", 0.2}, {"MaxDepth", 6}, {"LeafSize", 35}, {
                    "L1Regularization", 0}, {"L2Regularization", 0}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Hue[0.5585438199983166, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    LABColor[
                    0.6350955826034326, -0.32902856417564147`, \
-0.07180833384395709], 
                    Opacity[0.6852245277701068]], 
                    
                    Line[{{2.70805020110221, -0.27557509150028814`}, {
                    4.454347296253507, -1.6452250302907254`}, {
                    4.454347296253507, -1.6452250302907254`}}]}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 110}, {
                    "LearningRate", 0.1}, {"MaxDepth", 6}, {"LeafSize", 15}, {
                    "L1Regularization", 0}, {"L2Regularization", 0}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Hue[0.7946117974981064, 0.6, 0.6], 
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    LABColor[
                    0.657406865064797, -0.38016129257105685`, 
                    0.2500353494848524], 
                    Opacity[1.]], 
                    
                    Line[{{2.70805020110221, -0.31132095930384324`}, {
                    4.454347296253507, -2.538494889645213}, {
                    4.454347296253507, -2.538494889645213}}]}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 25}, {
                    "LearningRate", 0.1}, {"MaxDepth", 6}, {"LeafSize", 15}, {
                    "L1Regularization", 0}, {"L2Regularization", 0}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]]}, {
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    LABColor[
                    0.6375746139880286, -0.33470997844179873`, \
-0.03604792458520048], 
                    Opacity[0.20888719723059385`]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.70805020110221, -0.27557509150028814`}}, {{
                    4.454347296253507, -0.34807666710324375`}}, {{
                    4.454347296253507, -0.34807666710324375`}}, {{
                    2.70805020110221, -0.27557509150028814`}}, {{
                    4.454347296253507, -0.34807666710324375`}}, {{
                    4.454347296253507, -0.34807666710324375`}}}]}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 250}, {
                    "LearningRate", 0.1}, {"MaxDepth", 6}, {"LeafSize", 90}, {
                    "L1Regularization", 0}, {"L2Regularization", 0}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    LABColor[
                    0.6524488022956049, -0.36879846403874234`, 
                    0.17851453096733916`], 
                    Opacity[0.21465251111098735`]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.70805020110221, -0.27557509150028814`}}, {{
                    4.454347296253507, -0.4579656495329652}}, {{
                    4.454347296253507, -0.4579656495329652}}, {{
                    2.70805020110221, -0.27557509150028814`}}, {{
                    4.454347296253507, -0.4579656495329652}}, {{
                    4.454347296253507, -0.4579656495329652}}}]}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 60}, {
                    "LearningRate", 0.004}, {"MaxDepth", 6}, {
                    "LeafSize", 35}, {"L1Regularization", 0}, {
                    "L2Regularization", 0}}, Alignment -> Left, Frame -> All, 
                    FrameStyle -> GrayLevel[0.84], Spacings -> {1, 1}, 
                    Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    LABColor[
                    0.6400536453726247, -0.340391392707956, \
-0.000287515326443874], 
                    Opacity[0.22415790673785482`]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.70805020110221, -0.27557509150028814`}}, {{
                    4.454347296253507, -0.8250262407972607}}, {{
                    4.454347296253507, -0.8250262407972607}}, {{
                    2.70805020110221, -0.27557509150028814`}}, {{
                    4.454347296253507, -0.8250262407972607}}, {{
                    4.454347296253507, -0.8250262407972607}}}]}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 60}, {
                    "LearningRate", 0.04}, {"MaxDepth", 6}, {
                    "LeafSize", 35}, {"L1Regularization", 0}, {
                    "L2Regularization", 0}}, Alignment -> Left, Frame -> All, 
                    FrameStyle -> GrayLevel[0.84], Spacings -> {1, 1}, 
                    Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    LABColor[
                    0.6425326767572207, -0.34607280697411325`, 
                    0.03547289393231273], 
                    Opacity[0.23982965469429118`]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.70805020110221, -0.49651050481924325`}}, {{
                    4.454347296253507, -1.0362543286982848`}}, {{
                    4.454347296253507, -1.0362543286982848`}}, {{
                    2.70805020110221, -0.49651050481924325`}}, {{
                    4.454347296253507, -1.0362543286982848`}}, {{
                    4.454347296253507, -1.0362543286982848`}}}]}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 250}, {
                    "LearningRate", 0.02}, {"MaxDepth", 6}, {"LeafSize", 7}, {
                    "L1Regularization", 0}, {"L2Regularization", 0}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    LABColor[
                    0.662364927833989, -0.3915241211033714, 
                    0.3215561680023656], 
                    Opacity[0.3082682265892902]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.70805020110221, -0.39181509800019254`}}, {{
                    4.454347296253507, -1.2102234282300792`}}, {{
                    4.454347296253507, -1.2102234282300792`}}, {{
                    2.70805020110221, -0.39181509800019254`}}, {{
                    4.454347296253507, -1.2102234282300792`}}, {{
                    4.454347296253507, -1.2102234282300792`}}}]}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 60}, {
                    "LearningRate", 0.1}, {"MaxDepth", 6}, {"LeafSize", 3}, {
                    "L1Regularization", 0}, {"L2Regularization", 0}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    LABColor[
                    0.6673229906031811, -0.40288694963568594`, 
                    0.39307698651987877`], 
                    Opacity[0.4943035529371539]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.70805020110221, -0.27326677974658864`}}, {{
                    4.454347296253507, -1.2995847730497592`}}, {{
                    4.454347296253507, -1.2995847730497592`}}, {{
                    2.70805020110221, -0.27326677974658864`}}, {{
                    4.454347296253507, -1.2995847730497592`}}, {{
                    4.454347296253507, -1.2995847730497592`}}}]}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 110}, {
                    "LearningRate", 0.2}, {"MaxDepth", 6}, {"LeafSize", 7}, {
                    "L1Regularization", 0}, {"L2Regularization", 0}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    LABColor[
                    0.6326165512188365, -0.3233471499094842, \
-0.1075687431027137], 
                    Opacity[0.2656679988991191]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.70805020110221, -0.27557509150028814`}}, {{
                    4.454347296253507, -1.1972513253525676`}}, {{
                    4.454347296253507, -1.1972513253525676`}}, {{
                    2.70805020110221, -0.27557509150028814`}}, {{
                    4.454347296253507, -1.1972513253525676`}}, {{
                    4.454347296253507, -1.1972513253525676`}}}]}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 60}, {
                    "LearningRate", 0.04}, {"MaxDepth", 6}, {
                    "LeafSize", 15}, {"L1Regularization", 0}, {
                    "L2Regularization", 0}}, Alignment -> Left, Frame -> All, 
                    FrameStyle -> GrayLevel[0.84], Spacings -> {1, 1}, 
                    Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    LABColor[
                    0.6474907395264128, -0.3574356355064278, 
                    0.10699371244982595`], 
                    Opacity[0.3785041281187439]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.70805020110221, -0.27557509150028814`}}, {{
                    4.454347296253507, -1.234643351781667}}, {{
                    4.454347296253507, -1.234643351781667}}, {{
                    2.70805020110221, -0.27557509150028814`}}, {{
                    4.454347296253507, -1.234643351781667}}, {{
                    4.454347296253507, -1.234643351781667}}}]}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 60}, {
                    "LearningRate", 0.2}, {"MaxDepth", 6}, {"LeafSize", 35}, {
                    "L1Regularization", 0}, {"L2Regularization", 0}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    LABColor[
                    0.6350955826034326, -0.32902856417564147`, \
-0.07180833384395709], 
                    Opacity[0.6852245277701068]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.70805020110221, -0.27557509150028814`}}, {{
                    4.454347296253507, -1.6452250302907254`}}, {{
                    4.454347296253507, -1.6452250302907254`}}, {{
                    2.70805020110221, -0.27557509150028814`}}, {{
                    4.454347296253507, -1.6452250302907254`}}, {{
                    4.454347296253507, -1.6452250302907254`}}}]}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 110}, {
                    "LearningRate", 0.1}, {"MaxDepth", 6}, {"LeafSize", 15}, {
                    "L1Regularization", 0}, {"L2Regularization", 0}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    LABColor[
                    0.657406865064797, -0.38016129257105685`, 
                    0.2500353494848524], 
                    Opacity[1.]], 
                    GeometricTransformation[
                    Inset[
                    Style["\[FilledCircle]", FontSize -> 5], {0., 0.}], {{{
                    2.70805020110221, -0.31132095930384324`}}, {{
                    4.454347296253507, -2.538494889645213}}, {{
                    4.454347296253507, -2.538494889645213}}, {{
                    2.70805020110221, -0.31132095930384324`}}, {{
                    4.454347296253507, -2.538494889645213}}, {{
                    4.454347296253507, -2.538494889645213}}}]}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 25}, {
                    "LearningRate", 0.1}, {"MaxDepth", 6}, {"LeafSize", 15}, {
                    "L1Regularization", 0}, {"L2Regularization", 0}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]]}, {
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    LABColor[
                    0.6375746139880286, -0.33470997844179873`, \
-0.03604792458520048], 
                    Opacity[0.20888719723059385`]], {
                    Point[{2.70805020110221, -0.27557509150028814`}], 
                    Point[{4.454347296253507, -0.34807666710324375`}], 
                    Point[{4.454347296253507, -0.34807666710324375`}], 
                    Point[{2.70805020110221, -0.27557509150028814`}], 
                    Point[{4.454347296253507, -0.34807666710324375`}], 
                    Point[{4.454347296253507, -0.34807666710324375`}]}}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 250}, {
                    "LearningRate", 0.1}, {"MaxDepth", 6}, {"LeafSize", 90}, {
                    "L1Regularization", 0}, {"L2Regularization", 0}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    LABColor[
                    0.6524488022956049, -0.36879846403874234`, 
                    0.17851453096733916`], 
                    Opacity[0.21465251111098735`]], {
                    Point[{2.70805020110221, -0.27557509150028814`}], 
                    Point[{4.454347296253507, -0.4579656495329652}], 
                    Point[{4.454347296253507, -0.4579656495329652}], 
                    Point[{2.70805020110221, -0.27557509150028814`}], 
                    Point[{4.454347296253507, -0.4579656495329652}], 
                    Point[{4.454347296253507, -0.4579656495329652}]}}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 60}, {
                    "LearningRate", 0.004}, {"MaxDepth", 6}, {
                    "LeafSize", 35}, {"L1Regularization", 0}, {
                    "L2Regularization", 0}}, Alignment -> Left, Frame -> All, 
                    FrameStyle -> GrayLevel[0.84], Spacings -> {1, 1}, 
                    Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    LABColor[
                    0.6400536453726247, -0.340391392707956, \
-0.000287515326443874], 
                    Opacity[0.22415790673785482`]], {
                    Point[{2.70805020110221, -0.27557509150028814`}], 
                    Point[{4.454347296253507, -0.8250262407972607}], 
                    Point[{4.454347296253507, -0.8250262407972607}], 
                    Point[{2.70805020110221, -0.27557509150028814`}], 
                    Point[{4.454347296253507, -0.8250262407972607}], 
                    Point[{4.454347296253507, -0.8250262407972607}]}}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 60}, {
                    "LearningRate", 0.04}, {"MaxDepth", 6}, {
                    "LeafSize", 35}, {"L1Regularization", 0}, {
                    "L2Regularization", 0}}, Alignment -> Left, Frame -> All, 
                    FrameStyle -> GrayLevel[0.84], Spacings -> {1, 1}, 
                    Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    LABColor[
                    0.6425326767572207, -0.34607280697411325`, 
                    0.03547289393231273], 
                    Opacity[0.23982965469429118`]], {
                    Point[{2.70805020110221, -0.49651050481924325`}], 
                    Point[{4.454347296253507, -1.0362543286982848`}], 
                    Point[{4.454347296253507, -1.0362543286982848`}], 
                    Point[{2.70805020110221, -0.49651050481924325`}], 
                    Point[{4.454347296253507, -1.0362543286982848`}], 
                    Point[{4.454347296253507, -1.0362543286982848`}]}}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 250}, {
                    "LearningRate", 0.02}, {"MaxDepth", 6}, {"LeafSize", 7}, {
                    "L1Regularization", 0}, {"L2Regularization", 0}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    LABColor[
                    0.662364927833989, -0.3915241211033714, 
                    0.3215561680023656], 
                    Opacity[0.3082682265892902]], {
                    Point[{2.70805020110221, -0.39181509800019254`}], 
                    Point[{4.454347296253507, -1.2102234282300792`}], 
                    Point[{4.454347296253507, -1.2102234282300792`}], 
                    Point[{2.70805020110221, -0.39181509800019254`}], 
                    Point[{4.454347296253507, -1.2102234282300792`}], 
                    Point[{4.454347296253507, -1.2102234282300792`}]}}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 60}, {
                    "LearningRate", 0.1}, {"MaxDepth", 6}, {"LeafSize", 3}, {
                    "L1Regularization", 0}, {"L2Regularization", 0}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    LABColor[
                    0.6673229906031811, -0.40288694963568594`, 
                    0.39307698651987877`], 
                    Opacity[0.4943035529371539]], {
                    Point[{2.70805020110221, -0.27326677974658864`}], 
                    Point[{4.454347296253507, -1.2995847730497592`}], 
                    Point[{4.454347296253507, -1.2995847730497592`}], 
                    Point[{2.70805020110221, -0.27326677974658864`}], 
                    Point[{4.454347296253507, -1.2995847730497592`}], 
                    Point[{4.454347296253507, -1.2995847730497592`}]}}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 110}, {
                    "LearningRate", 0.2}, {"MaxDepth", 6}, {"LeafSize", 7}, {
                    "L1Regularization", 0}, {"L2Regularization", 0}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    LABColor[
                    0.6326165512188365, -0.3233471499094842, \
-0.1075687431027137], 
                    Opacity[0.2656679988991191]], {
                    Point[{2.70805020110221, -0.27557509150028814`}], 
                    Point[{4.454347296253507, -1.1972513253525676`}], 
                    Point[{4.454347296253507, -1.1972513253525676`}], 
                    Point[{2.70805020110221, -0.27557509150028814`}], 
                    Point[{4.454347296253507, -1.1972513253525676`}], 
                    Point[{4.454347296253507, -1.1972513253525676`}]}}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 60}, {
                    "LearningRate", 0.04}, {"MaxDepth", 6}, {
                    "LeafSize", 15}, {"L1Regularization", 0}, {
                    "L2Regularization", 0}}, Alignment -> Left, Frame -> All, 
                    FrameStyle -> GrayLevel[0.84], Spacings -> {1, 1}, 
                    Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    LABColor[
                    0.6474907395264128, -0.3574356355064278, 
                    0.10699371244982595`], 
                    Opacity[0.3785041281187439]], {
                    Point[{2.70805020110221, -0.27557509150028814`}], 
                    Point[{4.454347296253507, -1.234643351781667}], 
                    Point[{4.454347296253507, -1.234643351781667}], 
                    Point[{2.70805020110221, -0.27557509150028814`}], 
                    Point[{4.454347296253507, -1.234643351781667}], 
                    Point[{4.454347296253507, -1.234643351781667}]}}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 60}, {
                    "LearningRate", 0.2}, {"MaxDepth", 6}, {"LeafSize", 35}, {
                    "L1Regularization", 0}, {"L2Regularization", 0}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    LABColor[
                    0.6350955826034326, -0.32902856417564147`, \
-0.07180833384395709], 
                    Opacity[0.6852245277701068]], {
                    Point[{2.70805020110221, -0.27557509150028814`}], 
                    Point[{4.454347296253507, -1.6452250302907254`}], 
                    Point[{4.454347296253507, -1.6452250302907254`}], 
                    Point[{2.70805020110221, -0.27557509150028814`}], 
                    Point[{4.454347296253507, -1.6452250302907254`}], 
                    Point[{4.454347296253507, -1.6452250302907254`}]}}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 110}, {
                    "LearningRate", 0.1}, {"MaxDepth", 6}, {"LeafSize", 15}, {
                    "L1Regularization", 0}, {"L2Regularization", 0}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], 
                    Tooltip[{
                    Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[1.6], 
                    LABColor[
                    0.657406865064797, -0.38016129257105685`, 
                    0.2500353494848524], 
                    Opacity[1.]], {
                    Point[{2.70805020110221, -0.31132095930384324`}], 
                    Point[{4.454347296253507, -2.538494889645213}], 
                    Point[{4.454347296253507, -2.538494889645213}], 
                    Point[{2.70805020110221, -0.31132095930384324`}], 
                    Point[{4.454347296253507, -2.538494889645213}], 
                    Point[{4.454347296253507, -2.538494889645213}]}}, 
                    Column[{
                    Style["GradientBoostedTrees", 
                    GrayLevel[0], 16], 
                    Style[
                    
                    Grid[{{"BoostingMethod", "Gradient"}, {
                    MaxTrainingRounds, 50}, {"LeavesNumber", 25}, {
                    "LearningRate", 0.1}, {"MaxDepth", 6}, {"LeafSize", 15}, {
                    "L1Regularization", 0}, {"L2Regularization", 0}}, 
                    Alignment -> Left, Frame -> All, FrameStyle -> 
                    GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"]}, 
                    Center]], {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}}, {{}, {}}}, {
                    DisplayFunction -> Identity, DisplayFunction -> Identity, 
                    AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
                    AxesLabel -> {None, None}, 
                    AxesOrigin -> {2.6467884819062877`, -2.6438554053030336`},
                     DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {
                    HoldForm["training examples used"], None}}, 
                    FrameTicks -> {{
                    Charting`ScaledTicks[
                    "Log", {Log, Exp}, "Nice", WorkingPrecision -> 
                    15.954589770191003`, RotateLabel -> 0], {}}, {
                    Charting`ScaledTicks[
                    "Log", {Log, Exp}, "Nice", WorkingPrecision -> 
                    15.954589770191003`, RotateLabel -> 0], {}}}, 
                    GridLines -> {
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& , 
                    Charting`ScaledTickValues[{Log, Exp}][#, #2, {6, 6}]& }, 
                    GridLinesStyle -> GrayLevel[0.5, 0.2], ImageMargins -> 0, 
                    ImagePadding -> {{Automatic, 10}, {37, 0}}, ImageSize -> 
                    330, LabelStyle -> 10, 
                    Method -> {
                    "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "DefaultPlotStyle" -> {
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    AbsoluteThickness[1.6]], 
                    Directive[
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02],
                     "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
                    Scaled[0.05], "OptimizePlotMarkers" -> True, 
                    "OptimizePlotMarkers" -> True, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    Exp[
                    Part[#, 1]], 
                    Exp[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Exp[
                    Part[#, 1]], 
                    Exp[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{2.68790651716321, 
                    4.68213122712422}, {-2.6438554053030394`, \
-0.21601077949951836`}}, PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.01], 
                    Scaled[0.01]}, {0, 0}}, Ticks -> {
                    Charting`ScaledTicks[
                    "Log", {Log, Exp}, "Nice", WorkingPrecision -> 
                    15.954589770191003`, RotateLabel -> 0], 
                    Charting`ScaledTicks[
                    "Log", {Log, Exp}, "Nice", WorkingPrecision -> 
                    15.954589770191003`, RotateLabel -> 0]}}]}, 
                    MachineLearning`file12Panel`PackagePrivate`pos$$], 
                    PlotLabel -> Grid[{{
                    Button[
                    Deploy[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    GrayLevel[0.25], 
                    Line[{{0, 0.8}, {-1, 0}, {0, -0.8}}]}, 
                    ImageSize -> {Automatic, 10}, 
                    ImagePadding -> {{1, 1}, {1, 1}}, BaselinePosition -> 
                    Scaled[0.1]], 
                    Graphics[{
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], 
                    Line[{{0, 0.8}, {-1, 0}, {0, -0.8}}]}, 
                    ImageSize -> {Automatic, 10}, 
                    ImagePadding -> {{1, 1}, {1, 1}}, BaselinePosition -> 
                    Scaled[0.1]]], "LinkHand"]], 
                    MachineLearning`file12Panel`PackagePrivate`pos$$ = (1 + 
                    Mod[-1 + # + #2, 3]& )[
                    MachineLearning`file12Panel`PackagePrivate`pos$$, -1], 
                    Appearance -> "Frameless"], 
                    Part[{
                    Tooltip[
                    "Learning curve", 
                    "mean cross entropy for best algorithm at each training \
size"], "Accuracy", 
                    Tooltip[
                    "Learning curves for all algorithms", 
                    "mean cross entropy at each training size"]}, 
                    MachineLearning`file12Panel`PackagePrivate`pos$$], 
                    Button[
                    Deploy[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    GrayLevel[0.25], 
                    Line[{{0, 0.8}, {1, 0}, {0, -0.8}}]}, 
                    ImageSize -> {Automatic, 10}, 
                    ImagePadding -> {{1, 1}, {1, 1}}, BaselinePosition -> 
                    Scaled[0.1]], 
                    Graphics[{
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], 
                    Line[{{0, 0.8}, {1, 0}, {0, -0.8}}]}, 
                    ImageSize -> {Automatic, 10}, 
                    ImagePadding -> {{1, 1}, {1, 1}}, BaselinePosition -> 
                    Scaled[0.1]]], "LinkHand"]], 
                    MachineLearning`file12Panel`PackagePrivate`pos$$ = (1 + 
                    Mod[-1 + # + #2, 3]& )[
                    MachineLearning`file12Panel`PackagePrivate`pos$$, 
                    Plus[1]], Appearance -> "Frameless"]}}, 
                    Alignment -> {Center, Baseline}, 
                    ItemSize -> {{3, 20, 3}, {2}}]], StandardForm],
                  ImageSizeCache->{330., {123., 126.32525735328835`}}],
                 DynamicModuleValues:>{}],
                Alignment->Center,
                StripOnInput->False], "\[SpanFromLeft]"}
             },
             AutoDelete->False,
             ColumnsEqual->False,
             
             GridBoxAlignment->{
              "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
             GridBoxDividers->{"Columns" -> {False, {
                  Opacity[0.15]}, False}},
             
             GridBoxItemSize->{
              "Columns" -> {Automatic, {Automatic}}, "Rows" -> {{1.}}},
             GridBoxSpacings->{"Columns" -> {
                 Offset[0.27999999999999997`], 
                 Offset[1.1199999999999999`], {
                  Offset[1.75]}, 
                 Offset[0.27999999999999997`]}, "Rows" -> {
                 Offset[0.2], {
                  Offset[0.8]}, 
                 Offset[0.2]}}],
            "Grid"],
           FrameMargins->{{10, 10}, {10, 5}},
           FrameStyle->None,
           StripOnInput->False],
          Deploy,
          DefaultBaseStyle->"Deploy"],
         Alignment->Center,
         BaseStyle->{
          FontWeight -> "Light", FontSize -> 11, FontFamily -> "Segoe UI", 
           NumberMarks -> False, Deployed -> False},
         StripOnInput->False]}
      },
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], 
          Offset[0.8], {
           Offset[0.4]}, 
          Offset[0.2]}}],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[0.85],
     RoundingRadius->5,
     StripOnInput->False],
    StripOnInput->False,
    LineBreakWithin->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  MachineLearning`MLInformationObject[
   ClassifierFunction[<|
    "ExampleNumber" -> 108, "ClassNumber" -> 2, 
     "Input" -> <|
      "Preprocessor" -> 
       MachineLearning`MLProcessor[
        "ToMLDataset", <|
         "Input" -> <|
           "200 - time1stSpike" -> <|"Type" -> "Numerical"|>, 
            "200 - timeLastSpike" -> <|"Type" -> "Numerical"|>, 
            "200 - spikeNumber" -> <|"Type" -> "Numerical"|>, 
            "200 - ISImin" -> <|"Type" -> "Numerical"|>, 
            "200 - ISImax" -> <|"Type" -> "Numerical"|>, 
            "200 - ISImean" -> <|"Type" -> "Numerical"|>, 
            "200 - ISIstd" -> <|"Type" -> "Numerical"|>, 
            "400 - time1stSpike" -> <|"Type" -> "Numerical"|>, 
            "400 - timeLastSpike" -> <|"Type" -> "Numerical"|>, 
            "400 - spikeNumber" -> <|"Type" -> "Numerical"|>, 
            "400 - ISImin" -> <|"Type" -> "Numerical"|>, 
            "400 - ISImax" -> <|"Type" -> "Numerical"|>, 
            "400 - ISImean" -> <|"Type" -> "Numerical"|>, 
            "400 - ISIstd" -> <|"Type" -> "Numerical"|>, 
            "600 - time1stSpike" -> <|"Type" -> "Numerical"|>, 
            "600 - timeLastSpike" -> <|"Type" -> "Numerical"|>, 
            "600 - spikeNumber" -> <|"Type" -> "Numerical"|>, 
            "600 - ISImin" -> <|"Type" -> "Numerical"|>, 
            "600 - ISImax" -> <|"Type" -> "Numerical"|>, 
            "600 - ISImean" -> <|"Type" -> "Numerical"|>, 
            "600 - ISIstd" -> <|"Type" -> "Numerical"|>, 
            "800 - time1stSpike" -> <|"Type" -> "Numerical"|>, 
            "800 - timeLastSpike" -> <|"Type" -> "Numerical"|>, 
            "800 - spikeNumber" -> <|"Type" -> "Numerical"|>, 
            "800 - ISImin" -> <|"Type" -> "Numerical"|>, 
            "800 - ISImax" -> <|"Type" -> "Numerical"|>, 
            "800 - ISImean" -> <|"Type" -> "Numerical"|>, 
            "800 - ISIstd" -> <|"Type" -> "Numerical"|>, 
            "1000 - time1stSpike" -> <|"Type" -> "Numerical"|>, 
            "1000 - timeLastSpike" -> <|"Type" -> "Numerical"|>, 
            "1000 - spikeNumber" -> <|"Type" -> "Numerical"|>, 
            "1000 - ISImin" -> <|"Type" -> "Numerical"|>, 
            "1000 - ISImax" -> <|"Type" -> "Numerical"|>, 
            "1000 - ISImean" -> <|"Type" -> "Numerical"|>, 
            "1000 - ISIstd" -> <|"Type" -> "Numerical"|>|>, 
          "Output" -> <|
           "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
            "f2" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
            "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
            "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
            "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
            "f6" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
            "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
            "f8" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
            "f9" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
            "f10" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
            "f11" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
            "f12" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
            "f13" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
            "f14" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
            "f15" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
            "f16" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
            "f17" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
            "f18" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
            "f19" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
            "f20" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
            "f21" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
            "f22" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
            "f23" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
            "f24" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
            "f25" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
            "f26" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
            "f27" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
            "f28" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
            "f29" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
            "f30" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
            "f31" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
            "f32" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
            "f33" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
            "f34" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
            "f35" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
          "Preprocessor" -> 
          MachineLearning`MLProcessor["Sequence", <|"Processors" -> {
               MachineLearning`MLProcessor[
               "FromNamedFeatures", <|
                "FeatureNames" -> {
                  "200 - time1stSpike", "200 - timeLastSpike", 
                   "200 - spikeNumber", "200 - ISImin", "200 - ISImax", 
                   "200 - ISImean", "200 - ISIstd", "400 - time1stSpike", 
                   "400 - timeLastSpike", "400 - spikeNumber", "400 - ISImin",
                    "400 - ISImax", "400 - ISImean", "400 - ISIstd", 
                   "600 - time1stSpike", "600 - timeLastSpike", 
                   "600 - spikeNumber", "600 - ISImin", "600 - ISImax", 
                   "600 - ISImean", "600 - ISIstd", "800 - time1stSpike", 
                   "800 - timeLastSpike", "800 - spikeNumber", "800 - ISImin",
                    "800 - ISImax", "800 - ISImean", "800 - ISIstd", 
                   "1000 - time1stSpike", "1000 - timeLastSpike", 
                   "1000 - spikeNumber", "1000 - ISImin", "1000 - ISImax", 
                   "1000 - ISImean", "1000 - ISIstd"}|>], 
               MachineLearning`MLProcessor[
               "Transpose", <|"FeatureNumber" -> 35|>], 
               MachineLearning`MLProcessor[
               "WrapMLDataset", <|
                "FeatureTypes" -> {
                  "Numerical", "Numerical", "Numerical", "Numerical", 
                   "Numerical", "Numerical", "Numerical", "Numerical", 
                   "Numerical", "Numerical", "Numerical", "Numerical", 
                   "Numerical", "Numerical", "Numerical", "Numerical", 
                   "Numerical", "Numerical", "Numerical", "Numerical", 
                   "Numerical", "Numerical", "Numerical", "Numerical", 
                   "Numerical", "Numerical", "Numerical", "Numerical", 
                   "Numerical", "Numerical", "Numerical", "Numerical", 
                   "Numerical", "Numerical", "Numerical"}, 
                 "FeatureKeys" -> {
                  "f1", "f2", "f3", "f4", "f5", "f6", "f7", "f8", "f9", "f10",
                    "f11", "f12", "f13", "f14", "f15", "f16", "f17", "f18", 
                   "f19", "f20", "f21", "f22", "f23", "f24", "f25", "f26", 
                   "f27", "f28", "f29", "f30", "f31", "f32", "f33", "f34", 
                   "f35"}, "FeatureWeights" -> Automatic, "ExampleWeights" -> 
                 Automatic, "RawExample" -> 
                 Missing["KeyAbsent", "RawExample"], "StructurePreserving" -> 
                 False|>]}|>], "ScalarFeature" -> False, "Invertibility" -> 
          "Perfect", "StructurePreserving" -> False, "Missing" -> 
          "Allowed"|>], "Processor" -> 
       MachineLearning`MLProcessor[
        "Sequence", <|
         "Input" -> <|
           "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
            "f2" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
            "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
            "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
            "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
            "f6" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
            "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
            "f8" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
            "f9" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
            "f10" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
            "f11" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
            "f12" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
            "f13" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
            "f14" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
            "f15" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
            "f16" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
            "f17" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
            "f18" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
            "f19" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
            "f20" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
            "f21" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
            "f22" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
            "f23" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
            "f24" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
            "f25" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
            "f26" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
            "f27" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
            "f28" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
            "f29" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
            "f30" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
            "f31" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
            "f32" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
            "f33" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
            "f34" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
            "f35" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
          "Output" -> <|
           "(f1f2f3f4f5f6f7f8f9f10f11f12f13f14f15f16f17f18f19f20f21f22f23f24f2\
5f26f27f28f29f30f31f32f33f34f35)" -> <|
             "Type" -> "NumericalVector", "Weight" -> 35|>|>, "Processors" -> {
            MachineLearning`MLProcessor[
            "SynthesizeMissingValues", <|
             "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
              "StructurePreserving" -> True, 
              "Input" -> <|
               "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f2" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f6" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f8" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f9" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f10" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f11" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f12" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f13" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f14" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f15" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f16" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f17" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f18" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f19" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f20" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f21" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f22" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f23" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f24" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f25" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f26" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f27" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f28" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f29" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f30" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f31" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f32" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f33" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f34" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f35" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
              "Distribution" -> 
              LearnedDistribution[<|
                "ExampleNumber" -> 108, "Preprocessor" -> 
                 MachineLearning`MLProcessor[
                  "ToMLDataset", <|
                   "Input" -> <|
                    "f1" -> <|"Type" -> "Numerical"|>, 
                    "f2" -> <|"Type" -> "Numerical"|>, 
                    "f3" -> <|"Type" -> "Numerical"|>, 
                    "f4" -> <|"Type" -> "Numerical"|>, 
                    "f5" -> <|"Type" -> "Numerical"|>, 
                    "f6" -> <|"Type" -> "Numerical"|>, 
                    "f7" -> <|"Type" -> "Numerical"|>, 
                    "f8" -> <|"Type" -> "Numerical"|>, 
                    "f9" -> <|"Type" -> "Numerical"|>, 
                    "f10" -> <|"Type" -> "Numerical"|>, 
                    "f11" -> <|"Type" -> "Numerical"|>, 
                    "f12" -> <|"Type" -> "Numerical"|>, 
                    "f13" -> <|"Type" -> "Numerical"|>, 
                    "f14" -> <|"Type" -> "Numerical"|>, 
                    "f15" -> <|"Type" -> "Numerical"|>, 
                    "f16" -> <|"Type" -> "Numerical"|>, 
                    "f17" -> <|"Type" -> "Numerical"|>, 
                    "f18" -> <|"Type" -> "Numerical"|>, 
                    "f19" -> <|"Type" -> "Numerical"|>, 
                    "f20" -> <|"Type" -> "Numerical"|>, 
                    "f21" -> <|"Type" -> "Numerical"|>, 
                    "f22" -> <|"Type" -> "Numerical"|>, 
                    "f23" -> <|"Type" -> "Numerical"|>, 
                    "f24" -> <|"Type" -> "Numerical"|>, 
                    "f25" -> <|"Type" -> "Numerical"|>, 
                    "f26" -> <|"Type" -> "Numerical"|>, 
                    "f27" -> <|"Type" -> "Numerical"|>, 
                    "f28" -> <|"Type" -> "Numerical"|>, 
                    "f29" -> <|"Type" -> "Numerical"|>, 
                    "f30" -> <|"Type" -> "Numerical"|>, 
                    "f31" -> <|"Type" -> "Numerical"|>, 
                    "f32" -> <|"Type" -> "Numerical"|>, 
                    "f33" -> <|"Type" -> "Numerical"|>, 
                    "f34" -> <|"Type" -> "Numerical"|>, 
                    "f35" -> <|"Type" -> "Numerical"|>|>, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f2" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f6" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f8" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f9" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f10" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f11" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f12" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f13" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f14" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f15" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f16" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f17" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f18" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f19" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f20" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f21" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f22" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f23" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f24" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f25" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f26" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f27" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f28" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f29" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f30" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f31" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f32" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f33" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f34" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f35" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                    "Preprocessor" -> MachineLearning`MLProcessor["Identity"],
                     "ScalarFeature" -> False, "Invertibility" -> "Perfect", 
                    "StructurePreserving" -> False, "Missing" -> "Allowed"|>],
                  "Processor" -> 
                 MachineLearning`MLProcessor[
                  "Sequence", <|
                   "Input" -> <|
                    "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f2" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f6" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f8" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f9" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f10" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f11" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f12" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f13" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f14" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f15" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f16" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f17" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f18" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f19" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f20" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f21" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f22" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f23" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f24" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f25" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f26" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f27" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f28" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f29" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f30" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f31" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f32" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f33" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f34" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f35" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                    "Output" -> <|
                    "(f1f2f3f4f5f6f7f8f9f10f11f12f13f14f15f16f17f18f19f20f21f2\
2f23f24f25f26f27f28f29f30f31f32f33f34f35)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 35|>|>, 
                    "Processors" -> {
                    MachineLearning`MLProcessor[
                    "ToVector", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f2" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f6" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f8" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f9" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f10" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f11" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f12" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f13" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f14" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f15" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f16" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f17" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f18" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f19" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f20" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f21" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f22" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f23" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f24" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f25" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f26" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f27" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f28" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f29" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f30" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f31" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f32" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f33" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f34" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f35" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                    "Output" -> <|
                    "(f1f2f3f4f5f6f7f8f9f10f11f12f13f14f15f16f17f18f19f20f21f2\
2f23f24f25f26f27f28f29f30f31f32f33f34f35)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 35|>|>, 
                    "Version" -> {13.2, 1}, "ID" -> 4349986068316886955|>], 
                    MachineLearning`MLProcessor[
                    "Standardize", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "(f1f2f3f4f5f6f7f8f9f10f11f12f13f14f15f16f17f18f19f20f21f2\
2f23f24f25f26f27f28f29f30f31f32f33f34f35)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 35|>|>, 
                    "Mean" -> {6.999074074074075, 76.16111111111111, 1.75, 
                    9.112037037037036, 28.575925925925926`, 18.07942008094786,
                     37.90644552427412, 23.417592592592595`, 
                    170.6101851851852, 4.194444444444445, 24.51666666666667, 
                    56.175, 37.585642479948035`, 26.7538221485504, 
                    21.489814814814817`, 274.9703703703704, 9.87037037037037, 
                    22.751851851851853`, 71.91666666666667, 42.16564895676505,
                     24.573509693937126`, 9.481481481481474, 
                    321.80092592592587`, 16.11111111111111, 
                    12.593518518518529`, 62.04351851851851, 32.65832466712392,
                     19.49861926454304, 5.647222222222223, 324.8481481481482, 
                    20.49074074074074, 8.838888888888889, 50.69537037037038, 
                    24.307165074248932`, 14.641835157156406`}, 
                    "StandardDeviation" -> {17.073121989306802`, 
                    132.11279224734224`, 3.485953120579579, 
                    19.523064325856037`, 55.044866781088075`, 
                    34.05710932121369, 39.43362541045207, 46.40391102737146, 
                    159.92826893236762`, 4.81907877599248, 48.55585376223386, 
                    67.34704529038966, 50.74892783320901, 27.181982037132123`,
                     41.72535243085917, 132.4004900598402, 9.074038753542775, 
                    36.02952444943749, 60.910741345143336`, 38.78342229925278,
                     24.446625852115705`, 11.873099636613947`, 
                    92.49107508888231, 11.563181444093761`, 10.291392584879, 
                    54.16173473033941, 24.094970592230307`, 25.25772070999359,
                     6.167452379009669, 95.77829684261098, 
                    14.792960797818715`, 6.051860505358991, 48.68766829276975,
                     14.82507898156287, 18.86318552790818}, 
                    "Output" -> <|
                    "(f1f2f3f4f5f6f7f8f9f10f11f12f13f14f15f16f17f18f19f20f21f2\
2f23f24f25f26f27f28f29f30f31f32f33f34f35)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 35|>|>, 
                    "Version" -> {13.2, 1}, "ID" -> 5439362325679053469|>]}, 
                    "Invertibility" -> "Perfect", "StructurePreserving" -> 
                    True, "Missing" -> "Allowed"|>], "PerformanceGoal" -> 
                 "DirectTraining", "BatchProcessing" -> Automatic, 
                 "Model" -> <|"RotationMatrix" -> CompressedData["
1:eJwN1Pc/FAwcwHEqK/GEHiVlJA0aSDwiXx48eszIKIlCZFTqiccoZc/shhJn
k7PPOfN7OK5DmXdmKGXWIytZefrh8x98Xm9Ju9um17ewsbFJ/Yr3V4S5hYoE
Yh3YrepMLRzrAGv69oo2Gyo+Zpq5px+rwJjwKzEZkxX4rEVJ+rpTEfYY8Qp6
6Eeir5aRkHRNJ9Q8jdFx2dEHER99pAO5X+K8KLH65v5+eCy0/VzPiQYgr/81
zBfXAx4fJ/ZMajZjltFffbqEUlzSSQlt6/KC488kLfjICJGPE3eHr4SC8Egq
e/Bvb7H5Pc/IUl0b2idctXQSJCPbTw1ORnghTmeslLbKVsEQYVF+wLcNRF5M
Tn8RbkRfkbWfUa4B+LTXUoIiTQKvwwc+p5Fb4Vvn3XX7eRJccXVQSVjqRCt3
QzWVTwO4GpM8/jCTgRwitNpD4ql4QsCZzmaLsDAssr2fsweGl4xIyyP1yOOQ
/tvpfDIOvwxqSjCgoFeKtg3zVC5ylKhmmqS+xlri/euBAlRwY+ZZO0f3QsXm
ofEKtnywOfkuqtOgDUJ425z8BuvBXGhXT1JLD/ztspgxGduIyVFymRKrFPTZ
97hPsykBI00cv+GFdLBKV7e7dTcVWff+4ylfp6GWmv4DmwtxoHJ51LzrdAm8
a4Ghe5l0fKro4ml7vAEkv05onT3Jgs2X4mqnFWl4+dihogLxKrSM3jYV7pyH
nkv3+APMHsG6xNsHHv7ZqEly0dNYImHntt0J6nMN0Cn1pq00pBT05SR9nbxK
8LZiT5pf/ANoSSMqB4dlAtsjVkTi+j8YNqAVuPzoOfK7OJs7XAvHMg+74SMx
KfiwyNh12eE5Crl21w3qEZFScnaxcLECHtjdrSpiq4SiuX+ftnjRscOLVC7L
9Qpcmh5a1jNT0Vf1d91nd3tg3luA4LGjHCakebca87zFH0MGS4bpVci/+WmA
O6IIt5uJD0rpt6HHvMJLScc6DKN4DOYplOLXAOdkkdkBuJ+QEPsD3wCNX9Hm
fWUb8GxdXf/G2QIq3sbHQ64XgcmEY+9aHQMzqw+WXFYkgPIZfvbXX57j7NFt
GsTORhBnGCyMhzXit5hEJR2pAHxkPuzW5B+CzP4P9HrbNuBV8tSEyAY49fCi
v1x0Kj6JHlI8fPIF1k1sL9bsQ1RhKFwriMiE34IN9/28kAx3kiYtpIgsGBCw
MKtS68DbC9+YFB8yTmmK+cinkcDNJ8g8dywadSKVVmUyqoEmseJYrzII3D6f
tJW30OH2qV3msT7VePqE8qipKgGOr7htS8pLRU1DQ6qeCmISz+4wL6VUAG2x
8rYMB8wsjtQeWqLBj5KDc8/iymDNzqiY9b4Vzmh2nCuoYkLpa3FTp6d04Oco
u2KgRUHvZR+7HV5kOG3veGlBLg2MmKrlHylkIKaVzR3IQvAzCFE8pZoLTYpm
dv5KvZhGKfXadicFfjo3jvIT6LCqTddxaRmAqdvz25wFGBC4qNEwzKzCSn31
bl71Ehjuq7/zWYMT1WPHgp8oFCItelH3Q1k2PDedpyouBQKbYYWjkGAaXlfz
O1salYKi1hH8H3kKgWJB2CPvnA+WoRltuqllQLUtPM7KS4ZGLnlHfnIh7BP9
olhsXQwVNBODpmkKKEtNR75mdYCa9Fjnm2Pl0Mu6yk8OHsXDTOldQmMNqK5X
Pfd7ch6y/Ru+zDtZDispdvOzy30Yl32mltb9Gq3KAryDIppgtSit2nER8bsJ
81TUgUygvE3+3LFKhpbavmU+60601IpuiVovxdgvs4KX+BtAn5lOtHKtBXrN
waMJe9vB3FMs+h65B8fGvwb3O5bBuhrXlwpJCqrMyQ+FjqaDj/BbeXe/OvD2
8/nI8nqL0zOhkbtD0rHsI0X9aslzDHy/lpj7+B1kj9w2rhorxYtnKisbR4tA
T6aAec6eiJudaySJAArWTz7flKIT8Y1j6+C+rBz4MWQX4qo4CIyKfbYRfu8w
Zf2wuVK9PVCjXlllCFLxeN6JsihGE5rs/3BGSt0Wzzz0WVrcpIDgjVwned1+
dDzyH1NlvBTO/51HnrzVBDc2PpE/LRQhKXhi567TjbCNGHYxybAEa+0tmJV7
K2HW7vkB9q48YN+j+DNwCxW7SuK/vOBoAhdP+4kE1w5o8pvf1sP3Br9Lh0K0
eD/MpToKF8gUYfgI6XdaTw08lLGrH5LNhIaJij5nnXToapC1blYlYMmQ7FCS
3HOIFxd91JnRhDOFu+3Z0yrhYmSVRm09A8R0Ay3G3Fm47L0hpBj0DuJ3ix64
YE2Cax4hNjlDD2Bd74/7LiblcN06skfLMheXjs3YWmIRfCIUjnFaEEEngiju
+pKKQ6Oa8XauVHiwcMEq+Jd7DrdETma5FsNhYSZphZcF8yq85Z7d9WhplJ/x
frABlms+M1RE8jCauHG0UqMRzFcUtDP9a/BP6axp640AsM1SEE6casOcxtp/
N4+Gojec+BoY5Iuc/PKconxUjI53VX/7vRtlA8K+jpuVwLU42boZajM+oXiZ
UR5Ggp44d+P7ukKQX0m2ts9lYfPBA2rhi1TkVeGc+MxZDa3crs+4iPchSOOq
4fL2HCDPXCzgNu3AkRPKQlv3NONtZXaFXIsRjPXcceTQnzVgHqdsVsVox4Hm
xA2BkzbYeLd18yslBPkJEWkTJDLGvGoqIv36bHpv73CiRyt+/xkSSRvLgk59
JQNurUoM4PDXl9gkYeEHthyPKRrSZFI/PxHzx+vhUxkcuo3A4ft9VO54NrLS
Zjr3xGaBeVJaSYo9FZf37Tf652Q7immIX02Ys4XhiCsOLyxSkeRR7NwtQkGF
Xd3tr4x7cFl1nFfnEwnyLH/ImQwTgaHkYuDf7I261c8kO/XysVFlOMzVkQlG
hUOzyrPx2J3AsSQr2oZZ52day2KooODj0L8jpBBJ39K/c53Nhjo3H4HTQU9Q
JvTP7xUGPZgS8IbDbrIbgncom/FmUkBcXtrvb/tiDOQ1bTd+3ICCvS7N9n5P
8HJAeul+vQ7UbqO7n3lABWLsU9W1iiJkSYimE0qDgCvflk6ro2OOUN4tF28a
Ovp/bu1L6QDls4MfPC+lAlu/0B+hWmRsjVjNjYxOA2ebnc9OehHwWl7MgNEQ
A2lHD9R8/a8Kdpl2KY0pkVGCxNtZbkaGONFZ/p/MIlz9xNy8da8b17L5KDbq
vRAfI+N1ML0OCgMTBsQSypE9jmwTmduMOr6DscsTL/CSw9jWQok2XNhkOX1Q
eQSNl9Lejb1MhGmWv/vgaRJO9VqofhnowY0N6bEVZjF0beXmMZVoRILp/C2u
kHh0q71DtfGkgLuw89fkmUF8Zb7FY0GyEn2j06PCntbCXm1MNLQhwBPHqcc9
VsVAjXOqajWmI6uEwFsWngwss4SbZv0D6OQBN0YZvTif5D/YF96FYj9YxjRN
AmiZVc/6PSmCL44/xsXMK1Bl890a53grRAU1Eg41/fIuRtaryS8PZHRcbwhO
1iGHDLtkO0cxqo7utG2Ta8HUB1v5zGTzMdepaS/X1lSQVpnNiLmTDT+D+WaW
BuLAaDf9m/E/dXgtvH3v7j9a0VNZaFknKhFaV6TgkXAc7Iyh5vM30fDGvf1R
ulYdaKBzSyTqVAlwcpXy8DjUwPfsMNJCOxF//2texulcNfoucWvYrY3CCZkI
9b3xOXCp/Hz/xJU3eL/qR9dOQypYbl/lSXMvQI2zxTPN4U3w50hBTsaHerAM
s2z3Embg6sY3EU72ATSfduMrs6IDgzPiasIWGspGRK7LtuWD26tEqflBZayV
3+i4bN2ObtSPf3++yYAkZbuz7Vtif7ksBMSfmSDrLV1z5FUuxu7tCuk6SsHU
m8kSIZHtOPXMrWxT7zHMlFsfSRivR22t87f6yumQ9eavDz1reSgnILhccJOO
h1v11dmnasB3WkBtz0YZ9jMFAqVOMcCZbEqI7qXA+ZF/z71PaMaUpSXrR3kD
GPP6nVfM1VaQDY5XUjeho73l0xyHCTtgjOi45wml4/8/L2Zx
                    "], 
                   "Precisions" -> {0.10146503250470458`, 
                    0.21118654491209388`, 0.2766684266455923, 
                    0.35301395165477073`, 0.515921488742857, 
                    0.5366181346066528, 0.6241698906333616, 
                    0.8787471430602574, 0.9659093749441514, 1.104665548193479,
                     1.17241900359983}, "NoisePrecision" -> 
                   7.9158030717753665`, "Processor" -> 
                   MachineLearning`MLProcessor[
                    "Center", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "(f1f2f3f4f5f6f7f8f9f10f11f12f13f14f15f16f17f18f19f20f21f2\
2f23f24f25f26f27f28f29f30f31f32f33f34f35)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 35|>|>, 
                    "Mean" -> {-0.0007245232099047603, \
-4.071276527035362*^-6, -0.0005060909017493868, -0.0007808731819413327, \
-0.00019017568044073796`, 
                    0.00010647656640408248`, -0.0005416122586773829, \
-0.000863141222868894, -0.0005520250497619993, 0.00012595712820034192`, 
                    0.000029783702447572636`, 0.0004793047679604733, 
                    0.0003186561246232515, 
                    0.001549190701649983, -0.0005984917432654511, 
                    0.0001330392980212326, 0.0006016631707187275, 
                    0.00007677449812452632, 
                    0.0005330897345427545, -0.00006917193276083983, 
                    0.00023947453837385018`, 
                    0.0004923215851339739, -0.0002780632763827297, \
-0.00028171068857572304`, -0.0006453927798562812, 
                    0.0004735849393160752, -0.00014721696899468173`, 
                    0.00018504399131406295`, 
                    0.00013060329770123746`, -0.0005871520199682896, \
-0.0002834468090790815, -0.00003601977211836492, 
                    0.00020470756841370355`, -0.00026765482114093084`, \
-0.0005098196790971182}, 
                    "Output" -> <|
                    "(f1f2f3f4f5f6f7f8f9f10f11f12f13f14f15f16f17f18f19f20f21f2\
2f23f24f25f26f27f28f29f30f31f32f33f34f35)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 35|>|>, 
                    "Version" -> {13.2, 1}, "ID" -> 5537938110584055445|>], 
                   "PostProcessor" -> 
                   MachineLearning`MLProcessor[
                    "FirstValues", <|
                    "Info" -> <|"Type" -> "NumericalVector", "Weight" -> 35|>,
                     "Key" -> 
                    "(f1f2f3f4f5f6f7f8f9f10f11f12f13f14f15f16f17f18f19f20f21f2\
2f23f24f25f26f27f28f29f30f31f32f33f34f35)", "Invertibility" -> "Perfect", 
                    "StructurePreserving" -> False, "Missing" -> "Allowed"|>],
                    "Method" -> "Multinormal", 
                   "Options" -> <|
                    "CovarianceType" -> <|
                    "Value" -> "Full", "Options" -> <||>|>, 
                    "IntrinsicDimension" -> <|
                    "Value" -> 11, "Options" -> <||>|>|>|>, 
                 "TrainingInformation" -> <|
                  "Configurations" -> 
                   Dataset[<|<|
                    "Value" -> "Multinormal", 
                    "Options" -> <|
                    "CovarianceType" -> <|"Value" -> "Full"|>, 
                    "IntrinsicDimension" -> <|"Value" -> "Heuristic"|>|>, 
                    "NaiveImputer" -> 
                    MachineLearning`MLProcessor[
                    "ImputeMissing", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "(f1f2f3f4f5f6f7f8f9f10f11f12f13f14f15f16f17f18f19f20f21f2\
2f23f24f25f26f27f28f29f30f31f32f33f34f35)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 35|>|>, 
                    "Mean" -> {-0.0007245232099047598, \
-4.0712765270127465`*^-6, -0.0005060909017493585, -0.000780873181941306, \
-0.00019017568044075645`, 
                    0.00010647656640412463`, -0.0005416122586773953, \
-0.0008631412228689115, -0.0005520250497619942, 0.00012595712820031313`, 
                    0.0000297837024475603, 0.0004793047679604178, 
                    0.0003186561246232587, 
                    0.0015491907016500434`, -0.0005984917432654439, 
                    0.00013303929802119664`, 0.0006016631707187121, 
                    0.00007677449812449857, 
                    0.000533089734542725, -0.00006917193276085165, 
                    0.00023947453837374925`, 
                    0.0004923215851339745, -0.0002780632763826937, \
-0.0002817106885758104, -0.0006453927798562883, 
                    0.0004735849393161466, -0.0001472169689947614, 
                    0.0001850439913141223, 
                    0.00013060329770110525`, -0.0005871520199682639, \
-0.00028344680907916166`, -0.00003601977211834025, 
                    0.00020470756841360678`, -0.00026765482114092266`, \
-0.0005098196790971177}, "StandardDeviation" -> {0.9999786838337517, 
                    1.0000537576104258`, 0.9998711969245784, 
                    0.9990240103803607, 1.0008635586096428`, 
                    0.9992619656345826, 0.9980590997074258, 
                    1.0002123869316686`, 1.0002592686476501`, 
                    0.9995331095711386, 0.9999177923208962, 
                    0.9997102841164142, 1.0000704899988933`, 
                    1.0009245589195779`, 1.0004303005872377`, 
                    1.000127892938849, 0.9999733274422149, 
                    1.0005328849212534`, 1.0005634968458477`, 
                    0.9996564316725021, 1.0015987026770823`, 
                    1.0003271561932128`, 0.9999078112034406, 
                    1.0002483294375544`, 1.0000251865052032`, 
                    0.9998580875130121, 0.9997748004768324, 
                    1.0001025185339203`, 1.0002108959233624`, 
                    1.0000245322857733`, 1.000494594691545, 
                    0.9999742794061184, 1.0007502201338956`, 
                    0.999914862106442, 1.0000128928566772`}, "Method" -> 
                    "NaiveSampler", "VectorLength" -> 35, 
                    "Output" -> <|
                    "(f1f2f3f4f5f6f7f8f9f10f11f12f13f14f15f16f17f18f19f20f21f2\
2f23f24f25f26f27f28f29f30f31f32f33f34f35)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 35|>|>, "Type" -> 
                    "NumericalVector", "Version" -> {13.2, 1}, "ID" -> 
                    275850252711654426|>], "EMIterations" -> 1|> -> <||>|>, 
                    TypeSystem`Assoc[
                    
                    TypeSystem`Struct[{
                    "Value", "Options", "NaiveImputer", "EMIterations"}, {
                    TypeSystem`Atom[String], 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Struct[{"Value"}, {
                    TypeSystem`Atom[String]}], 2], TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer]}], 
                    TypeSystem`Assoc[
                    TypeSystem`UnknownType, TypeSystem`UnknownType, 
                    TypeSystem`AnyLength], 1], <||>], "BestModelInformation" -> 
                   Dataset[<|
                    "Configuration" -> {
                    "Multinormal", "CovarianceType" -> "Full", 
                    "IntrinsicDimension" -> "Heuristic"}, "ModelUtility" -> 
                    Missing[]|>, 
                    TypeSystem`Struct[{"Configuration", "ModelUtility"}, {
                    TypeSystem`Tuple[{
                    TypeSystem`Atom[String], TypeSystem`AnyType, 
                    TypeSystem`AnyType}], TypeSystem`UnknownType}], <||>]|>, 
                 "NaiveImputer" -> 
                 MachineLearning`MLProcessor[
                  "ImputeMissing", <|
                   "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "(f1f2f3f4f5f6f7f8f9f10f11f12f13f14f15f16f17f18f19f20f21f2\
2f23f24f25f26f27f28f29f30f31f32f33f34f35)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 35|>|>, 
                    "Mean" -> {-0.0007245232099047598, \
-4.0712765270127465`*^-6, -0.0005060909017493585, -0.000780873181941306, \
-0.00019017568044075645`, 
                    0.00010647656640412463`, -0.0005416122586773953, \
-0.0008631412228689115, -0.0005520250497619942, 0.00012595712820031313`, 
                    0.0000297837024475603, 0.0004793047679604178, 
                    0.0003186561246232587, 
                    0.0015491907016500434`, -0.0005984917432654439, 
                    0.00013303929802119664`, 0.0006016631707187121, 
                    0.00007677449812449857, 
                    0.000533089734542725, -0.00006917193276085165, 
                    0.00023947453837374925`, 
                    0.0004923215851339745, -0.0002780632763826937, \
-0.0002817106885758104, -0.0006453927798562883, 
                    0.0004735849393161466, -0.0001472169689947614, 
                    0.0001850439913141223, 
                    0.00013060329770110525`, -0.0005871520199682639, \
-0.00028344680907916166`, -0.00003601977211834025, 
                    0.00020470756841360678`, -0.00026765482114092266`, \
-0.0005098196790971177}, 
                    "StandardDeviation" -> {0.9999786838337517, 
                    1.0000537576104258`, 0.9998711969245784, 
                    0.9990240103803607, 1.0008635586096428`, 
                    0.9992619656345826, 0.9980590997074258, 
                    1.0002123869316686`, 1.0002592686476501`, 
                    0.9995331095711386, 0.9999177923208962, 
                    0.9997102841164142, 1.0000704899988933`, 
                    1.0009245589195779`, 1.0004303005872377`, 
                    1.000127892938849, 0.9999733274422149, 
                    1.0005328849212534`, 1.0005634968458477`, 
                    0.9996564316725021, 1.0015987026770823`, 
                    1.0003271561932128`, 0.9999078112034406, 
                    1.0002483294375544`, 1.0000251865052032`, 
                    0.9998580875130121, 0.9997748004768324, 
                    1.0001025185339203`, 1.0002108959233624`, 
                    1.0000245322857733`, 1.000494594691545, 
                    0.9999742794061184, 1.0007502201338956`, 
                    0.999914862106442, 1.0000128928566772`}, "Method" -> 
                    "NaiveSampler", "VectorLength" -> 35, 
                    "Output" -> <|
                    "(f1f2f3f4f5f6f7f8f9f10f11f12f13f14f15f16f17f18f19f20f21f2\
2f23f24f25f26f27f28f29f30f31f32f33f34f35)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 35|>|>, "Type" -> 
                    "NumericalVector", "Version" -> {13.2, 1}, "ID" -> 
                    275850252711654426|>], "InputDimension" -> 0, 
                 "OutputDimension" -> 35, 
                 "Log" -> <|
                  "Example" -> 
                   MachineLearning`MLDataset[<|
                    "f1" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, "Values" -> {27.3}, 
                    "ID" -> 7797313148442062539|>, 
                    "f2" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, "Values" -> {36.8}, 
                    "ID" -> 7925723830368100284|>, 
                    "f3" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, "Values" -> {2}, 
                    "ID" -> 4623027067143569383|>, 
                    "f4" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, 
                    "Values" -> {9.499999999999996}, "ID" -> 
                    2378052898592155972|>, 
                    "f5" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, 
                    "Values" -> {9.499999999999996}, "ID" -> 
                    6253742691279981432|>, 
                    "f6" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, 
                    "Values" -> {9.499999999999996}, "ID" -> 
                    7750295046597710659|>, 
                    "f7" -> <|"Type" -> "Numerical", "Weight" -> 1, "Values" -> {
                    Missing[]}, "ID" -> 7101197045517795021|>, 
                    "f8" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, 
                    "Values" -> {10.400000000000002`}, "ID" -> 
                    8774421324316005215|>, 
                    "f9" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, "Values" -> {93.8}, 
                    "ID" -> 8281562983078791711|>, 
                    "f10" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, "Values" -> {3}, 
                    "ID" -> 6615906480011473302|>, 
                    "f11" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, 
                    "Values" -> {8.899999999999999}, "ID" -> 
                    9028491299267496712|>, 
                    "f12" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, "Values" -> {74.5}, 
                    "ID" -> 6724402381697007065|>, 
                    "f13" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, "Values" -> {41.7}, 
                    "ID" -> 3596605380783368622|>, 
                    "f14" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, 
                    "Values" -> {46.38620484583752}, "ID" -> 
                    6713918230488105204|>, 
                    "f15" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, 
                    "Values" -> {12.500000000000004`}, "ID" -> 
                    1226026325406817909|>, 
                    "f16" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, 
                    "Values" -> {396.40000000000003`}, "ID" -> 
                    6347657013844187342|>, 
                    "f17" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, "Values" -> {5}, 
                    "ID" -> 3206313970183223714|>, 
                    "f18" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, "Values" -> {8.}, 
                    "ID" -> 9112713970058885597|>, 
                    "f19" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, "Values" -> {299.1},
                     "ID" -> 530313765124785045|>, 
                    "f20" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, 
                    "Values" -> {95.97500000000001}, "ID" -> 
                    834416099195719507|>, 
                    "f21" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, 
                    "Values" -> {137.64622225110284`}, "ID" -> 
                    5963706592630747434|>, 
                    "f22" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, 
                    "Values" -> {5.300000000000001}, "ID" -> 
                    1699780357431264663|>, 
                    "f23" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, 
                    "Values" -> {344.40000000000003`}, "ID" -> 
                    5688822297495725580|>, 
                    "f24" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, "Values" -> {6}, 
                    "ID" -> 8711953917290811777|>, 
                    "f25" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, 
                    "Values" -> {7.299999999999997}, "ID" -> 
                    1188964204981764265|>, 
                    "f26" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, 
                    "Values" -> {236.00000000000006`}, "ID" -> 
                    6921717737841486058|>, 
                    "f27" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, 
                    "Values" -> {67.82000000000001}, "ID" -> 
                    3191708700968612953|>, 
                    "f28" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, 
                    "Values" -> {95.48095097976353}, "ID" -> 
                    5210517082932621247|>, 
                    "f29" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, 
                    "Values" -> {5.400000000000002}, "ID" -> 
                    8622311331809248155|>, 
                    "f30" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, 
                    "Values" -> {146.10000000000002`}, "ID" -> 
                    542375187397818677|>, 
                    "f31" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, "Values" -> {6}, 
                    "ID" -> 4577639997050061043|>, 
                    "f32" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, 
                    "Values" -> {6.600000000000001}, "ID" -> 
                    2671548496599706566|>, 
                    "f33" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, 
                    "Values" -> {58.20000000000003}, "ID" -> 
                    2113293135821897587|>, 
                    "f34" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, 
                    "Values" -> {28.140000000000004`}, "ID" -> 
                    3074514993213336650|>, 
                    "f35" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, 
                    "Values" -> {23.12959143608033}, "ID" -> 
                    6874162123589016082|>|>, <|
                    "ExampleNumber" -> 1, "ExampleWeights" -> 1, 
                    "LogDensityRatios" -> 0, "RawExample" -> False|>], 
                   "TrainingTime" -> 0.857039, "MaxTrainingMemory" -> 
                   51890352, "DataMemory" -> 132496, "FunctionMemory" -> 
                   160760, "LanguageVersion" -> {13.2, 1}, "Date" -> 
                   DateObject[{
                    2023, 10, 19, 10, 4, 0.8457669`7.679825673720369}, 
                    "Instant", "Gregorian", 2.], "ProcessorCount" -> 6, 
                   "ProcessorType" -> "x86-64", "OperatingSystem" -> 
                   "Windows", "SystemWordLength" -> 64, "Evaluations" -> {}|>,
                  "LogPDFDistribution" -> 
                 MachineLearning`TailedQuantileDistribution[<|
                   "Quantiles" -> {-4.3180009621940485`, \
-4.3180009621940485`, -4.286293361117747, -4.205100926466099, \
-4.111016664335825, -4.093538827462628, -4.069416217922306, \
-4.047496609509975, -4.017898067598204, -4.001781816743477, \
-3.9912907296428433`}, "LeftBoundary" -> -4.286293361117747, "LeftScale" -> 
                    0.015853800538150775`, "LeftTailNorm" -> 0.2|>], 
                 "Entropy" -> 
                 Around[143.99641964047603`, 1.2956014755414549`], 
                 "EntropySampleSize" -> 10|>], 
              "Output" -> <|
               "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f2" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f6" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f8" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f9" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f10" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f11" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f12" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f13" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f14" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f15" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f16" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f17" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f18" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f19" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f20" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f21" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f22" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f23" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f24" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f25" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f26" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f27" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f28" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f29" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f30" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f31" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f32" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f33" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f34" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f35" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
              "EvaluationStrategy" -> "ModeFinding", "Version" -> {13.2, 1}, 
              "ID" -> 7940502765907928523|>], 
            MachineLearning`MLProcessor[
            "ToVector", <|
             "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
              "StructurePreserving" -> True, 
              "Input" -> <|
               "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f2" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f4" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f5" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f6" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f7" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f8" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f9" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f10" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f11" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f12" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f13" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f14" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f15" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f16" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f17" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f18" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f19" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f20" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f21" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f22" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f23" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f24" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f25" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f26" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f27" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f28" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f29" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f30" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f31" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f32" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f33" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f34" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f35" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
              "Output" -> <|
               "(f1f2f3f4f5f6f7f8f9f10f11f12f13f14f15f16f17f18f19f20f21f22f23f\
24f25f26f27f28f29f30f31f32f33f34f35)" -> <|
                 "Type" -> "NumericalVector", "Weight" -> 35|>|>, 
              "Version" -> {13.2, 1}, "ID" -> 8490636327876692145|>], 
            MachineLearning`MLProcessor[
            "Standardize", <|
             "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
              "StructurePreserving" -> True, 
              "Input" -> <|
               "(f1f2f3f4f5f6f7f8f9f10f11f12f13f14f15f16f17f18f19f20f21f22f23f\
24f25f26f27f28f29f30f31f32f33f34f35)" -> <|
                 "Type" -> "NumericalVector", "Weight" -> 35|>|>, 
              "Mean" -> {6.999074074074074, 76.16111111111113, 1.75, 
               9.112037037037037, 28.57592592592593, 18.079420080947866`, 
               37.027967350294055`, 23.417592592592595`, 170.61018518518514`, 
               4.194444444444445, 24.516666666666666`, 56.175000000000004`, 
               37.58564247994803, 27.100064094827566`, 21.489814814814814`, 
               274.97037037037023`, 9.87037037037037, 22.751851851851853`, 
               71.91666666666667, 42.165648956765025`, 24.479772531138803`, 
               9.481481481481474, 321.80092592592587`, 16.11111111111111, 
               12.593518518518527`, 62.0435185185185, 32.65832466712392, 
               19.498619264543038`, 5.64722222222222, 324.84814814814825`, 
               20.49074074074074, 8.838888888888885, 50.695370370370355`, 
               24.30716507424894, 14.513467380828335`}, 
              "StandardDeviation" -> {16.993895937737793`, 131.4997365391906, 
               3.4697769167270467`, 19.432469571010728`, 54.7894367866829, 
               33.89907083820725, 20.52629869497149, 46.188578491801174`, 
               159.1861383900033, 4.79671634082327, 48.33053535962693, 
               67.03452831273681, 50.513432697866826`, 20.646818701916775`, 
               41.53173026114159, 131.7860993198332, 9.031931617971578, 
               35.86233317863032, 60.62809136830023, 38.60345185113981, 
               23.139752752234685`, 11.818003749365943`, 92.06187984918034, 
               11.50952370006983, 10.243636445131544`, 53.910402818607004`, 
               23.983160380607067`, 25.14051487706281, 6.1388329560046175`, 
               95.33384759134924, 14.724315597734023`, 6.023777474453094, 
               48.461738218507215`, 14.75628474037816, 18.73482559017934}, 
              "Output" -> <|
               "(f1f2f3f4f5f6f7f8f9f10f11f12f13f14f15f16f17f18f19f20f21f22f23f\
24f25f26f27f28f29f30f31f32f33f34f35)" -> <|
                 "Type" -> "NumericalVector", "Weight" -> 35|>|>, 
              "Version" -> {13.2, 1}, "ID" -> 3843827617569549389|>]}, 
          "Invertibility" -> "Perfect", "StructurePreserving" -> True, 
          "Missing" -> "Imputed"|>]|>, 
     "Output" -> <|
      "Preprocessor" -> 
       MachineLearning`MLProcessor[
        "ToMLDataset", <|
         "Input" -> <|"f1" -> <|"Type" -> "Nominal"|>|>, 
          "Output" -> <|"f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
          "Preprocessor" -> 
          MachineLearning`MLProcessor["Sequence", <|"Processors" -> {
               MachineLearning`MLProcessor["List"], 
               MachineLearning`MLProcessor[
               "WrapMLDataset", <|
                "FeatureTypes" -> {"Nominal"}, "FeatureKeys" -> {"f1"}, 
                 "FeatureWeights" -> Automatic, "ExampleWeights" -> Automatic,
                  "RawExample" -> Missing["KeyAbsent", "RawExample"], 
                 "StructurePreserving" -> False|>]}|>], "ScalarFeature" -> 
          True, "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
          "Missing" -> "Allowed"|>], "Processor" -> 
       MachineLearning`MLProcessor[
        "Sequence", <|
         "Input" -> <|"f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
          "Output" -> <|"f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
          "Processors" -> {
            MachineLearning`MLProcessor[
            "ToVector", <|
             "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
              "StructurePreserving" -> True, 
              "Input" -> <|"f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
              "Output" -> <|
               "f1" -> <|"Type" -> "NominalVector", "Weight" -> 1|>|>, 
              "Version" -> {13.2, 1}, "ID" -> 6115831310676068980|>], 
            MachineLearning`MLProcessor[
            "IntegerEncodeNominalVector", <|
             "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
              "StructurePreserving" -> True, 
              "Input" -> <|
               "f1" -> <|"Type" -> "NominalVector", "Weight" -> 1|>|>, 
              "Index" -> {<|"int" -> 1, "pyr" -> 2|>}, "MissingCode" -> 0, 
              "Version" -> {13.2, 1}, "ID" -> 5613645175323150044, 
              "Output" -> <|
               "f1" -> <|"Type" -> "NominalVector", "Weight" -> 1|>|>|>], 
            MachineLearning`MLProcessor[
            "FromVector", <|
             "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
              "StructurePreserving" -> True, 
              "Input" -> <|
               "f1" -> <|
                 "Type" -> "NominalVector", "Weight" -> 1, 
                  "SetSize" -> {2}|>|>, 
              "Output" -> <|"f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
              "Version" -> {13.2, 1}, "ID" -> 4533265931970828710|>], 
            MachineLearning`MLProcessor[
            "FirstValues", <|
             "Info" -> <|"Type" -> "Nominal", "Weight" -> 1, "SetSize" -> 2|>,
               "Key" -> "f1", "Invertibility" -> "Perfect", 
              "StructurePreserving" -> False, "Missing" -> "Allowed"|>]}, 
          "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
          "Missing" -> "Allowed"|>], "ProbabilityPostprocessor" -> Identity, 
       "Name" -> "class", 
       "Marginal" -> <|
        "int" -> 0.4636363636363636, "pyr" -> 0.5363636363636364|>|>, 
     "LabelSplitter" -> 
     MachineLearning`MLProcessor[
      "FeatureLabelSplit", <|
       "Processor" -> MachineLearning`MLProcessor["ListSplit"], 
        "PreferLabeled" -> True, "KeepLabelsFormat" -> False|>], 
     "RecalibrationFunction" -> None, "ImputationStrategy" -> Automatic, 
     "Prior" -> Automatic, "Utility" -> 
     SparseArray[
      Automatic, {2, 3}, 0., {1, {{0, 1, 2}, {{2}, {3}}}, {1., 1.}}], 
     "Threshold" -> 0, "TieBreaker" -> RandomChoice, "PerformanceGoal" -> 
     Automatic, "BatchProcessing" -> Automatic, "Model" -> <|"Trees" -> {
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> RawArray["Integer16",{34, 25, 29, 1, 7}], 
           "NumericalThresholds" -> {-0.42316372692584986`, \
-0.5943027734756469, -0.17412029206752774`, -0.4065850675106048, 
            0.0230640908703208}, "LeafValues" -> 
           RawArray["Real32",{-0.06757998466491699, 0.12011656165122986`, 
             0.2273717224597931, 0.3346268832683563, -0.06757998466491699, 
             0.3346268832683563}], "Children" -> 
           RawArray["Integer16",{{4, 2}, {-2, 3}, {-3, 
             5}, {-1, -5}, {-4, -6}}], "NominalSplits" -> {}, "RootIndex" -> 
           1, "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> RawArray["Integer16",{34, 32, 13, 15}], 
           "NumericalThresholds" -> {-0.42316372692584986`, \
-0.5168873965740203, -0.7415324449539183, -0.29316003620624537`}, 
           "LeafValues" -> 
           RawArray["Real32",{-0.19346529245376587`, -0.026879319921135902`, 
             0.06450347602367401, 0.1787453442811966, 0.17156049609184265`}], 
           "Children" -> 
           RawArray["Integer16",{{-1, 2}, {-2, 3}, {-3, 4}, {-4, -5}}], 
           "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
           "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> RawArray["Integer16",{34, 12, 29, 6}], 
           "NumericalThresholds" -> {-0.42316372692584986`, \
-0.4646200388669967, 0.1429199241101742, -0.2530778348445892}, "LeafValues" -> 
           RawArray["Real32",{-0.17702460289001465`, -0.11732261627912521`, 
             0.13412980735301971`, 0.16477255523204803`, 
             0.17056582868099213`}], "Children" -> 
           RawArray["Integer16",{{-1, 2}, {3, 4}, {-2, -4}, {-3, -5}}], 
           "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
           "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> RawArray["Integer16",{34, 29, 23}], 
           "NumericalThresholds" -> {-0.42316372692584986`, \
-0.17412029206752774`, 0.3953871130943299}, "LeafValues" -> 
           RawArray["Real32",{-0.16452807188034058`, 0.012834274210035801`, 
             0.15756036341190338`, 0.1268501579761505}], "Children" -> 
           RawArray["Integer16",{{-1, 2}, {-2, 3}, {-3, -4}}], 
           "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
           "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> RawArray["Integer16",{34, 11, 29, 18, 1}], 
           "NumericalThresholds" -> {-0.42316372692584986`, \
-0.34600920975208277`, 
            0.1429199241101742, -0.17973389476537702`, -0.4065850675106048}, 
           "LeafValues" -> 
           RawArray["Real32",{-0.15473876893520355`, -0.11114352196455002`, 
             0.15735922753810883`, 0.1471523940563202, 
             0.11717533320188522`, -0.15473876893520355`}], "Children" -> 
           RawArray["Integer16",{{5, 2}, {3, 
             4}, {-2, -4}, {-3, -5}, {-1, -6}}], "NominalSplits" -> {}, 
           "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
           0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> RawArray["Integer16",{34, 29, 1, 6}], 
           "NumericalThresholds" -> {-0.32824365794658655`, \
-0.17412029206752774`, -0.4052778780460357, -0.5343075394630431}, 
           "LeafValues" -> 
           RawArray["Real32",{-0.1492823362350464, 0.001041735871694982, 
             0.15152645111083984`, -0.12616600096225739`, 
             0.13944943249225616`}], "Children" -> 
           RawArray["Integer16",{{3, 2}, {-2, 4}, {-1, -4}, {-3, -5}}], 
           "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
           "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> RawArray["Integer16",{34, 11, 29, 2, 1}], 
           "NumericalThresholds" -> {-0.42316372692584986`, \
-0.34600920975208277`, 
            0.1429199241101742, -0.28533041477203364`, -0.4056942611932754}, 
           "LeafValues" -> 
           RawArray["Real32",{-0.14038874208927155`, -0.10318537056446075`, 
             0.10354898124933243`, 0.13526178896427155`, 
             0.14825764298439026`, -0.14127086102962494`}], "Children" -> 
           RawArray["Integer16",{{5, 2}, {3, 
             4}, {-2, -4}, {-3, -5}, {-1, -6}}], "NominalSplits" -> {}, 
           "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
           0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> RawArray["Integer16",{34, 11, 29, 18, 1}], 
           "NumericalThresholds" -> {-0.42316372692584986`, \
-0.34600920975208277`, 
            0.1429199241101742, -0.17973389476537702`, -0.4056942611932754}, 
           "LeafValues" -> 
           RawArray["Real32",{-0.1350986510515213, -0.09273648262023926, 
             0.1417900025844574, 0.13080494105815887`, 
             0.09803982079029083, -0.13583366572856903`}], "Children" -> 
           RawArray["Integer16",{{5, 2}, {3, 
             4}, {-2, -4}, {-3, -5}, {-1, -6}}], "NominalSplits" -> {}, 
           "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
           0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> RawArray["Integer16",{34, 29, 34, 1}], 
           "NumericalThresholds" -> {-0.42316372692584986`, \
-0.17412029206752774`, 0.27790103852748876`, -0.4056942611932754}, 
           "LeafValues" -> 
           RawArray["Real32",{-0.1306632161140442, -0.0030690154526382685`, 
             0.09891092032194138, 
             0.13764774799346924`, -0.13128240406513214`}], "Children" -> 
           RawArray["Integer16",{{4, 2}, {-2, 3}, {-3, -4}, {-1, -5}}], 
           "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
           "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> RawArray["Integer16",{34, 11, 29, 18, 1}], 
           "NumericalThresholds" -> {-0.42316372692584986`, \
-0.34600920975208277`, 
            0.1429199241101742, -0.17973389476537702`, -0.4056942611932754}, 
           "LeafValues" -> 
           RawArray["Real32",{-0.1269073784351349, -0.08825412392616272, 
             0.13600431382656097`, 0.12388236820697784`, 
             0.0874849185347557, -0.12743377685546875`}], "Children" -> 
           RawArray["Integer16",{{5, 2}, {3, 
             4}, {-2, -4}, {-3, -5}, {-1, -6}}], "NominalSplits" -> {}, 
           "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
           0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> RawArray["Integer16",{29, 34, 34, 32}], 
           "NumericalThresholds" -> {-0.7162206470966338, \
-0.32824365794658655`, -0.07090339437127112, 0.29817010462284094`}, 
           "LeafValues" -> 
           RawArray["Real32",{-0.14617334306240082`, -0.11092421412467957`, 
             0.03647255897521973, 0.13939107954502106`, 
             0.12184048444032669`}], "Children" -> 
           RawArray["Integer16",{{-1, 2}, {-2, 3}, {-3, 4}, {-4, -5}}], 
           "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
           "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> RawArray["Integer16",{29, 35, 34, 6, 27}], 
           "NumericalThresholds" -> {-0.7162206470966338, \
-0.4413673430681228, -0.07090339437127112, -0.5343075394630431, 
            0.20102269202470782`}, "LeafValues" -> 
           RawArray["Real32",{-0.14114384353160858`, -0.1154637262225151, 
             0.03219347074627876, 0.13718611001968384`, 0.12333972007036209`, 
             0.11840472370386124`}], "Children" -> 
           RawArray["Integer16",{{-1, 2}, {-2, 3}, {-3, 4}, {-4, 
             5}, {-5, -6}}], "NominalSplits" -> {}, "RootIndex" -> 1, 
           "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> RawArray["Integer16",{29, 27, 17, 13}], 
           "NumericalThresholds" -> {-0.7162206470966338, \
-0.4399051368236541, -0.6559549272060393, 0.06421571969985963}, "LeafValues" -> 
           RawArray["Real32",{-0.13679257035255432`, -0.09592807292938232, 
             0.022342808544635773`, 0.13887150585651398`, 
             0.11910542100667953`}], "Children" -> 
           RawArray["Integer16",{{-1, 2}, {-2, 3}, {-3, 4}, {-4, -5}}], 
           "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
           "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> RawArray["Integer16",{29, 27, 17, 13}], 
           "NumericalThresholds" -> {-0.7162206470966338, \
-0.4399051368236541, -0.6559549272060393, 0.06421571969985963}, "LeafValues" -> 
           RawArray["Real32",{-0.13299551606178284`, -0.09051121026277542, 
             0.020282505080103874`, 0.1341039091348648, 0.1169750764966011}], 
           "Children" -> 
           RawArray["Integer16",{{-1, 2}, {-2, 3}, {-3, 4}, {-4, -5}}], 
           "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
           "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> RawArray["Integer16",{34, 29, 16, 9}], 
           "NumericalThresholds" -> {-0.32824365794658655`, \
-0.17412029206752774`, 0.8065663278102876, -1.0660144686698911`}, 
           "LeafValues" -> 
           RawArray["Real32",{-0.11942104995250702`, -0.014552256092429161`, 
             0.12757033109664917`, -0.08592100441455841, 
             0.11395183205604553`}], "Children" -> 
           RawArray["Integer16",{{3, 2}, {-2, 4}, {-1, -4}, {-3, -5}}], 
           "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
           "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> RawArray["Integer16",{29, 31, 34, 32}], 
           "NumericalThresholds" -> {-0.7162206470966338, 
            0.4808083921670914, -0.07090339437127112, 0.29817010462284094`}, 
           "LeafValues" -> 
           RawArray["Real32",{-0.1292990893125534, 
             0.01839619129896164, -0.11442609131336212`, 0.12332071363925934`,
              0.11305620521306992`}], "Children" -> 
           RawArray["Integer16",{{-1, 2}, {3, -3}, {-2, 4}, {-4, -5}}], 
           "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
           "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> RawArray["Integer16",{29, 31, 9, 29}], 
           "NumericalThresholds" -> {-0.7162206470966338, 
            0.4808083921670914, -0.8781214654445647, -0.46808804571628565`}, 
           "LeafValues" -> 
           RawArray["Real32",{-0.12643414735794067`, 
             0.01744009368121624, -0.11286768317222595`, 0.12788721919059753`,
              0.11166553199291229`}], "Children" -> 
           RawArray["Integer16",{{-1, 2}, {3, -3}, {-2, 4}, {-4, -5}}], 
           "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
           "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> RawArray["Integer16",{29, 34, 6, 9, 8}], 
           "NumericalThresholds" -> {-0.7162206470966338, \
-0.07090339437127112, -0.5235299170017241, -1.0660144686698911`, \
-0.12207687646150588`}, "LeafValues" -> 
           RawArray["Real32",{-0.12387768179178238`, -0.13846032321453094`, 
             0.1216595470905304, 0.10508914291858673`, 0.11292336136102676`, 
             0.10978615283966064`}], "Children" -> 
           RawArray["Integer16",{{-1, 2}, {3, 4}, {-2, -4}, {-3, 
             5}, {-5, -6}}], "NominalSplits" -> {}, "RootIndex" -> 1, 
           "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> RawArray["Integer16",{29, 34, 1, 9, 8}], 
           "NumericalThresholds" -> {-0.7162206470966338, \
-0.07090339437127112, -0.4028110355138778, -1.0660144686698911`, \
-0.12207687646150588`}, "LeafValues" -> 
           RawArray["Real32",{-0.12158850580453873`, -0.1345672458410263, 
             0.11937744915485382`, 0.1015382632613182, 0.11155331879854202`, 
             0.10876929014921188`}], "Children" -> 
           RawArray["Integer16",{{-1, 2}, {3, 4}, {-2, -4}, {-3, 
             5}, {-5, -6}}], "NominalSplits" -> {}, "RootIndex" -> 1, 
           "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> RawArray["Integer16",{35, 5, 29, 16}], 
           "NumericalThresholds" -> {-0.4413673430681228, -0.5126285254955291,
             0.05723869614303113, 0.7977171242237092}, "LeafValues" -> 
           RawArray["Real32",{-0.1157904714345932, -0.11870315670967102`, 
             0.11305224150419235`, 
             0.11235854029655457`, -0.09018911421298981}], "Children" -> 
           RawArray["Integer16",{{4, 2}, {3, -3}, {-2, -4}, {-1, -5}}], 
           "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
           "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> RawArray["Integer16",{34, 29, 30, 9}], 
           "NumericalThresholds" -> {-0.32824365794658655`, \
-0.17412029206752774`, 0.7204766869544984, -1.0660144686698911`}, 
           "LeafValues" -> 
           RawArray["Real32",{-0.11181318759918213`, -0.016324015334248543`, 
             0.11563661694526672`, -0.07152169197797775, 0.1077110767364502}],
            "Children" -> 
           RawArray["Integer16",{{3, 2}, {-2, 4}, {-1, -4}, {-3, -5}}], 
           "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
           "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> RawArray["Integer16",{5, 29, 24, 24, 34}], 
           "NumericalThresholds" -> {-0.5126285254955291, \
-0.04099327698349952, -0.7089359760284423, 
            0.07235131785273553, -0.35274054110050196`}, "LeafValues" -> 
           RawArray["Real32",{-0.10653722286224365`, 0.11497709900140762`, 
             0.11006331443786621`, 0.02961168996989727, 
             0.04766230285167694, -0.1379576027393341}], "Children" -> 
           RawArray["Integer16",{{2, 4}, {5, 
             3}, {-3, -4}, {-2, -5}, {-1, -6}}], "NominalSplits" -> {}, 
           "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
           0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> RawArray["Integer16",{34, 29, 12, 29}], 
           "NumericalThresholds" -> {-0.32824365794658655`, \
-0.17412029206752774`, 0.04346549697220326, 0.1429199241101742}, "LeafValues" -> 
           RawArray["Real32",{-0.10989633202552795`, -0.013073205016553402`, 
             0.11295536905527115`, -0.06616002321243286, 
             0.10643433779478073`}], "Children" -> 
           RawArray["Integer16",{{3, 2}, {-2, 4}, {-1, -4}, {-3, -5}}], 
           "NominalSplits" -> {}, "RootIndex" -> 1, "NominalDimension" -> 0, 
           "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> RawArray["Integer16",{5, 29, 24, 30, 34}], 
           "NumericalThresholds" -> {-0.5126285254955291, \
-0.04099327698349952, 0.08186411112546922, 
            0.448795959353447, -0.35274054110050196`}, "LeafValues" -> 
           RawArray["Real32",{-0.10535620152950287`, 0.1136116161942482, 
             0.10811001062393188`, 0.03934968635439873, 
             0.026362543925642967`, -0.13268086314201355`}], "Children" -> 
           RawArray["Integer16",{{2, 3}, {5, 
             4}, {-2, -4}, {-3, -5}, {-1, -6}}], "NominalSplits" -> {}, 
           "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
           0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> RawArray["Integer16",{35, 32, 27, 8, 8, 14}], 
           "NumericalThresholds" -> {-0.4413673430681228, -0.5585374236106871,
             1.0659735798835757`, -0.34583151340484614`, -0.07281964644789694,
             0.05358711071312428}, "LeafValues" -> 
           RawArray["Real32",{-0.11158301681280136`, -0.05250142142176628, 
             0.11512775719165802`, -0.028054246678948402`, \
-0.08487697690725327, 0.0930250957608223, 0.10777098685503006`}], "Children" -> 
           RawArray["Integer16",{{4, 2}, {-2, 3}, {5, -4}, {-1, -5}, {
             6, -6}, {-3, -7}}], "NominalSplits" -> {}, "RootIndex" -> 1, 
           "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> RawArray["Integer16",{5, 29, 8, 24, 34}], 
           
           "NumericalThresholds" -> {-0.5126285254955291, \
-0.04099327698349952, -0.3895276486873626, -0.7089359760284423, \
-0.35274054110050196`}, "LeafValues" -> 
           RawArray["Real32",{-0.10441631078720093`, 0.03482597693800926, 
             0.10692057013511658`, 0.11166320741176605`, 
             0.022056767717003822`, -0.12736520171165466`}], "Children" -> 
           RawArray["Integer16",{{2, 3}, {5, 
             4}, {-2, -4}, {-3, -5}, {-1, -6}}], "NominalSplits" -> {}, 
           "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
           0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> RawArray["Integer16",{35, 32, 18, 8, 11, 14}], 
           "NumericalThresholds" -> {-0.4413673430681228, -0.562081605195999, 
            0.4277471452951432, -0.34583151340484614`, 
            0.024392478633672002`, -0.02941592969000339}, "LeafValues" -> 
           RawArray["Real32",{-0.10973784327507019`, -0.05886305496096611, 
             0.11348453164100647`, -0.026698686182498932`, \
-0.08180271834135056, 0.09060311317443848, 0.10627737641334534`}], "Children" -> 
           RawArray["Integer16",{{4, 2}, {-2, 3}, {5, -4}, {-1, -5}, {
             6, -6}, {-3, -7}}], "NominalSplits" -> {}, "RootIndex" -> 1, 
           "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> RawArray["Integer16",{5, 29, 8, 24, 34}], 
           "NumericalThresholds" -> {-0.5126285254955291, \
-0.04099327698349952, -0.3911967724561691, -0.7089359760284423, \
-0.35274054110050196`}, "LeafValues" -> 
           RawArray["Real32",{-0.10366936773061752`, 0.02366586960852146, 
             0.1057337075471878, 0.11040893197059631`, 
             0.02101879008114338, -0.12297266721725464`}], "Children" -> 
           RawArray["Integer16",{{2, 3}, {5, 
             4}, {-2, -4}, {-3, -5}, {-1, -6}}], "NominalSplits" -> {}, 
           "RootIndex" -> 1, "NominalDimension" -> 0, "NominalNodeNumber" -> 
           0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> RawArray["Integer16",{35, 32, 27, 11, 27, 22}], 
           "NumericalThresholds" -> {-0.46973016858100886`, \
-0.5701652467250823, 1.0659735798835757`, 
            0.024392478633672002`, -0.2851888090372085, -0.367822453379631}, 
           "LeafValues" -> 
           RawArray["Real32",{-0.10397189855575562`, -0.07271017879247665, 
             0.1134522333741188, -0.028140775859355927`, 0.08855513483285904, 
             0.10605134814977646`, -0.11126108467578888`}], "Children" -> 
           RawArray["Integer16",{{6, 2}, {-2, 3}, {4, -4}, {
             5, -5}, {-3, -6}, {-1, -7}}], "NominalSplits" -> {}, "RootIndex" -> 
           1, "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> RawArray["Integer16",{32, 35, 18, 8, 25}], 
           "NumericalThresholds" -> {-0.6218454539775847, -0.4413673430681228,
             0.4728368073701859, -0.02512277942150831, -0.5939458906650542}, 
           "LeafValues" -> 
           RawArray["Real32",{-0.11342780292034149`, -0.09453362971544266, 
             0.11571159213781357`, -0.03336937353014946, 0.08609496802091599, 
             0.10567567497491837`}], "Children" -> 
           RawArray["Integer16",{{-1, 2}, {-2, 3}, {4, -4}, {
             5, -5}, {-3, -6}}], "NominalSplits" -> {}, "RootIndex" -> 1, 
           "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> RawArray["Integer16",{29, 34, 1, 9, 26}], 
           "NumericalThresholds" -> {-0.7162206470966338, \
-0.07090339437127112, -0.34634712338447565`, -1.0681399703025816`, 
            0.12338723242282869`}, "LeafValues" -> 
           RawArray["Real32",{-0.10893383622169495`, -0.113643117249012, 
             0.10819271206855774`, 0.09730211645364761, 0.10419588536024094`, 
             0.10304237902164459`}], "Children" -> 
           RawArray["Integer16",{{-1, 2}, {3, 4}, {-2, -4}, {-3, 
             5}, {-5, -6}}], "NominalSplits" -> {}, "RootIndex" -> 1, 
           "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> RawArray["Integer16",{32, 35, 27, 13, 25}], 
           "NumericalThresholds" -> {-0.6218454539775847, \
-0.46973016858100886`, 1.0896480083465578`, 
            0.34002274274826055`, -0.53394216299057}, "LeafValues" -> 
           RawArray["Real32",{-0.11093292385339737`, -0.10543684661388397`, 
             0.11155273765325546`, -0.03464299440383911, 0.08697055280208588, 
             0.1045895591378212}], "Children" -> 
           RawArray["Integer16",{{-1, 2}, {-2, 3}, {4, -4}, {
             5, -5}, {-3, -6}}], "NominalSplits" -> {}, "RootIndex" -> 1, 
           "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> RawArray["Integer16",{29, 34, 1, 9, 26}], 
           "NumericalThresholds" -> {-0.7162206470966338, \
-0.07090339437127112, -0.34634712338447565`, -1.0681399703025816`, 
            0.12338723242282869`}, "LeafValues" -> 
           RawArray["Real32",{-0.10747520625591278`, -0.11158306896686554`, 
             0.1066892221570015, 0.09319942444562912, 0.1034330427646637, 
             0.10261109471321106`}], "Children" -> 
           RawArray["Integer16",{{-1, 2}, {3, 4}, {-2, -4}, {-3, 
             5}, {-5, -6}}], "NominalSplits" -> {}, "RootIndex" -> 1, 
           "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> RawArray["Integer16",{29, 33, 34, 14, 8}], 
           "NumericalThresholds" -> {-0.7162206470966338, \
-0.4693735390901565, -0.11785021796822547`, -0.02941592969000339, \
-0.2961102873086929}, "LeafValues" -> 
           RawArray["Real32",{-0.10676327347755432`, -0.07640589773654938, 
             0.011477680876851082`, 0.10736142843961716`, 
             0.10341144353151321`, 0.10234609246253967`}], "Children" -> 
           RawArray["Integer16",{{-1, 2}, {-2, 3}, {-3, 4}, {-4, 
             5}, {-5, -6}}], "NominalSplits" -> {}, "RootIndex" -> 1, 
           "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> RawArray["Integer16",{32, 31, 18, 5, 25}], 
           "NumericalThresholds" -> {-0.6218454539775847, 
            0.27025185525417333`, 
            0.7902031242847444, -0.5187628865242003, -0.5939458906650542}, 
           "LeafValues" -> 
           RawArray["Real32",{-0.10849190503358841`, 
             0.09182479977607727, -0.10248789936304092`, -0.07260484993457794,
              0.10978975147008896`, 0.10345059633255005`}], "Children" -> 
           RawArray["Integer16",{{-1, 2}, {3, -3}, {4, -4}, {-2, 
             5}, {-5, -6}}], "NominalSplits" -> {}, "RootIndex" -> 1, 
           "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> RawArray["Integer16",{32, 35, 27, 13, 25}], 
           "NumericalThresholds" -> {-0.6218454539775847, -0.4413673430681228,
             1.3207512497901919`, 0.3077016472816468, -0.5545605421066283}, 
           "LeafValues" -> 
           RawArray["Real32",{-0.10765363276004791`, -0.08772405982017517, 
             0.10849281400442123`, -0.04190884530544281, 0.08481846004724503, 
             0.10320941358804703`}], "Children" -> 
           RawArray["Integer16",{{-1, 2}, {-2, 3}, {4, -4}, {
             5, -5}, {-3, -6}}], "NominalSplits" -> {}, "RootIndex" -> 1, 
           "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> RawArray["Integer16",{22, 32, 35, 15, 13}], 
           "NumericalThresholds" -> {-0.6175624132156371, \
-0.5925869047641753, -0.41516472399234766`, 0.23809066414833072`, 
            0.06421571969985963}, "LeafValues" -> 
           RawArray[
             "Real32",{-0.10117218643426895`, -0.07383953034877777, \
-0.00890444777905941, 0.1051580160856247, 0.05805525183677673, 
             0.10201690346002579`}], "Children" -> 
           RawArray["Integer16",{{-1, 2}, {-2, 3}, {-3, 4}, {
             5, -5}, {-4, -6}}], "NominalSplits" -> {}, "RootIndex" -> 1, 
           "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> RawArray["Integer16",{29, 34, 1, 12, 8}], 
           "NumericalThresholds" -> {-0.7162206470966338, \
-0.07090339437127112, -0.34634712338447565`, -0.833699733018875, \
-0.24198417365550992`}, "LeafValues" -> 
           RawArray["Real32",{-0.10484801232814789`, -0.10850309580564499`, 
             0.10481563955545425`, 0.08966251462697983, 0.10247314721345901`, 
             0.10158371180295944`}], "Children" -> 
           RawArray["Integer16",{{-1, 2}, {3, 4}, {-2, -4}, {-3, 
             5}, {-5, -6}}], "NominalSplits" -> {}, "RootIndex" -> 1, 
           "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> RawArray["Integer16",{32, 35, 18, 13, 25}], 
           "NumericalThresholds" -> {-0.6218454539775847, \
-0.46973016858100886`, 0.5584549307823182, 
            0.2908651530742646, -0.5939458906650542}, "LeafValues" -> 
           RawArray["Real32",{-0.10582169145345688`, -0.10318896919488907`, 
             0.10705483704805374`, -0.04132232442498207, 0.0828619971871376, 
             0.10281946510076523`}], "Children" -> 
           RawArray["Integer16",{{-1, 2}, {-2, 3}, {4, -4}, {
             5, -5}, {-3, -6}}], "NominalSplits" -> {}, "RootIndex" -> 1, 
           "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> RawArray["Integer16",{22, 35, 32, 34, 29, 8}], 
           "NumericalThresholds" -> {-0.6822379231452941, \
-0.4413673430681228, -0.562081605195999, 
            1.0915836095809939`, -0.5305182337760924, -0.29158428311347956`}, 
           "LeafValues" -> 
           RawArray[
             "Real32",{-0.10694199800491333`, -0.08145678788423538, \
-0.017230762168765068`, 0.10454564541578293`, 0.049490343779325485`, 
             0.10227584093809128`, 0.10131923109292984`}], "Children" -> 
           RawArray["Integer16",{{-1, 2}, {-2, 3}, {-3, 4}, {5, -5}, {-4, 
             6}, {-6, -7}}], "NominalSplits" -> {}, "RootIndex" -> 1, 
           "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> RawArray["Integer16",{32, 35, 27, 13, 25}], 
           "NumericalThresholds" -> {-0.6218454539775847, \
-0.46973016858100886`, 1.5566649436950686`, 
            0.3077016472816468, -0.53394216299057}, "LeafValues" -> 
           RawArray["Real32",{-0.10500285774469376`, -0.10268238186836243`, 
             0.10574513673782349`, -0.04557615891098976, 0.07867319136857986, 
             0.10194695740938187`}], "Children" -> 
           RawArray["Integer16",{{-1, 2}, {-2, 3}, {4, -4}, {
             5, -5}, {-3, -6}}], "NominalSplits" -> {}, "RootIndex" -> 1, 
           "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> RawArray["Integer16",{29, 34, 1, 9, 8}], 
           "NumericalThresholds" -> {-0.7162206470966338, \
-0.07090339437127112, 
            0.03381138853728772, -1.0698012113571165`, -0.24198417365550992`},
            "LeafValues" -> 
           RawArray["Real32",{-0.10365854948759079`, -0.09936614334583282, 
             0.10362400859594345`, 0.1045798733830452, 0.10172048956155777`, 
             0.10111330449581146`}], "Children" -> 
           RawArray["Integer16",{{-1, 2}, {3, 4}, {-2, -4}, {-3, 
             5}, {-5, -6}}], "NominalSplits" -> {}, "RootIndex" -> 1, 
           "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> RawArray["Integer16",{29, 34, 1, 33, 8}], 
           "NumericalThresholds" -> {-0.7162206470966338, \
-0.07090339437127112, 0.03381138853728772, 
            0.5106415450572969, -0.383686289191246}, "LeafValues" -> 
           RawArray["Real32",{-0.10330915451049805`, -0.09749186038970947, 
             0.10178849846124649`, 0.10412831604480743`, 0.10358981788158417`,
              0.10114631801843643`}], "Children" -> 
           RawArray["Integer16",{{-1, 2}, {3, 4}, {-2, -4}, {
             5, -5}, {-3, -6}}], "NominalSplits" -> {}, "RootIndex" -> 1, 
           "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> RawArray["Integer16",{29, 34, 1, 33, 8}], 
           "NumericalThresholds" -> {-0.7162206470966338, \
-0.07090339437127112, 0.03381138853728772, 
            0.5106415450572969, -0.383686289191246}, "LeafValues" -> 
           RawArray["Real32",{-0.10299322754144669`, -0.09545822441577911, 
             0.10161581635475159`, 0.10372266918420792`, 0.1032477617263794, 
             0.10103615373373032`}], "Children" -> 
           RawArray["Integer16",{{-1, 2}, {3, 4}, {-2, -4}, {
             5, -5}, {-3, -6}}], "NominalSplits" -> {}, "RootIndex" -> 1, 
           "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> RawArray["Integer16",{29, 34, 3, 33, 8}], 
           "NumericalThresholds" -> {-0.7162206470966338, \
-0.07090339437127112, 0.21991491690278056`, 
            0.5106415450572969, -0.383686289191246}, "LeafValues" -> 
           RawArray["Real32",{-0.10270755738019943`, -0.10484049469232559`, 
             0.10146002471446991`, 0.08521298319101334, 0.10293834656476974`, 
             0.10093666613101959`}], "Children" -> 
           RawArray["Integer16",{{-1, 2}, {3, 4}, {-2, -4}, {
             5, -5}, {-3, -6}}], "NominalSplits" -> {}, "RootIndex" -> 1, 
           "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> RawArray["Integer16",{32, 33, 18, 13, 25}], 
           "NumericalThresholds" -> {-0.6218454539775847, -0.4693735390901565,
             1.3235757350921633`, 0.34002274274826055`, -0.5545605421066283}, 
           "LeafValues" -> 
           RawArray["Real32",{-0.10310598462820053`, -0.06390543282032013, 
             0.10370750725269318`, -0.052829310297966, 0.06757448613643646, 
             0.10133018344640732`}], "Children" -> 
           RawArray["Integer16",{{-1, 2}, {-2, 3}, {4, -4}, {
             5, -5}, {-3, -6}}], "NominalSplits" -> {}, "RootIndex" -> 1, 
           "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> RawArray["Integer16",{22, 27, 3, 34, 8}], 
           "NumericalThresholds" -> {-0.6822379231452941, \
-0.4399051368236541, -0.505446285009384, -0.16147416085004804`, \
-0.3821845799684524}, "LeafValues" -> 
           RawArray["Real32",{-0.10395199805498123`, -0.05860010161995888, 
             0.012042146176099777`, 0.10266108065843582`, 0.1012943685054779, 
             0.10072038322687149`}], "Children" -> 
           RawArray["Integer16",{{-1, 2}, {-2, 3}, {-3, 4}, {-4, 
             5}, {-5, -6}}], "NominalSplits" -> {}, "RootIndex" -> 1, 
           "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> RawArray["Integer16",{29, 34, 1, 9, 8}], 
           "NumericalThresholds" -> {-0.7162206470966338, \
-0.07090339437127112, 
            0.03381138853728772, -1.0707262754440305`, -0.2961102873086929}, 
           "LeafValues" -> 
           RawArray["Real32",{-0.10218331217765808`, -0.0930924266576767, 
             0.10225331038236618`, 0.10279425978660583`, 0.10104312747716904`,
              0.10066879540681839`}], "Children" -> 
           RawArray["Integer16",{{-1, 2}, {3, 4}, {-2, -4}, {-3, 
             5}, {-5, -6}}], "NominalSplits" -> {}, "RootIndex" -> 1, 
           "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> RawArray["Integer16",{29, 34, 1, 9, 8}], 
           "NumericalThresholds" -> {-0.7162206470966338, \
-0.07090339437127112, -0.34634712338447565`, -1.0707262754440305`, \
-0.2961102873086929}, "LeafValues" -> 
           RawArray["Real32",{-0.10197512805461884`, -0.1035090833902359, 
             0.10203833132982254`, 0.08227945864200592, 0.10094302147626877`, 
             0.10060478746891022`}], "Children" -> 
           RawArray["Integer16",{{-1, 2}, {3, 4}, {-2, -4}, {-3, 
             5}, {-5, -6}}], "NominalSplits" -> {}, "RootIndex" -> 1, 
           "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>], 
         MachineLearning`DecisionTree[<|
          "FeatureIndices" -> RawArray["Integer16",{32, 22, 33, 7, 27, 9}], 
           "NumericalThresholds" -> {-0.6218454539775847, \
-0.6094448268413543, -0.418675810098648, 
            0.20608102530241015`, -0.2851888090372085, -1.0681399703025816`}, 
           "LeafValues" -> 
           RawArray[
             "Real32",{-0.1022467091679573, -0.08208394050598145, \
-0.006372613832354546, 0.102852463722229, 0.03844644874334335, 
             0.10109571367502213`, 0.10063163191080093`}], "Children" -> 
           RawArray["Integer16",{{-1, 2}, {-2, 3}, {-3, 4}, {5, -5}, {-4, 
             6}, {-6, -7}}], "NominalSplits" -> {}, "RootIndex" -> 1, 
           "NominalDimension" -> 0, "NominalNodeNumber" -> 0|>]}, 
       "ClassNumber" -> 2, "IterationsNumber" -> 50, "Processor" -> 
       MachineLearning`MLProcessor[
        "Sequence", <|
         "Input" -> <|
           "(f1f2f3f4f5f6f7f8f9f10f11f12f13f14f15f16f17f18f19f20f21f22f23f24f2\
5f26f27f28f29f30f31f32f33f34f35)" -> <|
             "Type" -> "NumericalVector", "Weight" -> 35|>|>, 
          "Output" -> <|
           "(f1f2f3f4f5f6f7f8f9f10f11f12f13f14f15f16f17f18f19f20f21f22f23f24f2\
5f26f27f28f29f30f31f32f33f34f35)" -> <|
             "Type" -> "NumericalVector", "Weight" -> 35|>|>, "Processors" -> {
            MachineLearning`MLProcessor[
            "DensifyNumericalVector", <|
             "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
              "StructurePreserving" -> True, 
              "Input" -> <|
               "(f1f2f3f4f5f6f7f8f9f10f11f12f13f14f15f16f17f18f19f20f21f22f23f\
24f25f26f27f28f29f30f31f32f33f34f35)" -> <|
                 "Type" -> "NumericalVector", "Weight" -> 35|>|>, 
              "Version" -> {13.2, 1}, "ID" -> 1272479996199965321, 
              "Output" -> <|
               "(f1f2f3f4f5f6f7f8f9f10f11f12f13f14f15f16f17f18f19f20f21f22f23f\
24f25f26f27f28f29f30f31f32f33f34f35)" -> <|
                 "Type" -> "NumericalVector", "Weight" -> 35|>|>|>], 
            MachineLearning`MLProcessor[
            "FirstValues", <|
             "Info" -> <|"Type" -> "NumericalVector", "Weight" -> 35|>, "Key" -> 
              "(f1f2f3f4f5f6f7f8f9f10f11f12f13f14f15f16f17f18f19f20f21f22f23f2\
4f25f26f27f28f29f30f31f32f33f34f35)", "Invertibility" -> "Perfect", 
              "StructurePreserving" -> False, "Missing" -> "Allowed"|>]}, 
          "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
          "Missing" -> "Allowed"|>], "Calibrator" -> None, "Method" -> 
       "GradientBoostedTrees", "PostProcessor" -> 
       MachineLearning`MLProcessor["Identity"], 
       "Options" -> <|
        "BoostingMethod" -> <|"Value" -> "Gradient", "Options" -> <||>|>, 
         MaxTrainingRounds -> <|"Value" -> 50, "Options" -> <||>|>, 
         "LeavesNumber" -> <|"Value" -> 25, "Options" -> <||>|>, 
         "LearningRate" -> <|"Value" -> 0.1, "Options" -> <||>|>, 
         ValidationSet -> <|"Value" -> Automatic, "Options" -> <||>|>, 
         "MaxBinNumber" -> <|"Value" -> 255, "Options" -> <||>|>, 
         "ThreadNumber" -> <|"Value" -> 6, "Options" -> <||>|>, 
         "MaxDepth" -> <|"Value" -> 6, "Options" -> <||>|>, 
         "LeafSize" -> <|"Value" -> 15, "Options" -> <||>|>, 
         "FeatureFraction" -> <|"Value" -> 1, "Options" -> <||>|>, 
         "BaggingFraction" -> <|"Value" -> 1, "Options" -> <||>|>, 
         "BaggingFrequency" -> <|"Value" -> 0, "Options" -> <||>|>, 
         "MinGainToSplit" -> <|"Value" -> 0, "Options" -> <||>|>, 
         "L1Regularization" -> <|"Value" -> 0, "Options" -> <||>|>, 
         "L2Regularization" -> <|"Value" -> 0, "Options" -> <||>|>, 
         "LossFunction" -> <|"Value" -> Automatic, "Options" -> <||>|>|>|>, 
     "TrainingInformation" -> <|
      "Reporting" -> None, "TrainingFunction" -> Classify, "EMIterations" -> 
       Missing["KeyAbsent", "EMIterations"], "ProcessorEntropyShift" -> 0, 
       "PreprocessingTime" -> 2.7619466`7.892760271087781, "LossName" -> 
       "MeanCrossEntropy", "BestModelInformation" -> 
       Dataset[<|
         "MeanCrossEntropy" -> 
          Around[0.07898519180076136, 0.053646248960619806`], "Accuracy" -> 
          Around[0.9783184884935111, 0.04341116847091838], "EvaluationTime" -> 
          0.00022781237892148727`, "TestSize" -> 22, "ModelMemory" -> 119544, 
          "ModelUtility" -> 1.7179318303930928`, "Round" -> 2, "Iteration" -> 
          10, "TimeStamp" -> 3.9066986418187506`17.34438490070648*^9, 
          "TrainingSize" -> 86, "TrainingTime" -> 0.05011872336272722, 
          "TrainingMemory" -> 438808, "ExperimentCount" -> 1, 
          "MeanCrossEntropyHistory" -> {
            Around[0.07898519180076136, 0.03793362642527604]}, 
          "AccuracyHistory" -> {
            Around[0.9783184884935111, 0.030696331605018033`]}, 
          "IterationHistory" -> {10}, 
          "TimeStampHistory" -> {3.9066986418187506`17.34438490070648*^9}, 
          "Configuration" -> {
           "GradientBoostedTrees", "BoostingMethod" -> "Gradient", 
            MaxTrainingRounds -> 50, "LeavesNumber" -> 25, "LearningRate" -> 
            0.1, ValidationSet -> Automatic, "MaxBinNumber" -> 255, 
            "ThreadNumber" -> 6, "MaxDepth" -> 6, "LeafSize" -> 15, 
            "FeatureFraction" -> 1, "BaggingFraction" -> 1, 
            "BaggingFrequency" -> 0, "MinGainToSplit" -> 0, 
            "L1Regularization" -> 0, "L2Regularization" -> 0, "LossFunction" -> 
            Automatic}, "FinalTrainingSize" -> 108|>, 
         TypeSystem`Assoc[
          TypeSystem`Atom[String], TypeSystem`AnyType, 19], <||>], 
       "Configurations" -> 
       Dataset[<|<|
           "Value" -> "GradientBoostedTrees", 
            "Options" -> <|
             "BoostingMethod" -> <|"Value" -> "Gradient"|>, 
              MaxTrainingRounds -> <|"Value" -> 50|>, 
              "LeavesNumber" -> <|"Value" -> 60|>, 
              "LearningRate" -> <|"Value" -> 0.04|>, 
              ValidationSet -> <|"Value" -> Automatic|>, 
              "MaxBinNumber" -> <|"Value" -> 255|>, 
              "ThreadNumber" -> <|"Value" -> 6|>, 
              "MaxDepth" -> <|"Value" -> 6|>, "LeafSize" -> <|"Value" -> 15|>,
               "FeatureFraction" -> <|"Value" -> 1|>, 
              "BaggingFraction" -> <|"Value" -> 1|>, 
              "BaggingFrequency" -> <|"Value" -> 0|>, 
              "MinGainToSplit" -> <|"Value" -> 0|>, 
              "L1Regularization" -> <|"Value" -> 0|>, 
              "L2Regularization" -> <|"Value" -> 0|>, 
              "LossFunction" -> <|"Value" -> Automatic|>|>|> -> <|
           "Experiments" -> {<|
              "MeanCrossEntropy" -> 
               Around[0.7591354253357039, 0.05202237520882902], "Accuracy" -> 
               Around[0.5159715450569229, 0.07308888114014646], 
               "EvaluationTime" -> 0.000053891100390029246`, "TestSize" -> 93,
                "ModelMemory" -> 20912, "ModelUtility" -> -0.4312175627749545,
                "Round" -> 1, "Iteration" -> 1, "TimeStamp" -> 
               3.906698641417875`17.34438490066191*^9, "TrainingSize" -> 15, 
               "TrainingTime" -> 0.03981071705534971, "TrainingMemory" -> 
               127176, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                 Around[0.7591354253357039, 0.036785374283593936`]}, 
               "AccuracyHistory" -> {
                 Around[0.5159715450569229, 0.05168164348353512]}, 
               "IterationHistory" -> {1}, 
               "TimeStampHistory" -> {
                3.906698641417875`17.34438490066191*^9}|>, <|
              "MeanCrossEntropy" -> 
               Around[0.30202323564273953`, 0.09911027136881449], "Accuracy" -> 
               Around[0.8478837058848154, 0.10704652667627777`], 
               "EvaluationTime" -> 0.00022781237892148727`, "TestSize" -> 22, 
               "ModelMemory" -> 119016, "ModelUtility" -> 0.4404926827863036, 
               "Round" -> 2, "Iteration" -> 21, "TimeStamp" -> 
               3.9066986430661876`17.34438490084515*^9, "TrainingSize" -> 86, 
               "TrainingTime" -> 0.05011872336272722, "TrainingMemory" -> 
               428712, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                 Around[0.30202323564273953`, 0.07008154497012765]}, 
               "AccuracyHistory" -> {
                 Around[0.8478837058848154, 0.07569332491526266]}, 
               "IterationHistory" -> {21}, 
               "TimeStampHistory" -> {
                3.9066986430661876`17.34438490084515*^9}|>}, 
            "PredictedPerformances" -> <|
             "EvaluationTime" -> 0.00022781237892148727`, "MeanCrossEntropy" -> 
              Around[0.30202323564273953`, 0.09911027136881449], 
              "ModelMemory" -> 119016, "TrainingMemory" -> 428712, 
              "TrainingTime" -> 0.09393893828709511|>, "Index" -> 1|>, <|
           "Value" -> "GradientBoostedTrees", 
            "Options" -> <|
             "BoostingMethod" -> <|"Value" -> "Gradient"|>, 
              MaxTrainingRounds -> <|"Value" -> 50|>, 
              "LeavesNumber" -> <|"Value" -> 60|>, 
              "LearningRate" -> <|"Value" -> 0.004|>, 
              ValidationSet -> <|"Value" -> Automatic|>, 
              "MaxBinNumber" -> <|"Value" -> 255|>, 
              "ThreadNumber" -> <|"Value" -> 6|>, 
              "MaxDepth" -> <|"Value" -> 6|>, "LeafSize" -> <|"Value" -> 35|>,
               "FeatureFraction" -> <|"Value" -> 1|>, 
              "BaggingFraction" -> <|"Value" -> 1|>, 
              "BaggingFrequency" -> <|"Value" -> 0|>, 
              "MinGainToSplit" -> <|"Value" -> 0|>, 
              "L1Regularization" -> <|"Value" -> 0|>, 
              "L2Regularization" -> <|"Value" -> 0|>, 
              "LossFunction" -> <|"Value" -> Automatic|>|>|> -> <|
           "Experiments" -> {<|
              "MeanCrossEntropy" -> 
               Around[0.7591354253357039, 0.05202237520882902], "Accuracy" -> 
               Around[0.5159715450569229, 0.07308888114014646], 
               "EvaluationTime" -> 0.000027009531521608382`, "TestSize" -> 93,
                "ModelMemory" -> 20912, 
               "ModelUtility" -> -0.43121753589338563`, "Round" -> 1, 
               "Iteration" -> 4, "TimeStamp" -> 
               3.9066986415606714`17.344384900677788*^9, "TrainingSize" -> 15,
                "TrainingTime" -> 0.015848931924611134`, "TrainingMemory" -> 
               80752, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                 Around[0.7591354253357039, 0.036785374283593936`]}, 
               "AccuracyHistory" -> {
                 Around[0.5159715450569229, 0.05168164348353512]}, 
               "IterationHistory" -> {4}, 
               "TimeStampHistory" -> {
                3.9066986415606714`17.344384900677788*^9}|>, <|
              "MeanCrossEntropy" -> 
               Around[0.6325692048817857, 0.05284386053492474], "Accuracy" -> 
               Around[0.8044054450152501, 0.11823129557169094`], 
               "EvaluationTime" -> 0.00018095780479704407`, "TestSize" -> 22, 
               "ModelMemory" -> 115968, 
               "ModelUtility" -> -0.25179523594366104`, "Round" -> 2, 
               "Iteration" -> 14, "TimeStamp" -> 
               3.9066986426695456`17.34438490080106*^9, "TrainingSize" -> 86, 
               "TrainingTime" -> 0.03981071705534971, "TrainingMemory" -> 
               361656, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                 Around[0.6325692048817857, 0.03736625212832146]}, 
               "AccuracyHistory" -> {
                 Around[0.8044054450152501, 0.08360215084721369]}, 
               "IterationHistory" -> {14}, 
               "TimeStampHistory" -> {
                3.9066986426695456`17.34438490080106*^9}|>}, 
            "PredictedPerformances" -> <|
             "EvaluationTime" -> 0.00018095780479704407`, "MeanCrossEntropy" -> 
              Around[0.6325692048817857, 0.05284386053492474], "ModelMemory" -> 
              115968, "TrainingMemory" -> 361656, "TrainingTime" -> 
              0.05884450634438883|>, "Index" -> 2|>, <|
           "Value" -> "GradientBoostedTrees", 
            "Options" -> <|
             "BoostingMethod" -> <|"Value" -> "Gradient"|>, 
              MaxTrainingRounds -> <|"Value" -> 50|>, 
              "LeavesNumber" -> <|"Value" -> 250|>, 
              "LearningRate" -> <|"Value" -> 0.02|>, 
              ValidationSet -> <|"Value" -> Automatic|>, 
              "MaxBinNumber" -> <|"Value" -> 255|>, 
              "ThreadNumber" -> <|"Value" -> 6|>, 
              "MaxDepth" -> <|"Value" -> 6|>, "LeafSize" -> <|"Value" -> 7|>, 
              "FeatureFraction" -> <|"Value" -> 1|>, 
              "BaggingFraction" -> <|"Value" -> 1|>, 
              "BaggingFrequency" -> <|"Value" -> 0|>, 
              "MinGainToSplit" -> <|"Value" -> 0|>, 
              "L1Regularization" -> <|"Value" -> 0|>, 
              "L2Regularization" -> <|"Value" -> 0|>, 
              "LossFunction" -> <|"Value" -> Automatic|>|>|> -> <|
           "Experiments" -> {<|
              "MeanCrossEntropy" -> 
               Around[0.6086508425592143, 0.05666079227915946], "Accuracy" -> 
               Around[0.7180992046313912, 0.06580264706584096], 
               "EvaluationTime" -> 0.000053891100390029246`, "TestSize" -> 93,
                "ModelMemory" -> 115968, 
               "ModelUtility" -> -0.21512788441834496`, "Round" -> 1, 
               "Iteration" -> 5, "TimeStamp" -> 
               3.9066986415836097`17.344384900680343*^9, "TrainingSize" -> 15,
                "TrainingTime" -> 0.03162277660168379, "TrainingMemory" -> 
               309792, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                 Around[0.6086508425592143, 0.04006523044799603]}, 
               "AccuracyHistory" -> {
                 Around[0.7180992046313912, 0.04652949796028121]}, 
               "IterationHistory" -> {5}, 
               "TimeStampHistory" -> {
                3.9066986415836097`17.344384900680343*^9}|>, <|
              "MeanCrossEntropy" -> 
               Around[0.35478108961019, 0.09256015584278235], "Accuracy" -> 
               Around[0.8478837058848154, 0.10704652667627777`], 
               "EvaluationTime" -> 0.00018095780479704407`, "TestSize" -> 22, 
               "ModelMemory" -> 125888, "ModelUtility" -> 0.2921989360006866, 
               "Round" -> 2, "Iteration" -> 7, "TimeStamp" -> 
               3.9066986416804729`17.344384900691104*^9, "TrainingSize" -> 86,
                "TrainingTime" -> 0.07943282347242814, "TrainingMemory" -> 
               571736, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                 Around[0.35478108961019, 0.06544991386411503]}, 
               "AccuracyHistory" -> {
                 Around[0.8478837058848154, 0.07569332491526266]}, 
               "IterationHistory" -> {7}, 
               "TimeStampHistory" -> {
                3.9066986416804729`17.344384900691104*^9}|>}, 
            "PredictedPerformances" -> <|
             "EvaluationTime" -> 0.00018095780479704407`, "MeanCrossEntropy" -> 
              Around[0.35478108961019, 0.09256015584278235], "ModelMemory" -> 
              125888, "TrainingMemory" -> 571736, "TrainingTime" -> 
              0.11741022595190619`|>, "Index" -> 3|>, <|
           "Value" -> "GradientBoostedTrees", 
            "Options" -> <|
             "BoostingMethod" -> <|"Value" -> "Gradient"|>, 
              MaxTrainingRounds -> <|"Value" -> 50|>, 
              "LeavesNumber" -> <|"Value" -> 60|>, 
              "LearningRate" -> <|"Value" -> 0.1|>, 
              ValidationSet -> <|"Value" -> Automatic|>, 
              "MaxBinNumber" -> <|"Value" -> 255|>, 
              "ThreadNumber" -> <|"Value" -> 6|>, 
              "MaxDepth" -> <|"Value" -> 6|>, "LeafSize" -> <|"Value" -> 3|>, 
              "FeatureFraction" -> <|"Value" -> 1|>, 
              "BaggingFraction" -> <|"Value" -> 1|>, 
              "BaggingFrequency" -> <|"Value" -> 0|>, 
              "MinGainToSplit" -> <|"Value" -> 0|>, 
              "L1Regularization" -> <|"Value" -> 0|>, 
              "L2Regularization" -> <|"Value" -> 0|>, 
              "LossFunction" -> <|"Value" -> Automatic|>|>|> -> <|
           "Experiments" -> {<|
              "MeanCrossEntropy" -> 
               Around[0.6758290645540268, 0.19643868958262417`], "Accuracy" -> 
               Around[0.7819289918654342, 0.06039286248038495], 
               "EvaluationTime" -> 0.000053891100390029246`, "TestSize" -> 93,
                "ModelMemory" -> 118944, 
               "ModelUtility" -> -0.35788206037561865`, "Round" -> 1, 
               "Iteration" -> 6, "TimeStamp" -> 
               3.9066986416274922`17.344384900685217*^9, "TrainingSize" -> 15,
                "TrainingTime" -> 0.03981071705534971, "TrainingMemory" -> 
               374328, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                 Around[0.6758290645540268, 0.13890312949127276`]}, 
               "AccuracyHistory" -> {
                 Around[0.7819289918654342, 0.04270420259514682]}, 
               "IterationHistory" -> {6}, 
               "TimeStampHistory" -> {
                3.9066986416274922`17.344384900685217*^9}|>, <|
              "MeanCrossEntropy" -> 
               Around[0.29813066118200565`, 0.36410373536684293`], "Accuracy" -> 
               Around[0.9348402276239458, 0.07356564429936031], 
               "EvaluationTime" -> 0.00022781237892148727`, "TestSize" -> 22, 
               "ModelMemory" -> 130880, "ModelUtility" -> 0.2984911866441404, 
               "Round" -> 2, "Iteration" -> 19, "TimeStamp" -> 
               3.9066986429051134`17.344384900827244*^9, "TrainingSize" -> 86,
                "TrainingTime" -> 0.07943282347242814, "TrainingMemory" -> 
               689176, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                 Around[0.29813066118200565`, 0.2574602203332468]}, 
               "AccuracyHistory" -> {
                 Around[0.9348402276239458, 0.052018765946435154`]}, 
               "IterationHistory" -> {19}, 
               "TimeStampHistory" -> {
                3.9066986429051134`17.344384900827244*^9}|>}, 
            "PredictedPerformances" -> <|
             "EvaluationTime" -> 0.00022781237892148727`, "MeanCrossEntropy" -> 
              Around[0.29813066118200565`, 0.36410373536684293`], 
              "ModelMemory" -> 130880, "TrainingMemory" -> 689176, 
              "TrainingTime" -> 0.12559816640557211`|>, "Index" -> 4|>, <|
           "Value" -> "GradientBoostedTrees", 
            "Options" -> <|
             "BoostingMethod" -> <|"Value" -> "Gradient"|>, 
              MaxTrainingRounds -> <|"Value" -> 50|>, 
              "LeavesNumber" -> <|"Value" -> 250|>, 
              "LearningRate" -> <|"Value" -> 0.1|>, 
              ValidationSet -> <|"Value" -> Automatic|>, 
              "MaxBinNumber" -> <|"Value" -> 255|>, 
              "ThreadNumber" -> <|"Value" -> 6|>, 
              "MaxDepth" -> <|"Value" -> 6|>, "LeafSize" -> <|"Value" -> 90|>,
               "FeatureFraction" -> <|"Value" -> 1|>, 
              "BaggingFraction" -> <|"Value" -> 1|>, 
              "BaggingFrequency" -> <|"Value" -> 0|>, 
              "MinGainToSplit" -> <|"Value" -> 0|>, 
              "L1Regularization" -> <|"Value" -> 0|>, 
              "L2Regularization" -> <|"Value" -> 0|>, 
              "LossFunction" -> <|"Value" -> Automatic|>|>|> -> <|
           "Experiments" -> {<|
              "MeanCrossEntropy" -> 
               Around[0.7591354253357039, 0.05202237520882902], "Accuracy" -> 
               Around[0.5159715450569229, 0.07308888114014646], 
               "EvaluationTime" -> 0.00003400298559320838, "TestSize" -> 93, 
               "ModelMemory" -> 20912, "ModelUtility" -> -0.4312175428868398, 
               "Round" -> 1, "Iteration" -> 2, "TimeStamp" -> 
               3.9066986414699149`17.344384900667702*^9, "TrainingSize" -> 15,
                "TrainingTime" -> 0.015848931924611134`, "TrainingMemory" -> 
               80552, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                 Around[0.7591354253357039, 0.036785374283593936`]}, 
               "AccuracyHistory" -> {
                 Around[0.5159715450569229, 0.05168164348353512]}, 
               "IterationHistory" -> {2}, 
               "TimeStampHistory" -> {
                3.9066986414699149`17.344384900667702*^9}|>, <|
              "MeanCrossEntropy" -> 
               Around[0.7060447437340581, 0.0360419467939657], "Accuracy" -> 
               Around[0.5000576189282936, 0.14903441558367644`], 
               "EvaluationTime" -> 0.0000906937415894945, "TestSize" -> 22, 
               "ModelMemory" -> 20912, 
               "ModelUtility" -> -0.35526117808392454`, "Round" -> 2, 
               "Iteration" -> 15, "TimeStamp" -> 
               3.9066986427204098`17.344384900806713*^9, "TrainingSize" -> 86,
                "TrainingTime" -> 0.015848931924611134`, "TrainingMemory" -> 
               162232, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                 Around[0.7060447437340581, 0.02548550498517789]}, 
               "AccuracyHistory" -> {
                 Around[0.5000576189282936, 0.10538324588939167`]}, 
               "IterationHistory" -> {15}, 
               "TimeStampHistory" -> {
                3.9066986427204098`17.344384900806713*^9}|>}, 
            "PredictedPerformances" -> <|
             "EvaluationTime" -> 0.0000906937415894945, "MeanCrossEntropy" -> 
              Around[0.7060447437340581, 0.0360419467939657], "ModelMemory" -> 
              20912, "TrainingMemory" -> 162232, "TrainingTime" -> 
              0.03296577840319116|>, "Index" -> 5|>, <|
           "Value" -> "GradientBoostedTrees", 
            "Options" -> <|
             "BoostingMethod" -> <|"Value" -> "Gradient"|>, 
              MaxTrainingRounds -> <|"Value" -> 50|>, 
              "LeavesNumber" -> <|"Value" -> 60|>, 
              "LearningRate" -> <|"Value" -> 0.2|>, 
              ValidationSet -> <|"Value" -> Automatic|>, 
              "MaxBinNumber" -> <|"Value" -> 255|>, 
              "ThreadNumber" -> <|"Value" -> 6|>, 
              "MaxDepth" -> <|"Value" -> 6|>, "LeafSize" -> <|"Value" -> 35|>,
               "FeatureFraction" -> <|"Value" -> 1|>, 
              "BaggingFraction" -> <|"Value" -> 1|>, 
              "BaggingFrequency" -> <|"Value" -> 0|>, 
              "MinGainToSplit" -> <|"Value" -> 0|>, 
              "L1Regularization" -> <|"Value" -> 0|>, 
              "L2Regularization" -> <|"Value" -> 0|>, 
              "LossFunction" -> <|"Value" -> Automatic|>|>|> -> <|
           "Experiments" -> {<|
              "MeanCrossEntropy" -> 
               Around[0.7591354253357039, 0.05202237520882902], "Accuracy" -> 
               Around[0.5159715450569229, 0.07308888114014646], 
               "EvaluationTime" -> 0.000027009531521608382`, "TestSize" -> 93,
                "ModelMemory" -> 20912, 
               "ModelUtility" -> -0.43121753589338563`, "Round" -> 1, 
               "Iteration" -> 8, "TimeStamp" -> 
               3.906698641775865`17.34438490070171*^9, "TrainingSize" -> 15, 
               "TrainingTime" -> 0.015848931924611134`, "TrainingMemory" -> 
               80336, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                 Around[0.7591354253357039, 0.036785374283593936`]}, 
               "AccuracyHistory" -> {
                 Around[0.5159715450569229, 0.05168164348353512]}, 
               "IterationHistory" -> {8}, 
               "TimeStampHistory" -> {
                3.906698641775865`17.34438490070171*^9}|>, <|
              "MeanCrossEntropy" -> 
               Around[0.29093850656667153`, 0.12052055790479511`], "Accuracy" -> 
               Around[0.8478837058848154, 0.10704652667627777`], 
               "EvaluationTime" -> 0.00018095780479704407`, "TestSize" -> 22, 
               "ModelMemory" -> 115968, "ModelUtility" -> 
               0.46185612307978985`, "Round" -> 2, "Iteration" -> 16, 
               "TimeStamp" -> 3.9066986427443474`17.344384900809374*^9, 
               "TrainingSize" -> 86, "TrainingTime" -> 0.03981071705534971, 
               "TrainingMemory" -> 361416, "ExperimentCount" -> 1, 
               "MeanCrossEntropyHistory" -> {
                 Around[0.29093850656667153`, 0.08522090376686658]}, 
               "AccuracyHistory" -> {
                 Around[0.8478837058848154, 0.07569332491526266]}, 
               "IterationHistory" -> {16}, 
               "TimeStampHistory" -> {
                3.9066986427443474`17.344384900809374*^9}|>}, 
            "PredictedPerformances" -> <|
             "EvaluationTime" -> 0.00018095780479704407`, "MeanCrossEntropy" -> 
              Around[0.29093850656667153`, 0.12052055790479511`], 
              "ModelMemory" -> 115968, "TrainingMemory" -> 361416, 
              "TrainingTime" -> 0.05884450634438883|>, "Index" -> 6|>, <|
           "Value" -> "GradientBoostedTrees", 
            "Options" -> <|
             "BoostingMethod" -> <|"Value" -> "Gradient"|>, 
              MaxTrainingRounds -> <|"Value" -> 50|>, 
              "LeavesNumber" -> <|"Value" -> 25|>, 
              "LearningRate" -> <|"Value" -> 0.1|>, 
              ValidationSet -> <|"Value" -> Automatic|>, 
              "MaxBinNumber" -> <|"Value" -> 255|>, 
              "ThreadNumber" -> <|"Value" -> 6|>, 
              "MaxDepth" -> <|"Value" -> 6|>, "LeafSize" -> <|"Value" -> 15|>,
               "FeatureFraction" -> <|"Value" -> 1|>, 
              "BaggingFraction" -> <|"Value" -> 1|>, 
              "BaggingFrequency" -> <|"Value" -> 0|>, 
              "MinGainToSplit" -> <|"Value" -> 0|>, 
              "L1Regularization" -> <|"Value" -> 0|>, 
              "L2Regularization" -> <|"Value" -> 0|>, 
              "LossFunction" -> <|"Value" -> Automatic|>|>|> -> <|
           "Experiments" -> {<|
              "MeanCrossEntropy" -> 
               Around[0.7324787422699939, 0.027752434688298338`], "Accuracy" -> 
               Around[0.4840566514399016, 0.04846227838509161], 
               "EvaluationTime" -> 0.000021454433494289023`, "TestSize" -> 
               186, "ModelMemory" -> 20912., 
               "ModelUtility" -> -0.389408155849856, "Round" -> 1, 
               "Iteration" -> 13, "TimeStamp" -> 
               3.9066986419196745`17.344384900717696*^9, "TrainingSize" -> 15,
                "TrainingTime" -> 0.029424747561300875`, "TrainingMemory" -> 
               133104., "ExperimentCount" -> 2, "MeanCrossEntropyHistory" -> {
                 Around[0.7591354253357039, 0.036785374283593936`], 
                 Around[0.705822059204284, 0.007897258089673278]}, 
               "AccuracyHistory" -> {
                 Around[0.5159715450569229, 0.05168164348353512], 
                 Around[0.4521417578228803, 0.05147062030696194]}, 
               "IterationHistory" -> {9, 13}, 
               "TimeStampHistory" -> {
                3.9066986417988038`17.34438490070426*^9, 
                 3.9066986419196745`17.344384900717696*^9}|>, <|
              "MeanCrossEntropy" -> 
               Around[0.07898519180076136, 0.053646248960619806`], "Accuracy" -> 
               Around[0.9783184884935111, 0.04341116847091838], 
               "EvaluationTime" -> 0.00022781237892148727`, "TestSize" -> 22, 
               "ModelMemory" -> 119544, "ModelUtility" -> 1.7179318303930928`,
                "Round" -> 2, "Iteration" -> 10, "TimeStamp" -> 
               3.9066986418187506`17.34438490070648*^9, "TrainingSize" -> 86, 
               "TrainingTime" -> 0.05011872336272722, "TrainingMemory" -> 
               438808, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                 Around[0.07898519180076136, 0.03793362642527604]}, 
               "AccuracyHistory" -> {
                 Around[0.9783184884935111, 0.030696331605018033`]}, 
               "IterationHistory" -> {10}, 
               "TimeStampHistory" -> {
                3.9066986418187506`17.34438490070648*^9}|>}, 
            "PredictedPerformances" -> <|
             "EvaluationTime" -> 0.00022781237892148727`, "MeanCrossEntropy" -> 
              Around[0.07898519180076136, 0.053646248960619806`], 
              "ModelMemory" -> 119544, "TrainingMemory" -> 438808, 
              "TrainingTime" -> 0.08355296879304627|>, "Index" -> 7|>, <|
           "Value" -> "GradientBoostedTrees", 
            "Options" -> <|
             "BoostingMethod" -> <|"Value" -> "Gradient"|>, 
              MaxTrainingRounds -> <|"Value" -> 50|>, 
              "LeavesNumber" -> <|"Value" -> 110|>, 
              "LearningRate" -> <|"Value" -> 0.2|>, 
              ValidationSet -> <|"Value" -> Automatic|>, 
              "MaxBinNumber" -> <|"Value" -> 255|>, 
              "ThreadNumber" -> <|"Value" -> 6|>, 
              "MaxDepth" -> <|"Value" -> 6|>, "LeafSize" -> <|"Value" -> 7|>, 
              "FeatureFraction" -> <|"Value" -> 1|>, 
              "BaggingFraction" -> <|"Value" -> 1|>, 
              "BaggingFrequency" -> <|"Value" -> 0|>, 
              "MinGainToSplit" -> <|"Value" -> 0|>, 
              "L1Regularization" -> <|"Value" -> 0|>, 
              "L2Regularization" -> <|"Value" -> 0|>, 
              "LossFunction" -> <|"Value" -> Automatic|>|>|> -> <|
           "Experiments" -> {<|
              "MeanCrossEntropy" -> 
               Around[0.7608897705695441, 0.19337101273314622`], "Accuracy" -> 
               Around[0.7500140982484127, 0.06332795485798208], 
               "EvaluationTime" -> 0.00008541163814239586, "TestSize" -> 93, 
               "ModelMemory" -> 115968, "ModelUtility" -> -0.4695024014716226,
                "Round" -> 1, "Iteration" -> 3, "TimeStamp" -> 
               3.9066986414968426`17.34438490067069*^9, "TrainingSize" -> 15, 
               "TrainingTime" -> 0.05011872336272722, "TrainingMemory" -> 
               309760, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                 Around[0.7608897705695441, 0.1367339543885179]}, 
               "AccuracyHistory" -> {
                 Around[0.7500140982484127, 0.04477962631875469]}, 
               "IterationHistory" -> {3}, 
               "TimeStampHistory" -> {
                3.9066986414968426`17.34438490067069*^9}|>, <|
              "MeanCrossEntropy" -> 
               Around[0.2726449790765992, 0.3348601303283894], "Accuracy" -> 
               Around[0.934840227623946, 0.07356564429936033], 
               "EvaluationTime" -> 0.00018095780479704407`, "TestSize" -> 22, 
               "ModelMemory" -> 125168, "ModelUtility" -> 
               0.38674445022108384`, "Round" -> 2, "Iteration" -> 20, 
               "TimeStamp" -> 3.9066986429933826`17.344384900837056*^9, 
               "TrainingSize" -> 86, "TrainingTime" -> 0.0630957344480193, 
               "TrainingMemory" -> 561832, "ExperimentCount" -> 1, 
               "MeanCrossEntropyHistory" -> {
                 Around[0.2726449790765992, 0.2367818689042152]}, 
               "AccuracyHistory" -> {
                 Around[0.934840227623946, 0.05201876594643517]}, 
               "IterationHistory" -> {20}, 
               "TimeStampHistory" -> {
                3.9066986429933826`17.344384900837056*^9}|>}, 
            "PredictedPerformances" -> <|
             "EvaluationTime" -> 0.00018095780479704407`, "MeanCrossEntropy" -> 
              Around[0.2726449790765992, 0.3348601303283894], "ModelMemory" -> 
              125168, "TrainingMemory" -> 561832, "TrainingTime" -> 
              0.11826211656658808`|>, "Index" -> 8|>, <|
           "Value" -> "GradientBoostedTrees", 
            "Options" -> <|
             "BoostingMethod" -> <|"Value" -> "Gradient"|>, 
              MaxTrainingRounds -> <|"Value" -> 50|>, 
              "LeavesNumber" -> <|"Value" -> 110|>, 
              "LearningRate" -> <|"Value" -> 0.1|>, 
              ValidationSet -> <|"Value" -> Automatic|>, 
              "MaxBinNumber" -> <|"Value" -> 255|>, 
              "ThreadNumber" -> <|"Value" -> 6|>, 
              "MaxDepth" -> <|"Value" -> 6|>, "LeafSize" -> <|"Value" -> 15|>,
               "FeatureFraction" -> <|"Value" -> 1|>, 
              "BaggingFraction" -> <|"Value" -> 1|>, 
              "BaggingFrequency" -> <|"Value" -> 0|>, 
              "MinGainToSplit" -> <|"Value" -> 0|>, 
              "L1Regularization" -> <|"Value" -> 0|>, 
              "L2Regularization" -> <|"Value" -> 0|>, 
              "LossFunction" -> <|"Value" -> Automatic|>|>|> -> <|
           "Experiments" -> {<|
              "MeanCrossEntropy" -> 
               Around[0.7591354253357039, 0.05202237520882902], "Accuracy" -> 
               Around[0.5159715450569229, 0.07308888114014646], 
               "EvaluationTime" -> 0.000027009531521608382`, "TestSize" -> 93,
                "ModelMemory" -> 20912, 
               "ModelUtility" -> -0.43121753589338563`, "Round" -> 1, 
               "Iteration" -> 11, "TimeStamp" -> 
               3.9066986418777246`17.344384900713038*^9, "TrainingSize" -> 15,
                "TrainingTime" -> 0.012589254117941668`, "TrainingMemory" -> 
               80400, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                 Around[0.7591354253357039, 0.036785374283593936`]}, 
               "AccuracyHistory" -> {
                 Around[0.5159715450569229, 0.05168164348353512]}, 
               "IterationHistory" -> {11}, 
               "TimeStampHistory" -> {
                3.9066986418777246`17.344384900713038*^9}|>, <|
              "MeanCrossEntropy" -> 
               Around[0.19296913400722207`, 0.11969658527564575`], "Accuracy" -> 
               Around[0.9131010971891633, 0.07115121097614362], 
               "EvaluationTime" -> 0.00021219418754667285`, "TestSize" -> 44, 
               "ModelMemory" -> 119394.66666666666`, "ModelUtility" -> 
               0.8350882382908025, "Round" -> 2, "Iteration" -> 22, 
               "TimeStamp" -> 3.9066986431220385`17.34438490085136*^9, 
               "TrainingSize" -> 86, "TrainingTime" -> 0.05011872336272722, 
               "TrainingMemory" -> 435848., "ExperimentCount" -> 2, 
               "MeanCrossEntropyHistory" -> {
                 Around[0.07898519180076136, 0.03793362642527604], 
                 Around[0.3069530762136828, 0.13588829029771057`]}, 
               "AccuracyHistory" -> {
                 Around[0.9783184884935111, 0.030696331605018033`], 
                 Around[0.8478837058848154, 0.07569332491526266]}, 
               "IterationHistory" -> {17, 22}, 
               "TimeStampHistory" -> {
                3.9066986427954068`17.344384900815047*^9, 
                 3.9066986431220385`17.34438490085136*^9}|>}, 
            "PredictedPerformances" -> <|
             "EvaluationTime" -> 0.00021219418754667285`, "MeanCrossEntropy" -> 
              Around[0.19296913400722207`, 0.11969658527564575`], 
              "ModelMemory" -> 119394.66666666666`, "TrainingMemory" -> 
              435848., "TrainingTime" -> 0.06671747534968707|>, "Index" -> 
            9|>, <|"Value" -> "GradientBoostedTrees", 
            "Options" -> <|
             "BoostingMethod" -> <|"Value" -> "Gradient"|>, 
              MaxTrainingRounds -> <|"Value" -> 50|>, 
              "LeavesNumber" -> <|"Value" -> 60|>, 
              "LearningRate" -> <|"Value" -> 0.04|>, 
              ValidationSet -> <|"Value" -> Automatic|>, 
              "MaxBinNumber" -> <|"Value" -> 255|>, 
              "ThreadNumber" -> <|"Value" -> 6|>, 
              "MaxDepth" -> <|"Value" -> 6|>, "LeafSize" -> <|"Value" -> 35|>,
               "FeatureFraction" -> <|"Value" -> 1|>, 
              "BaggingFraction" -> <|"Value" -> 1|>, 
              "BaggingFrequency" -> <|"Value" -> 0|>, 
              "MinGainToSplit" -> <|"Value" -> 0|>, 
              "L1Regularization" -> <|"Value" -> 0|>, 
              "L2Regularization" -> <|"Value" -> 0|>, 
              "LossFunction" -> <|"Value" -> Automatic|>|>|> -> <|
           "Experiments" -> {<|
              "MeanCrossEntropy" -> 
               Around[0.7591354253357039, 0.05202237520882902], "Accuracy" -> 
               Around[0.5159715450569229, 0.07308888114014646], 
               "EvaluationTime" -> 0.000021454433494289023`, "TestSize" -> 93,
                "ModelMemory" -> 20912, "ModelUtility" -> -0.4312175303382876,
                "Round" -> 1, "Iteration" -> 12, "TimeStamp" -> 
               3.9066986418977332`17.34438490071526*^9, "TrainingSize" -> 15, 
               "TrainingTime" -> 0.015848931924611134`, "TrainingMemory" -> 
               80400, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                 Around[0.7591354253357039, 0.036785374283593936`]}, 
               "AccuracyHistory" -> {
                 Around[0.5159715450569229, 0.05168164348353512]}, 
               "IterationHistory" -> {12}, 
               "TimeStampHistory" -> {
                3.9066986418977332`17.34438490071526*^9}|>, <|
              "MeanCrossEntropy" -> 
               Around[0.4382234929802379, 0.11787930074345872`], "Accuracy" -> 
               Around[0.8044054450152501, 0.11823129557169094`], 
               "EvaluationTime" -> 0.0002867987929455423, "TestSize" -> 22, 
               "ModelMemory" -> 115968, "ModelUtility" -> 0.07943344646036765,
                "Round" -> 2, "Iteration" -> 18, "TimeStamp" -> 
               3.9066986428532522`17.34438490082148*^9, "TrainingSize" -> 86, 
               "TrainingTime" -> 0.03981071705534971, "TrainingMemory" -> 
               361624, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                 Around[0.4382234929802379, 0.08335325291722809]}, 
               "AccuracyHistory" -> {
                 Around[0.8044054450152501, 0.08360215084721369]}, 
               "IterationHistory" -> {18}, 
               "TimeStampHistory" -> {
                3.9066986428532522`17.34438490082148*^9}|>}, 
            "PredictedPerformances" -> <|
             "EvaluationTime" -> 0.0002867987929455423, "MeanCrossEntropy" -> 
              Around[0.4382234929802379, 0.11787930074345872`], "ModelMemory" -> 
              115968, "TrainingMemory" -> 361624, "TrainingTime" -> 
              0.05884450634438883|>, "Index" -> 10|>|>, 
         TypeSystem`Assoc[
          TypeSystem`Struct[{"Value", "Options"}, {
            TypeSystem`Atom[
             TypeSystem`Enumeration["GradientBoostedTrees"]], 
            TypeSystem`Assoc[TypeSystem`AnyType, 
             TypeSystem`Struct[{"Value"}, {TypeSystem`AnyType}], 16]}], 
          
          TypeSystem`Struct[{
           "Experiments", "PredictedPerformances", "Index"}, {
            TypeSystem`Vector[
             
             TypeSystem`Struct[{
              "MeanCrossEntropy", "Accuracy", "EvaluationTime", "TestSize", 
               "ModelMemory", "ModelUtility", "Round", "Iteration", 
               "TimeStamp", "TrainingSize", "TrainingTime", "TrainingMemory", 
               "ExperimentCount", "MeanCrossEntropyHistory", 
               "AccuracyHistory", "IterationHistory", "TimeStampHistory"}, {
              TypeSystem`AnyType, TypeSystem`AnyType, 
               TypeSystem`Atom[Real], 
               TypeSystem`Atom[Integer], 
               TypeSystem`Atom[Real], 
               TypeSystem`Atom[Real], 
               TypeSystem`Atom[Integer], 
               TypeSystem`Atom[Integer], 
               TypeSystem`Atom[Real], 
               TypeSystem`Atom[Integer], 
               TypeSystem`Atom[Real], 
               TypeSystem`Atom[Real], 
               TypeSystem`Atom[Integer], 
               TypeSystem`Vector[TypeSystem`AnyType, TypeSystem`AnyLength], 
               TypeSystem`Vector[TypeSystem`AnyType, TypeSystem`AnyLength], 
               TypeSystem`Vector[
                TypeSystem`Atom[Integer], TypeSystem`AnyLength], 
               TypeSystem`Vector[
                TypeSystem`Atom[Real], TypeSystem`AnyLength]}], 2], 
            
            TypeSystem`Struct[{
             "EvaluationTime", "MeanCrossEntropy", "ModelMemory", 
              "TrainingMemory", "TrainingTime"}, {
              TypeSystem`Atom[Real], TypeSystem`AnyType, 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Real]}], 
            TypeSystem`Atom[Integer]}], 10], <||>], 
       "TrainingSizes" -> {15, 86}, "MaxTrainingSize" -> 108, 
       "PreprocessorEvaluationTime" -> 8.3671875*^-6, "PreprocessorMemory" -> 
       260792, "InputDimension" -> 35, "OutputDimension" -> 1, 
       "BaselineLogProbability" -> -0.6905002161617066, "VariableBudget" -> 
       True, "CheckpointingInfo" -> <|"Checkpointing" -> False|>, "UserStop" -> 
       False, "NaturalStop" -> True, "AbortStop" -> False, 
       "LastReportingTime" -> 3.9066986433800414`17.344384900880044*^9, 
       "RoundPartitioning" -> 
       Dataset[{<|
          "TrainingSizes" -> 15, "TimeBudgets" -> 0.5661272423884002, 
           "ElapsedTimes" -> 1.0733688, "ExperimentCounts" -> 11|>, <|
          "TrainingSizes" -> 86, "TimeBudgets" -> 0.8087532034120003, 
           "ElapsedTimes" -> 0.8398022, "ExperimentCounts" -> 11|>}, 
         TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "TrainingSizes", "TimeBudgets", "ElapsedTimes", 
            "ExperimentCounts"}, {
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Integer]}], 2], <||>]|>, "AnomalyDetector" -> 
     None, "Log" -> <|
      "Example" -> 
       MachineLearning`MLDataset[<|
         "f1" -> <|
           "Type" -> "Numerical", "Weight" -> 1, "Values" -> {27.3}, "ID" -> 
            3361736597150152620|>, 
          "f2" -> <|
           "Type" -> "Numerical", "Weight" -> 1, "Values" -> {36.8}, "ID" -> 
            7791000776415961216|>, 
          "f3" -> <|
           "Type" -> "Numerical", "Weight" -> 1, "Values" -> {2}, "ID" -> 
            7471635591837465013|>, 
          "f4" -> <|
           "Type" -> "Numerical", "Weight" -> 1, 
            "Values" -> {9.499999999999996}, "ID" -> 1871934678066509046|>, 
          "f5" -> <|
           "Type" -> "Numerical", "Weight" -> 1, 
            "Values" -> {9.499999999999996}, "ID" -> 2970350396350214129|>, 
          "f6" -> <|
           "Type" -> "Numerical", "Weight" -> 1, 
            "Values" -> {9.499999999999996}, "ID" -> 6769000167675608711|>, 
          "f7" -> <|
           "Type" -> "Numerical", "Weight" -> 1, 
            "Values" -> {29.199014843483916`}, "ID" -> 1550773774924340044|>, 
          "f8" -> <|
           "Type" -> "Numerical", "Weight" -> 1, 
            "Values" -> {10.400000000000002`}, "ID" -> 4268274903870089393|>, 
          "f9" -> <|
           "Type" -> "Numerical", "Weight" -> 1, "Values" -> {93.8}, "ID" -> 
            3576477033592387790|>, 
          "f10" -> <|
           "Type" -> "Numerical", "Weight" -> 1, "Values" -> {3}, "ID" -> 
            837637516579522904|>, 
          "f11" -> <|
           "Type" -> "Numerical", "Weight" -> 1, 
            "Values" -> {8.899999999999999}, "ID" -> 274195395572906874|>, 
          "f12" -> <|
           "Type" -> "Numerical", "Weight" -> 1, "Values" -> {74.5}, "ID" -> 
            3125870414610084761|>, 
          "f13" -> <|
           "Type" -> "Numerical", "Weight" -> 1, "Values" -> {41.7}, "ID" -> 
            6841835405318070221|>, 
          "f14" -> <|
           "Type" -> "Numerical", "Weight" -> 1, 
            "Values" -> {46.38620484583752}, "ID" -> 5646877401752303067|>, 
          "f15" -> <|
           "Type" -> "Numerical", "Weight" -> 1, 
            "Values" -> {12.500000000000004`}, "ID" -> 3550613501105575460|>, 
          "f16" -> <|
           "Type" -> "Numerical", "Weight" -> 1, 
            "Values" -> {396.40000000000003`}, "ID" -> 921979950029442881|>, 
          "f17" -> <|
           "Type" -> "Numerical", "Weight" -> 1, "Values" -> {5}, "ID" -> 
            124951178130735326|>, 
          "f18" -> <|
           "Type" -> "Numerical", "Weight" -> 1, "Values" -> {8.}, "ID" -> 
            1971816392997154316|>, 
          "f19" -> <|
           "Type" -> "Numerical", "Weight" -> 1, "Values" -> {299.1}, "ID" -> 
            1512250115311945429|>, 
          "f20" -> <|
           "Type" -> "Numerical", "Weight" -> 1, 
            "Values" -> {95.97500000000001}, "ID" -> 900834101743019479|>, 
          "f21" -> <|
           "Type" -> "Numerical", "Weight" -> 1, 
            "Values" -> {137.64622225110284`}, "ID" -> 2663308431190604298|>, 
          "f22" -> <|
           "Type" -> "Numerical", "Weight" -> 1, 
            "Values" -> {5.300000000000001}, "ID" -> 7688233548282973127|>, 
          "f23" -> <|
           "Type" -> "Numerical", "Weight" -> 1, 
            "Values" -> {344.40000000000003`}, "ID" -> 1945976700479238805|>, 
          "f24" -> <|
           "Type" -> "Numerical", "Weight" -> 1, "Values" -> {6}, "ID" -> 
            5621345997185365717|>, 
          "f25" -> <|
           "Type" -> "Numerical", "Weight" -> 1, 
            "Values" -> {7.299999999999997}, "ID" -> 4985743949459435910|>, 
          "f26" -> <|
           "Type" -> "Numerical", "Weight" -> 1, 
            "Values" -> {236.00000000000006`}, "ID" -> 3950700512008237161|>, 
          "f27" -> <|
           "Type" -> "Numerical", "Weight" -> 1, 
            "Values" -> {67.82000000000001}, "ID" -> 2710640854727856092|>, 
          "f28" -> <|
           "Type" -> "Numerical", "Weight" -> 1, 
            "Values" -> {95.48095097976353}, "ID" -> 7493249357649857508|>, 
          "f29" -> <|
           "Type" -> "Numerical", "Weight" -> 1, 
            "Values" -> {5.400000000000002}, "ID" -> 4529002213904827297|>, 
          "f30" -> <|
           "Type" -> "Numerical", "Weight" -> 1, 
            "Values" -> {146.10000000000002`}, "ID" -> 2459280541508353853|>, 
          "f31" -> <|
           "Type" -> "Numerical", "Weight" -> 1, "Values" -> {6}, "ID" -> 
            4911455155302610795|>, 
          "f32" -> <|
           "Type" -> "Numerical", "Weight" -> 1, 
            "Values" -> {6.600000000000001}, "ID" -> 2611996353135035797|>, 
          "f33" -> <|
           "Type" -> "Numerical", "Weight" -> 1, 
            "Values" -> {58.20000000000003}, "ID" -> 2059918124368005514|>, 
          "f34" -> <|
           "Type" -> "Numerical", "Weight" -> 1, 
            "Values" -> {28.140000000000004`}, "ID" -> 2876406154796192695|>, 
          "f35" -> <|
           "Type" -> "Numerical", "Weight" -> 1, 
            "Values" -> {23.12959143608033}, "ID" -> 
            8287093896611671235|>|>, <|
         "ExampleNumber" -> 1, "ExampleWeights" -> 1, "LogDensityRatios" -> 0,
           "RawExample" -> False|>], "TrainingTime" -> 3.5108307, 
       "MaxTrainingMemory" -> 77911368, "DataMemory" -> 595200, 
       "FunctionMemory" -> 664632, "LanguageVersion" -> {13.2, 1}, "Date" -> 
       DateObject[{2023, 10, 19, 10, 4, 3.4588296`8.29150414790569}, 
         "Instant", "Gregorian", 2.], "ProcessorCount" -> 6, "ProcessorType" -> 
       "x86-64", "OperatingSystem" -> "Windows", "SystemWordLength" -> 64, 
       "Evaluations" -> {}|>|>]]]], "Output",
 CellChangeTimes->{3.904959051730801*^9, 3.9049844504243555`*^9, 
  3.9052275439477596`*^9, 3.9065135690745883`*^9, 3.906685458080888*^9, 
  3.9066914453726068`*^9},
 CellLabel->"Out[40]=",ExpressionUUID->"631136f2-5afe-4492-917b-7bdf35dad74a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Count", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"myClassifier01", "[", 
      RowBox[{"datasetPyr", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "@", "datasetPyr"}]}], "}"}]}], "]"}], ",", 
   "\"\<pyr\>\""}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Count", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"myClassifier01", "[", 
      RowBox[{"datasetInt", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "@", "datasetInt"}]}], "}"}]}], "]"}], ",", 
   "\"\<int\>\""}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Count", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"myClassifier01", "[", 
      RowBox[{"datasetIntSim", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "@", "datasetIntSim"}]}], "}"}]}], "]"}], ",", 
   "\"\<int\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.9043048259922743`*^9, 3.9043048423961287`*^9}, {
  3.9043048958569126`*^9, 3.9043048973347254`*^9}, {3.9043049696564207`*^9, 
  3.9043050193830495`*^9}, {3.904305075159127*^9, 3.904305076744747*^9}, {
  3.9043051073241997`*^9, 3.904305108499816*^9}, {3.9043051396229916`*^9, 
  3.904305171049389*^9}, {3.9047226455085773`*^9, 3.904722646721096*^9}, {
  3.9047232744490223`*^9, 3.904723275763178*^9}, {3.9048203486319494`*^9, 
  3.9048203526430235`*^9}, {3.904820428201056*^9, 3.9048204297583685`*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"a2d8fd1d-4622-433a-a893-cd0a1aba9fa6"],

Cell[BoxData["58"], "Output",
 CellChangeTimes->{
  3.904304844727463*^9, 3.9043048984751687`*^9, 3.9043049735849543`*^9, 
   3.9043050208608627`*^9, 3.904305077866049*^9, 3.904305109957649*^9, {
   3.9043051430559177`*^9, 3.9043051722062163`*^9}, 3.9047226584060736`*^9, 
   3.904723229067524*^9, 3.904723283169479*^9, {3.9048203431500344`*^9, 
   3.9048203542049646`*^9}, 3.9048204313687153`*^9, 3.9048301361001754`*^9, 
   3.9048317114295063`*^9, 3.9048777152289543`*^9, 3.904901792058679*^9, 
   3.90491665796612*^9, 3.90491817198997*^9, 3.904921113881927*^9, 
   3.904984455087358*^9, 3.9052275498105464`*^9, 3.9065135697141914`*^9, 
   3.9066854586486874`*^9, 3.9066914461768208`*^9},
 CellLabel->"Out[41]=",ExpressionUUID->"87baafa1-51ce-4ee6-af6b-58ba68356874"],

Cell[BoxData["26"], "Output",
 CellChangeTimes->{
  3.904304844727463*^9, 3.9043048984751687`*^9, 3.9043049735849543`*^9, 
   3.9043050208608627`*^9, 3.904305077866049*^9, 3.904305109957649*^9, {
   3.9043051430559177`*^9, 3.9043051722062163`*^9}, 3.9047226584060736`*^9, 
   3.904723229067524*^9, 3.904723283169479*^9, {3.9048203431500344`*^9, 
   3.9048203542049646`*^9}, 3.9048204313687153`*^9, 3.9048301361001754`*^9, 
   3.9048317114295063`*^9, 3.9048777152289543`*^9, 3.904901792058679*^9, 
   3.90491665796612*^9, 3.90491817198997*^9, 3.904921113881927*^9, 
   3.904984455087358*^9, 3.9052275498105464`*^9, 3.9065135697141914`*^9, 
   3.9066854586486874`*^9, 3.906691446504644*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"233bd85b-3c9e-441c-94a4-8787ea8efeaf"],

Cell[BoxData["24"], "Output",
 CellChangeTimes->{
  3.904304844727463*^9, 3.9043048984751687`*^9, 3.9043049735849543`*^9, 
   3.9043050208608627`*^9, 3.904305077866049*^9, 3.904305109957649*^9, {
   3.9043051430559177`*^9, 3.9043051722062163`*^9}, 3.9047226584060736`*^9, 
   3.904723229067524*^9, 3.904723283169479*^9, {3.9048203431500344`*^9, 
   3.9048203542049646`*^9}, 3.9048204313687153`*^9, 3.9048301361001754`*^9, 
   3.9048317114295063`*^9, 3.9048777152289543`*^9, 3.904901792058679*^9, 
   3.90491665796612*^9, 3.90491817198997*^9, 3.904921113881927*^9, 
   3.904984455087358*^9, 3.9052275498105464`*^9, 3.9065135697141914`*^9, 
   3.9066854586486874`*^9, 3.9066914467898827`*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"415b423e-a48f-4634-81d3-76297cfe3442"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"myClassifier01", "[", 
    RowBox[{"datasetIntSim", "[", 
     RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", 
     RowBox[{"Length", "@", "datasetIntSim"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{3.904917068920867*^9},
 CellLabel->"In[44]:=",ExpressionUUID->"67ae60d7-878e-42e0-9998-a9c58a2f6d15"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"int\"\>", ",", "\<\"int\"\>", ",", "\<\"int\"\>", 
   ",", "\<\"int\"\>", ",", "\<\"int\"\>", ",", "\<\"int\"\>", 
   ",", "\<\"int\"\>", ",", "\<\"int\"\>", ",", "\<\"int\"\>", 
   ",", "\<\"int\"\>", ",", "\<\"int\"\>", ",", "\<\"int\"\>", 
   ",", "\<\"int\"\>", ",", "\<\"int\"\>", ",", "\<\"int\"\>", 
   ",", "\<\"int\"\>", ",", "\<\"int\"\>", ",", "\<\"int\"\>", 
   ",", "\<\"int\"\>", ",", "\<\"int\"\>", ",", "\<\"int\"\>", 
   ",", "\<\"int\"\>", ",", "\<\"int\"\>", ",", "\<\"int\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.9049170696918335`*^9, 3.904918175169715*^9, 
  3.9049211166917076`*^9, 3.9049844570465155`*^9, 3.906513570599471*^9, 
  3.9066854593845024`*^9, 3.90669144717321*^9},
 CellLabel->"Out[44]=",ExpressionUUID->"d86efcec-4bcd-4a45-85a6-a3d0c0f04faf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"myClassifier01", "[", 
    RowBox[{"Values", "@", 
     RowBox[{"datasetIntSim", "[", 
      RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", 
     RowBox[{"Length", "@", "datasetIntSim"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.904917080455143*^9, 3.9049170817391777`*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"20640db2-e85e-4673-863b-e9a651a2c7c4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"int\"\>", ",", "\<\"int\"\>", ",", "\<\"int\"\>", 
   ",", "\<\"int\"\>", ",", "\<\"int\"\>", ",", "\<\"int\"\>", 
   ",", "\<\"int\"\>", ",", "\<\"int\"\>", ",", "\<\"int\"\>", 
   ",", "\<\"int\"\>", ",", "\<\"int\"\>", ",", "\<\"int\"\>", 
   ",", "\<\"int\"\>", ",", "\<\"int\"\>", ",", "\<\"int\"\>", 
   ",", "\<\"int\"\>", ",", "\<\"int\"\>", ",", "\<\"int\"\>", 
   ",", "\<\"int\"\>", ",", "\<\"int\"\>", ",", "\<\"int\"\>", 
   ",", "\<\"int\"\>", ",", "\<\"int\"\>", ",", "\<\"int\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.904917082710173*^9, 3.904918176462654*^9, 
  3.9049211183138094`*^9, 3.9049844592535744`*^9, 3.9065135708567843`*^9, 
  3.9066854596175394`*^9, 3.906691447519906*^9},
 CellLabel->"Out[45]=",ExpressionUUID->"dc7d53f8-c431-4e0f-83ed-3174b5d5a15c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cm", "=", 
  RowBox[{"ClassifierMeasurements", "[", 
   RowBox[{"myClassifier01", ",", "trainigPyr", ",", 
    RowBox[{"{", 
     RowBox[{"\"\<Accuracy\>\"", ",", "\"\<ConfusionMatrixPlot\>\""}], 
     "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.90472270812766*^9, 3.9047227195711727`*^9}, {
   3.9047228085415635`*^9, 3.904722832860896*^9}, 3.904723236917505*^9, 
   3.904723276721299*^9, 3.9048204355346127`*^9},
 CellLabel->"In[46]:=",ExpressionUUID->"31407827-4b89-4010-a46a-6482d79cc762"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.`", ",", 
   GraphicsBox[
    RasterBox[{{{1., 1., 1.}, {1., 0.42, 0.}}, {{1., 1., 1.}, {1., 1., 
     1.}}}, {{0, 0}, {2, 2}}, {0, 1}],
    Epilog->{{
       TagBox[
        TooltipBox[
         InsetBox[
          GraphicsBox[{
            Opacity[1.], 
            InsetBox[
             FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 10], 
            Opacity[0.], 
            RectangleBox[{0, 0}, {1, 1}]}], {0.5, 1.5}, Automatic, {1., 1.}], 
         TagBox[
          GridBox[{{
             
             TemplateBox[{
              "0", "\" example of \"", "\"int\"", 
               "\" correctly classified\""}, "RowDefault"]}, {
             TemplateBox[{"\"Precision = \"", "0.`"}, "RowDefault"]}, {
             TemplateBox[{"\"Recall = \"", "0.`"}, "RowDefault"]}, {
             TemplateBox[{"\"FScore = \"", "0.`"}, "RowDefault"]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
           "Column", 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
         Annotation[#, 
         Column[{
           Row[{0, " example of ", "int", " correctly classified"}], 
           Row[{"Precision = ", 0.}], 
           Row[{"Recall = ", 0.}], 
           Row[{"FScore = ", 0.}]}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         InsetBox[
          GraphicsBox[{
            Opacity[1.], 
            InsetBox[
             FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 10], 
            Opacity[0.], 
            RectangleBox[{0, 0}, {1, 1}]}], {0.5, 0.5}, Automatic, {1., 1.}], 
         TagBox[
          GridBox[{{
             
             TemplateBox[{
              "0", "\" example of \"", "\"pyr\"", "\" misclassified as \"", 
               "\"int\""}, "RowDefault"]}, {
             TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
             TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
           "Column", 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
         Annotation[#, 
         Column[{
           Row[{0, " example of ", "pyr", " misclassified as ", "int"}], 
           Row[{"Column fraction = ", 0.}], 
           Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ]}, {
       TagBox[
        TooltipBox[
         InsetBox[
          GraphicsBox[{
            Opacity[1.], 
            InsetBox[
             FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 10], 
            Opacity[0.], 
            RectangleBox[{0, 0}, {1, 1}]}], {1.5, 1.5}, Automatic, {1., 1.}], 
         TagBox[
          GridBox[{{
             
             TemplateBox[{
              "0", "\" example of \"", "\"int\"", "\" misclassified as \"", 
               "\"pyr\""}, "RowDefault"]}, {
             TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
             TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
           "Column", 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
         Annotation[#, 
         Column[{
           Row[{0, " example of ", "int", " misclassified as ", "pyr"}], 
           Row[{"Column fraction = ", 0.}], 
           Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         InsetBox[
          GraphicsBox[{
            Opacity[1.], 
            InsetBox[
             FormBox["58", TraditionalForm], {0.5, 0.5}, BaseStyle -> 10], 
            Opacity[0.], 
            RectangleBox[{0, 0}, {1, 1}]}], {1.5, 0.5}, Automatic, {1., 1.}], 
         TagBox[
          GridBox[{{
             
             TemplateBox[{
              "58", "\" examples of \"", "\"pyr\"", 
               "\" correctly classified\""}, "RowDefault"]}, {
             TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}, {
             TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}, {
             TemplateBox[{"\"FScore = \"", "1.`"}, "RowDefault"]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
           "Column", 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
         Annotation[#, 
         Column[{
           Row[{58, " examples of ", "pyr", " correctly classified"}], 
           Row[{"Precision = ", 1.}], 
           Row[{"Recall = ", 1.}], 
           Row[{"FScore = ", 1.}]}], "Tooltip"]& ]}, 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[{
           Opacity[0.], 
           RectangleBox[{0, 0}, {1, 1}]}], {2.5, 1.5}, Automatic, {10., 1.}], 
        TagBox[
         GridBox[{{
            
            TemplateBox[{
             "0", "\" example\"", "\"\"", "\" of class \"", "\"int\""}, 
             "RowDefault"]}, {
            TemplateBox[{"\"Recall = \"", "0.`"}, "RowDefault"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
       Annotation[#, 
        Column[{
          Row[{0, " example", "", " of class ", "int"}], 
          Row[{"Recall = ", 0.}]}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[{
           Opacity[0.], 
           RectangleBox[{0, 0}, {1, 1}]}], {2.5, 0.5}, Automatic, {10., 1.}], 
        TagBox[
         GridBox[{{
            
            TemplateBox[{
             "58", "\" example\"", "\"s\"", "\" of class \"", "\"pyr\""}, 
             "RowDefault"]}, {
            TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
       Annotation[#, 
        Column[{
          Row[{58, " example", "s", " of class ", "pyr"}], 
          Row[{"Recall = ", 1.}]}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[{
           Opacity[0.], 
           RectangleBox[{0, 0}, {1, 1}]}], {0.5, -0.5}, Automatic, {1., 10.}], 
        TagBox[
         GridBox[{{
            
            TemplateBox[{
             "0", "\" example\"", "\"\"", "\" classified as \"", "\"int\""}, 
             "RowDefault"]}, {
            TemplateBox[{"\"Precision = \"", "0.`"}, "RowDefault"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
       Annotation[#, 
        Column[{
          Row[{0, " example", "", " classified as ", "int"}], 
          Row[{"Precision = ", 0.}]}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[{
           Opacity[0.], 
           RectangleBox[{0, 0}, {1, 1}]}], {1.5, -0.5}, Automatic, {1., 10.}], 
        TagBox[
         GridBox[{{
            
            TemplateBox[{
             "58", "\" example\"", "\"s\"", "\" classified as \"", "\"pyr\""},
              "RowDefault"]}, {
            TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
       Annotation[#, 
        Column[{
          Row[{58, " example", "s", " classified as ", "pyr"}], 
          Row[{"Precision = ", 1.}]}], "Tooltip"]& ]},
    Frame->True,
    FrameLabel->{
      FormBox["\"predicted class\"", TraditionalForm], 
      FormBox["\"actual class\"", TraditionalForm]},
    FrameTicks->{{{{1.5, 
         FormBox[
          RotationBox["\"int\"", BoxRotation -> 0.], TraditionalForm]}, {0.5, 
         FormBox[
          RotationBox["\"pyr\"", BoxRotation -> 0.], TraditionalForm]}}, {{
        1.5, 
         FormBox["0", TraditionalForm]}, {0.5, 
         FormBox["58", TraditionalForm]}}}, {{{0.5, 
         FormBox[
          RotationBox["0", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {1.5, 
         FormBox[
          RotationBox["58", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}}, {{0.5, 
         FormBox[
          RotationBox["\"int\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {1.5, 
         FormBox[
          RotationBox["\"pyr\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}}}},
    FrameTicksStyle->13,
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->181.2,
    Method->{
     "GridLinesInFront" -> True, "AxisPadding" -> Scaled[0.02], 
      "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
      "RangePadding" -> Scaled[0.05]},
    PlotRangePadding->None]}], "}"}]], "Output",
 CellChangeTimes->{
  3.904722833802909*^9, {3.9047232298663883`*^9, 3.904723237432168*^9}, 
   3.9047232839865894`*^9, 3.904820359074238*^9, 3.9048204379000044`*^9, 
   3.9048301386168776`*^9, 3.9048317147699933`*^9, 3.9048777173449073`*^9, 
   3.9049017952326374`*^9, 3.904916658760624*^9, 3.904918201922224*^9, 
   3.9049211195671597`*^9, 3.9049844605604053`*^9, 3.9065135710112*^9, 
   3.906685459759161*^9, 3.906691447707404*^9},
 CellLabel->"Out[46]=",ExpressionUUID->"6e5edd5d-190b-4f8b-b759-415bd82df3a4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClassifierMeasurements", "[", 
  RowBox[{"myClassifier01", ",", "trainigInt", ",", 
   RowBox[{"{", 
    RowBox[{"\"\<Accuracy\>\"", ",", "\"\<ConfusionMatrixPlot\>\""}], "}"}]}],
   "]"}]], "Input",
 CellChangeTimes->{{3.9047228574002924`*^9, 3.904722863587262*^9}, 
   3.9047232781166315`*^9, 3.9048204364984465`*^9},
 CellLabel->"In[47]:=",ExpressionUUID->"7564dd65-c7ef-4ad0-ba99-14167def1a02"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.`", ",", 
   GraphicsBox[
    RasterBox[{{{1., 1., 1.}, {1., 1., 1.}}, {{1., 0.42, 0.}, {1., 1., 
     1.}}}, {{0, 0}, {2, 2}}, {0, 1}],
    Epilog->{{
       TagBox[
        TooltipBox[
         InsetBox[
          GraphicsBox[{
            Opacity[1.], 
            InsetBox[
             FormBox["26", TraditionalForm], {0.5, 0.5}, BaseStyle -> 10], 
            Opacity[0.], 
            RectangleBox[{0, 0}, {1, 1}]}], {0.5, 1.5}, Automatic, {1., 1.}], 
         TagBox[
          GridBox[{{
             
             TemplateBox[{
              "26", "\" examples of \"", "\"int\"", 
               "\" correctly classified\""}, "RowDefault"]}, {
             TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}, {
             TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}, {
             TemplateBox[{"\"FScore = \"", "1.`"}, "RowDefault"]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
           "Column", 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
         Annotation[#, 
         Column[{
           Row[{26, " examples of ", "int", " correctly classified"}], 
           Row[{"Precision = ", 1.}], 
           Row[{"Recall = ", 1.}], 
           Row[{"FScore = ", 1.}]}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         InsetBox[
          GraphicsBox[{
            Opacity[1.], 
            InsetBox[
             FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 10], 
            Opacity[0.], 
            RectangleBox[{0, 0}, {1, 1}]}], {0.5, 0.5}, Automatic, {1., 1.}], 
         TagBox[
          GridBox[{{
             
             TemplateBox[{
              "0", "\" example of \"", "\"pyr\"", "\" misclassified as \"", 
               "\"int\""}, "RowDefault"]}, {
             TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
             TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
           "Column", 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
         Annotation[#, 
         Column[{
           Row[{0, " example of ", "pyr", " misclassified as ", "int"}], 
           Row[{"Column fraction = ", 0.}], 
           Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ]}, {
       TagBox[
        TooltipBox[
         InsetBox[
          GraphicsBox[{
            Opacity[1.], 
            InsetBox[
             FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 10], 
            Opacity[0.], 
            RectangleBox[{0, 0}, {1, 1}]}], {1.5, 1.5}, Automatic, {1., 1.}], 
         TagBox[
          GridBox[{{
             
             TemplateBox[{
              "0", "\" example of \"", "\"int\"", "\" misclassified as \"", 
               "\"pyr\""}, "RowDefault"]}, {
             TemplateBox[{"\"Column fraction = \"", "0.`"}, "RowDefault"]}, {
             TemplateBox[{"\"Row fraction = \"", "0.`"}, "RowDefault"]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
           "Column", 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
         Annotation[#, 
         Column[{
           Row[{0, " example of ", "int", " misclassified as ", "pyr"}], 
           Row[{"Column fraction = ", 0.}], 
           Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         InsetBox[
          GraphicsBox[{
            Opacity[1.], 
            InsetBox[
             FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 10], 
            Opacity[0.], 
            RectangleBox[{0, 0}, {1, 1}]}], {1.5, 0.5}, Automatic, {1., 1.}], 
         TagBox[
          GridBox[{{
             
             TemplateBox[{
              "0", "\" example of \"", "\"pyr\"", 
               "\" correctly classified\""}, "RowDefault"]}, {
             TemplateBox[{"\"Precision = \"", "0.`"}, "RowDefault"]}, {
             TemplateBox[{"\"Recall = \"", "0.`"}, "RowDefault"]}, {
             TemplateBox[{"\"FScore = \"", "0.`"}, "RowDefault"]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
           "Column", 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
         Annotation[#, 
         Column[{
           Row[{0, " example of ", "pyr", " correctly classified"}], 
           Row[{"Precision = ", 0.}], 
           Row[{"Recall = ", 0.}], 
           Row[{"FScore = ", 0.}]}], "Tooltip"]& ]}, 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[{
           Opacity[0.], 
           RectangleBox[{0, 0}, {1, 1}]}], {2.5, 1.5}, Automatic, {10., 1.}], 
        TagBox[
         GridBox[{{
            
            TemplateBox[{
             "26", "\" example\"", "\"s\"", "\" of class \"", "\"int\""}, 
             "RowDefault"]}, {
            TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
       Annotation[#, 
        Column[{
          Row[{26, " example", "s", " of class ", "int"}], 
          Row[{"Recall = ", 1.}]}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[{
           Opacity[0.], 
           RectangleBox[{0, 0}, {1, 1}]}], {2.5, 0.5}, Automatic, {10., 1.}], 
        TagBox[
         GridBox[{{
            
            TemplateBox[{
             "0", "\" example\"", "\"\"", "\" of class \"", "\"pyr\""}, 
             "RowDefault"]}, {
            TemplateBox[{"\"Recall = \"", "0.`"}, "RowDefault"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
       Annotation[#, 
        Column[{
          Row[{0, " example", "", " of class ", "pyr"}], 
          Row[{"Recall = ", 0.}]}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[{
           Opacity[0.], 
           RectangleBox[{0, 0}, {1, 1}]}], {0.5, -0.5}, Automatic, {1., 10.}], 
        TagBox[
         GridBox[{{
            
            TemplateBox[{
             "26", "\" example\"", "\"s\"", "\" classified as \"", "\"int\""},
              "RowDefault"]}, {
            TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
       Annotation[#, 
        Column[{
          Row[{26, " example", "s", " classified as ", "int"}], 
          Row[{"Precision = ", 1.}]}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[{
           Opacity[0.], 
           RectangleBox[{0, 0}, {1, 1}]}], {1.5, -0.5}, Automatic, {1., 10.}], 
        TagBox[
         GridBox[{{
            
            TemplateBox[{
             "0", "\" example\"", "\"\"", "\" classified as \"", "\"pyr\""}, 
             "RowDefault"]}, {
            TemplateBox[{"\"Precision = \"", "0.`"}, "RowDefault"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]], 
       Annotation[#, 
        Column[{
          Row[{0, " example", "", " classified as ", "pyr"}], 
          Row[{"Precision = ", 0.}]}], "Tooltip"]& ]},
    Frame->True,
    FrameLabel->{
      FormBox["\"predicted class\"", TraditionalForm], 
      FormBox["\"actual class\"", TraditionalForm]},
    FrameTicks->{{{{1.5, 
         FormBox[
          RotationBox["\"int\"", BoxRotation -> 0.], TraditionalForm]}, {0.5, 
         FormBox[
          RotationBox["\"pyr\"", BoxRotation -> 0.], TraditionalForm]}}, {{
        1.5, 
         FormBox["26", TraditionalForm]}, {0.5, 
         FormBox["0", TraditionalForm]}}}, {{{0.5, 
         FormBox[
          RotationBox["26", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {1.5, 
         FormBox[
          RotationBox["0", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}}, {{0.5, 
         FormBox[
          RotationBox["\"int\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}, {1.5, 
         FormBox[
          RotationBox["\"pyr\"", BoxRotation -> 1.5707963267948966`], 
          TraditionalForm]}}}},
    FrameTicksStyle->13,
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->181.2,
    Method->{
     "GridLinesInFront" -> True, "AxisPadding" -> Scaled[0.02], 
      "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
      "RangePadding" -> Scaled[0.05]},
    PlotRangePadding->None]}], "}"}]], "Output",
 CellChangeTimes->{3.904722864231567*^9, 3.9047232300175247`*^9, 
  3.904723284110261*^9, 3.9048203619030504`*^9, 3.9048204426919937`*^9, 
  3.9048301408248053`*^9, 3.9048317159850464`*^9, 3.9048777190290513`*^9, 
  3.9049017967981157`*^9, 3.904916658883328*^9, 3.904918204033552*^9, 
  3.904921121587781*^9, 3.90498446209744*^9, 3.906513571108973*^9, 
  3.906685459843933*^9, 3.906691447815317*^9},
 CellLabel->"Out[47]=",ExpressionUUID->"5c927a0d-0038-4099-a797-c643e2c05ee6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"datasetInt", "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{3.9049019117059555`*^9},
 CellLabel->"In[48]:=",ExpressionUUID->"40f21b6c-18d4-4104-bc41-f2c662e21c77"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"200 - time1stSpike\"\>", "\[Rule]", "0"}], ",", 
   RowBox[{"\<\"200 - timeLastSpike\"\>", "\[Rule]", "0"}], ",", 
   RowBox[{"\<\"200 - spikeNumber\"\>", "\[Rule]", "0"}], ",", 
   RowBox[{"\<\"200 - ISImin\"\>", "\[Rule]", "0"}], ",", 
   RowBox[{"\<\"200 - ISImax\"\>", "\[Rule]", "0"}], ",", 
   RowBox[{"\<\"200 - ISImean\"\>", "\[Rule]", "0"}], ",", 
   RowBox[{"\<\"200 - ISIstd\"\>", "\[Rule]", 
    RowBox[{"Missing", "[", "]"}]}], ",", 
   RowBox[{"\<\"400 - time1stSpike\"\>", "\[Rule]", "0.40000000000000213`"}], 
   ",", 
   RowBox[{"\<\"400 - timeLastSpike\"\>", "\[Rule]", "323.2`"}], ",", 
   RowBox[{"\<\"400 - spikeNumber\"\>", "\[Rule]", "4"}], ",", 
   RowBox[{"\<\"400 - ISImin\"\>", "\[Rule]", "96.39999999999999`"}], ",", 
   RowBox[{"\<\"400 - ISImax\"\>", "\[Rule]", "117.19999999999999`"}], ",", 
   RowBox[{"\<\"400 - ISImean\"\>", "\[Rule]", "107.59999999999998`"}], ",", 
   RowBox[{"\<\"400 - ISIstd\"\>", "\[Rule]", "10.491901638883201`"}], ",", 
   RowBox[{"\<\"600 - time1stSpike\"\>", "\[Rule]", "0.5`"}], ",", 
   RowBox[{"\<\"600 - timeLastSpike\"\>", "\[Rule]", "353.90000000000003`"}], 
   ",", 
   RowBox[{"\<\"600 - spikeNumber\"\>", "\[Rule]", "5"}], ",", 
   RowBox[{"\<\"600 - ISImin\"\>", "\[Rule]", "18.2`"}], ",", 
   RowBox[{"\<\"600 - ISImax\"\>", "\[Rule]", "176.90000000000003`"}], ",", 
   RowBox[{"\<\"600 - ISImean\"\>", "\[Rule]", "88.35000000000001`"}], ",", 
   RowBox[{"\<\"600 - ISIstd\"\>", "\[Rule]", "71.950469074218`"}], ",", 
   RowBox[{"\<\"800 - time1stSpike\"\>", "\[Rule]", "0.40000000000000213`"}], 
   ",", 
   RowBox[{"\<\"800 - timeLastSpike\"\>", "\[Rule]", "141.3`"}], ",", 
   RowBox[{"\<\"800 - spikeNumber\"\>", "\[Rule]", "6"}], ",", 
   RowBox[{"\<\"800 - ISImin\"\>", "\[Rule]", "6.5`"}], ",", 
   RowBox[{"\<\"800 - ISImax\"\>", "\[Rule]", "44.7`"}], ",", 
   RowBox[{"\<\"800 - ISImean\"\>", "\[Rule]", "28.180000000000007`"}], ",", 
   RowBox[{"\<\"800 - ISIstd\"\>", "\[Rule]", "15.810344714774567`"}], ",", 
   RowBox[{"\<\"1000 - time1stSpike\"\>", "\[Rule]", "0.40000000000000213`"}],
    ",", 
   RowBox[{"\<\"1000 - timeLastSpike\"\>", "\[Rule]", "298.7`"}], ",", 
   RowBox[{"\<\"1000 - spikeNumber\"\>", "\[Rule]", "8"}], ",", 
   RowBox[{"\<\"1000 - ISImin\"\>", "\[Rule]", "4.599999999999994`"}], ",", 
   RowBox[{"\<\"1000 - ISImax\"\>", "\[Rule]", "194.2`"}], ",", 
   RowBox[{"\<\"1000 - ISImean\"\>", "\[Rule]", "42.61428571428571`"}], ",", 
   RowBox[{"\<\"1000 - ISIstd\"\>", "\[Rule]", "68.01755725721186`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.9049018978404193`*^9, 3.9049019121238317`*^9}, 
   3.904916658940649*^9, 3.904918207468975*^9, 3.9049211238677464`*^9, 
   3.9049844637945447`*^9, 3.906513571135866*^9, 3.9066854598648767`*^9, 
   3.9066914478736696`*^9},
 CellLabel->"Out[48]=",ExpressionUUID->"70f2ea65-ee11-425d-9d6c-b28c04b609e5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"myClassifier01", "[", 
  RowBox[{
   RowBox[{"datasetInt", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<Probabilities\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.904901829532843*^9, 3.9049018312717485`*^9}, {
  3.9049018880694895`*^9, 3.9049019139767942`*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"c5325a29-3cd9-44ce-90fe-0d092559ce18"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"int\"\>", "\[Rule]", "0.9705503761287269`"}], ",", 
   RowBox[{"\<\"pyr\"\>", "\[Rule]", "0.029449623871273218`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.904901901133764*^9, 3.9049019144240966`*^9}, 
   3.904918208546486*^9, 3.90492112492763*^9, 3.9049844647480993`*^9},
 CellLabel->
  "Out[162]=",ExpressionUUID->"86f7715a-5c06-44e1-aa34-b5bae4c777ad"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"int\"\>", "\[Rule]", "0.9705503761287269`"}], ",", 
   RowBox[{"\<\"pyr\"\>", "\[Rule]", "0.029449623871273218`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.9049166571822505`*^9, 3.9049181668007135`*^9, 
  3.904921110157086*^9, 3.9049844339005814`*^9, 3.9052275410122285`*^9, 
  3.9065135711618004`*^9},
 CellLabel->"Out[47]=",ExpressionUUID->"8d895088-9ec3-4bf7-b239-81549273bebe"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"int\"\>", "\[Rule]", "0.9705503761287269`"}], ",", 
   RowBox[{"\<\"pyr\"\>", "\[Rule]", "0.029449623871273218`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.906513567517193*^9, 3.9066854598918056`*^9},
 CellLabel->"Out[49]=",ExpressionUUID->"c2e22456-86be-4f6a-93c4-68ea99e0cfff"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"int\"\>", "\[Rule]", "0.9705503761287269`"}], ",", 
   RowBox[{"\<\"pyr\"\>", "\[Rule]", "0.029449623871273218`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.9066854566995945`*^9, 3.906691447924534*^9},
 CellLabel->"Out[49]=",ExpressionUUID->"cb937868-df37-45cd-999d-ed8f55bc4fd4"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Copie - 01(trance a)  ", "Subsection",
 CellChangeTimes->{{3.9037856883091526`*^9, 3.9037856934467874`*^9}, {
   3.904105663446622*^9, 3.9041056661952486`*^9}, {3.9043056073379326`*^9, 
   3.904305608882037*^9}, {3.9043553671344004`*^9, 3.9043553672851057`*^9}, 
   3.904822545799284*^9, {3.9049234063450212`*^9, 
   3.904923409877516*^9}},ExpressionUUID->"51fe84ac-34d3-4929-b874-\
684acf6b948a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "filename", " ", "=", " ", 
   "\"\<neuronCopiesDatabase_pyr_2023_10_16_a\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dbcopie02", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{
     "filepath", "<>", "\"\<\\\\\>\"", "<>", "filename", "<>", 
      "\"\<.json\>\""}], ",", "\"\<RawJSON\>\""}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8708371643172398`*^9, 3.8708371649739227`*^9}, {
   3.870837205358247*^9, 3.8708372889594383`*^9}, {3.8708373717294827`*^9, 
   3.870837375102536*^9}, {3.8708374759074984`*^9, 3.870837491642853*^9}, {
   3.870837678301423*^9, 3.8708376808758116`*^9}, {3.870838008765304*^9, 
   3.8708380426274614`*^9}, {3.870838141648035*^9, 3.870838156343728*^9}, 
   3.870838188336751*^9, 3.8708389006803474`*^9, 3.8708395721715164`*^9, {
   3.899807266745392*^9, 3.899807277069441*^9}, {3.903707485682394*^9, 
   3.9037075063491807`*^9}, {3.903757621461687*^9, 3.903757634322569*^9}, {
   3.9037825871621637`*^9, 3.903782609008459*^9}, 3.903782733323086*^9, {
   3.903785723135454*^9, 3.903785733250041*^9}, {3.9049234167096615`*^9, 
   3.9049234217005315`*^9}, {3.9049240551999583`*^9, 3.9049240556584787`*^9}, 
   3.906513548695054*^9, 
   3.912139559399883*^9},ExpressionUUID->"d80e4a5f-8663-4ee6-a127-\
693112d8967d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "@", 
  RowBox[{"Keys", "@", "dbcopie02"}]}]], "Input",
 CellChangeTimes->{{3.903782740277094*^9, 3.9037827801122212`*^9}, {
  3.903785730947415*^9, 3.9037857309925213`*^9}, {3.904923423292531*^9, 
  3.904923423322534*^9}, {3.9049240584596424`*^9, 3.9049240588223143`*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"c8429421-0a48-49eb-8d67-d2d40c9237fa"],

Cell[BoxData["256655"], "Output",
 CellChangeTimes->{
  3.903782618156659*^9, {3.9037827540094395`*^9, 3.9037827805693855`*^9}, 
   3.903785553305829*^9, 3.9037857369655743`*^9, 3.9040196845449157`*^9, 
   3.9041047036961255`*^9, 3.904183282834422*^9, 3.9041853575061393`*^9, 
   3.9043056488383493`*^9, 3.904355389195642*^9, 3.9047233138164215`*^9, 
   3.904723355192388*^9, 3.904822594014103*^9, 3.9048311524023933`*^9, 
   3.9048322372540708`*^9, 3.904878598658201*^9, 3.904923600498993*^9, 
   3.904924070594859*^9, 3.90495986205795*^9, 3.9049878466624355`*^9, 
   3.9052277382306576`*^9, 3.906513677105071*^9},
 CellLabel->"Out[51]=",ExpressionUUID->"2dc613ff-bbad-44bb-a118-6a16206ae079"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Etichette", "Subsubsection",
 CellChangeTimes->{{3.9065356281893835`*^9, 
  3.9065356296447153`*^9}},ExpressionUUID->"ba134df6-2b1f-4a7a-93c3-\
6e4c28ac4fd4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"res", "=", 
  RowBox[{"classificaCopieEtichette", "[", 
   RowBox[{
    RowBox[{"dbcopie02", "[", 
     RowBox[{"[", 
      RowBox[{";;", "10"}], "]"}], "]"}], ",", "myClassifier01"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.906527528387726*^9, 3.90652753872915*^9}, {
  3.9065285861210833`*^9, 3.906528586735332*^9}},
 CellLabel->
  "In[133]:=",ExpressionUUID->"da40c4f1-838b-486e-9f3b-2ea4b09dec47"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"95810005_iadap_0.1_Idep_0.75_Idep0_0.25_c_0.75_d_0.5_R_0_-25_\
-10_0_0_0_p_1\"\>", 
     ",", "\<\"95810005_iadap_0.1_Idep_0.75_Idep0_0.25_c_0.75_d_0.5_R_0_-25_-\
10_0_0_25_p_1\"\>", 
     ",", "\<\"95810005_iadap_0.1_Idep_0.75_Idep0_0.25_c_0.75_d_0.5_R_0_-25_-\
10_0_25_0_p_1\"\>", 
     ",", "\<\"95810005_iadap_0.1_Idep_0.75_Idep0_0.25_c_0.75_d_0.5_R_0_-25_-\
10_0_25_25_p_1\"\>", 
     ",", "\<\"95810005_iadap_0.1_Idep_0.75_Idep0_0.25_c_0.75_d_0.5_R_0_-25_0_\
0_0_0_p_1\"\>", 
     ",", "\<\"95810005_iadap_0.1_Idep_0.75_Idep0_0.25_c_0.75_d_0.5_R_0_-25_0_\
0_0_25_p_1\"\>", 
     ",", "\<\"95810005_iadap_0.1_Idep_0.75_Idep0_0.25_c_0.75_d_0.5_R_0_-25_0_\
0_25_0_p_1\"\>", 
     ",", "\<\"95810005_iadap_0.1_Idep_0.75_Idep0_0.25_c_0.75_d_0.5_R_0_-25_0_\
0_25_25_p_1\"\>", 
     ",", "\<\"95810005_iadap_0.1_Idep_0.75_Idep0_0.25_c_0.75_d_0.5_R_0_0_-10_\
0_0_0_p_1\"\>", 
     ",", "\<\"95810005_iadap_0.1_Idep_0.75_Idep0_0.25_c_0.75_d_0.5_R_0_0_-10_\
0_0_25_p_1\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.9876418903921667`", ",", "0.9876418903921667`", ",", 
     "0.9914028264641991`", ",", "0.9876418903921667`", ",", 
     "0.9876418903921667`", ",", "0.9876418903921667`", ",", 
     "0.9914028264641991`", ",", "0.9876418903921667`", ",", 
     "0.9876418903921667`", ",", "0.9876418903921667`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.012358109607833343`", ",", "0.012358109607833343`", ",", 
     "0.008597173535800915`", ",", "0.012358109607833343`", ",", 
     "0.012358109607833343`", ",", "0.012358109607833343`", ",", 
     "0.008597173535800915`", ",", "0.012358109607833343`", ",", 
     "0.012358109607833343`", ",", "0.012358109607833343`"}], "}"}], ",", 
   "10", ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{"\<\"pyr\"\>", "\[Rule]", "10"}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"pyr\"\>", "\[Rule]", "0.9883940776065734`"}], ",", 
     RowBox[{"\<\"int\"\>", "\[Rule]", "0.011605922393426858`"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"pyr\"\>", "\[Rule]", "0.0015857498829212747`"}], ",", 
     RowBox[{"\<\"int\"\>", "\[Rule]", "0.0015857498829212747`"}]}], 
    "\[RightAssociation]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.9065275396842995`*^9, 3.906528587928694*^9},
 CellLabel->
  "Out[133]=",ExpressionUUID->"6e0d398a-f731-4d16-b063-74fe43e40651"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"resAss", "=", 
  RowBox[{"Association", "@", 
   RowBox[{"Thread", "[", 
    RowBox[{
     RowBox[{"res", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "->", 
     RowBox[{"res", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.9065286167044053`*^9, 3.9065287140612993`*^9}, {
  3.9065287696845756`*^9, 3.906528798847478*^9}, {3.906535635578021*^9, 
  3.9065356458124504`*^9}},
 CellLabel->
  "In[141]:=",ExpressionUUID->"c2141706-1558-49af-9ade-13e45815c780"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"95810005_iadap_0.1_Idep_0.75_Idep0_0.25_c_0.75_d_0.5_R_0_-25_-\
10_0_0_0_p_1\"\>", "\[Rule]", "0.9876418903921667`"}], ",", 
   RowBox[{"\<\"95810005_iadap_0.1_Idep_0.75_Idep0_0.25_c_0.75_d_0.5_R_0_-25_-\
10_0_0_25_p_1\"\>", "\[Rule]", "0.9876418903921667`"}], ",", 
   RowBox[{"\<\"95810005_iadap_0.1_Idep_0.75_Idep0_0.25_c_0.75_d_0.5_R_0_-25_-\
10_0_25_0_p_1\"\>", "\[Rule]", "0.9914028264641991`"}], ",", 
   RowBox[{"\<\"95810005_iadap_0.1_Idep_0.75_Idep0_0.25_c_0.75_d_0.5_R_0_-25_-\
10_0_25_25_p_1\"\>", "\[Rule]", "0.9876418903921667`"}], ",", 
   RowBox[{"\<\"95810005_iadap_0.1_Idep_0.75_Idep0_0.25_c_0.75_d_0.5_R_0_-25_\
0_0_0_0_p_1\"\>", "\[Rule]", "0.9876418903921667`"}], ",", 
   RowBox[{"\<\"95810005_iadap_0.1_Idep_0.75_Idep0_0.25_c_0.75_d_0.5_R_0_-25_\
0_0_0_25_p_1\"\>", "\[Rule]", "0.9876418903921667`"}], ",", 
   RowBox[{"\<\"95810005_iadap_0.1_Idep_0.75_Idep0_0.25_c_0.75_d_0.5_R_0_-25_\
0_0_25_0_p_1\"\>", "\[Rule]", "0.9914028264641991`"}], ",", 
   RowBox[{"\<\"95810005_iadap_0.1_Idep_0.75_Idep0_0.25_c_0.75_d_0.5_R_0_-25_\
0_0_25_25_p_1\"\>", "\[Rule]", "0.9876418903921667`"}], ",", 
   RowBox[{"\<\"95810005_iadap_0.1_Idep_0.75_Idep0_0.25_c_0.75_d_0.5_R_0_0_-\
10_0_0_0_p_1\"\>", "\[Rule]", "0.9876418903921667`"}], ",", 
   RowBox[{"\<\"95810005_iadap_0.1_Idep_0.75_Idep0_0.25_c_0.75_d_0.5_R_0_0_-\
10_0_0_25_p_1\"\>", "\[Rule]", "0.9876418903921667`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.906528643009263*^9, {3.9065286754565907`*^9, 3.906528714574622*^9}, {
   3.906528774325198*^9, 3.9065287994825864`*^9}, 3.9065356466992164`*^9},
 CellLabel->
  "Out[141]=",ExpressionUUID->"bffec5bc-da54-4a65-b4da-6bdd906cb247"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Select", "[", 
  RowBox[{"resAss", ",", 
   RowBox[{
    RowBox[{"#", ">", "0.988"}], "&"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9065285914869604`*^9, 3.9065285949059935`*^9}, {
  3.9065356544244227`*^9, 3.9065356877284665`*^9}},
 CellLabel->
  "In[143]:=",ExpressionUUID->"c3c04c6c-e99f-4616-abfd-bfda8bbebc0f"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"95810005_iadap_0.1_Idep_0.75_Idep0_0.25_c_0.75_d_0.5_R_0_-25_-\
10_0_25_0_p_1\"\>", "\[Rule]", "0.9914028264641991`"}], ",", 
   RowBox[{"\<\"95810005_iadap_0.1_Idep_0.75_Idep0_0.25_c_0.75_d_0.5_R_0_-25_\
0_0_25_0_p_1\"\>", "\[Rule]", "0.9914028264641991`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.9065356734132996`*^9, 3.9065356880591774`*^9}},
 CellLabel->
  "Out[143]=",ExpressionUUID->"034890eb-794a-4ab7-a358-3e1fdbd4b116"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"probPyrAtmp", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"probIntAtmp", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nRighe", "=", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "nomi", ",", "probPyr", ",", "probInt", ",", "notNull", ",", "res", 
        ",", "meanProb", ",", "stdProb"}], "}"}], "=", 
      RowBox[{"classificaCopieEtichette", "[", 
       RowBox[{
        RowBox[{"dbcopie02", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"1", "+", 
            RowBox[{"nRighe", "*", "i"}]}], ";;", 
           RowBox[{"i", "+", 
            RowBox[{"nRighe", "*", "i"}], "+", "nRighe"}]}], "]"}], "]"}], 
        ",", "myClassifier01"}], "]"}]}], ";", "\n", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"probPyrAtmp", ",", 
       RowBox[{"Thread", "[", 
        RowBox[{"nomi", "->", "probPyr"}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"probIntAtmp", ",", 
       RowBox[{"Thread", "[", 
        RowBox[{"nomi", "->", "probInt"}], "]"}]}], "]"}], ";"}], 
    "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "0", ",", "6"}], "}"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.9049604667402463`*^9, 3.904960493775358*^9}, {
   3.9049605384322104`*^9, 3.904960555911672*^9}, {3.905227588714963*^9, 
   3.905227596130079*^9}, {3.90522765612468*^9, 3.9052276614924083`*^9}, 
   3.90522776878867*^9, 3.9052280495680633`*^9, {3.9065137155702996`*^9, 
   3.906513717448146*^9}, {3.9065162871336255`*^9, 3.9065163258545094`*^9}, {
   3.9065357598004513`*^9, 3.9065357975272017`*^9}, {3.9065358748907776`*^9, 
   3.9065361709132*^9}, {3.9065362089347143`*^9, 3.9065362102959557`*^9}, {
   3.9065363286261897`*^9, 3.9065363302702103`*^9}},
 CellLabel->
  "In[154]:=",ExpressionUUID->"9dd83b67-6ad2-4941-aa02-68b0f6bf3a01"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Association", "@", 
  RowBox[{"Flatten", "[", "probIntAtmp", "]"}]}]], "Input",
 CellChangeTimes->{{3.9049604667402463`*^9, 3.904960493775358*^9}, {
   3.9049605384322104`*^9, 3.904960555911672*^9}, {3.905227588714963*^9, 
   3.905227596130079*^9}, {3.90522765612468*^9, 3.9052276614924083`*^9}, 
   3.90522776878867*^9, 3.9052280495680633`*^9, {3.9065137155702996`*^9, 
   3.906513717448146*^9}, {3.9065162871336255`*^9, 3.9065163258545094`*^9}, {
   3.9065357598004513`*^9, 3.9065357975272017`*^9}, {3.9065358748907776`*^9, 
   3.9065361709132*^9}, {3.9065362089347143`*^9, 3.906536229791316*^9}, {
   3.90653626845295*^9, 3.9065362706483307`*^9}, {3.906536338148762*^9, 
   3.9065363510412683`*^9}},
 CellLabel->
  "In[160]:=",ExpressionUUID->"1b971622-c382-44a7-ad5c-fc2e3255025c"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"95810005_iadap_0.1_Idep_0.75_Idep0_0.25_c_0.75_d_0.5_R_0_-25_-\
10_0_0_0_p_1\"\>", "\[Rule]", "0.012358109607833343`"}], ",", 
   RowBox[{"\<\"95810005_iadap_0.1_Idep_0.75_Idep0_0.25_c_0.75_d_0.5_R_0_-25_-\
10_0_0_25_p_1\"\>", "\[Rule]", "0.012358109607833343`"}], ",", 
   RowBox[{"\<\"95810005_iadap_0.1_Idep_0.75_Idep0_0.25_c_0.75_d_0.5_R_0_-25_-\
10_0_25_0_p_1\"\>", "\[Rule]", "0.008597173535800915`"}], ",", 
   RowBox[{"\<\"95810005_iadap_0.1_Idep_0.75_Idep0_0.25_c_0.75_d_0.5_R_0_-25_-\
10_0_25_25_p_1\"\>", "\[Rule]", "0.012358109607833343`"}], ",", 
   RowBox[{"\<\"95810005_iadap_0.1_Idep_0.75_Idep0_0.25_c_0.75_d_0.5_R_0_-25_\
0_0_0_0_p_1\"\>", "\[Rule]", "0.012358109607833343`"}], ",", 
   RowBox[{"\<\"95810005_iadap_0.1_Idep_0.75_Idep0_0.25_c_0.75_d_0.5_R_0_-25_\
0_0_0_25_p_1\"\>", "\[Rule]", "0.012358109607833343`"}], ",", 
   RowBox[{"\<\"95810005_iadap_0.1_Idep_0.75_Idep0_0.25_c_0.75_d_0.5_R_0_-25_\
0_0_25_0_p_1\"\>", "\[Rule]", "0.008597173535800915`"}], ",", 
   RowBox[{"\<\"95810005_iadap_0.1_Idep_0.75_Idep0_0.25_c_0.75_d_0.5_R_0_-25_\
0_0_25_25_p_1\"\>", "\[Rule]", "0.012358109607833343`"}], ",", 
   RowBox[{"\<\"95810005_iadap_0.1_Idep_0.75_Idep0_0.25_c_0.75_d_0.5_R_0_0_-\
10_0_0_0_p_1\"\>", "\[Rule]", "0.012358109607833343`"}], ",", 
   RowBox[{"\<\"95810005_iadap_0.1_Idep_0.75_Idep0_0.25_c_0.75_d_0.5_R_0_0_-\
10_0_0_25_p_1\"\>", "\[Rule]", "0.012358109607833343`"}], ",", 
   RowBox[{"\<\"95810005_iadap_0.1_Idep_0.75_Idep0_0.25_c_0.75_d_0.5_R_0_0_-\
10_0_25_0_p_1\"\>", "\[Rule]", "0.008597173535800915`"}], ",", 
   RowBox[{"\<\"95810005_iadap_0.1_Idep_0.75_Idep0_0.25_c_0.75_d_0.5_R_0_0_-\
10_0_25_25_p_1\"\>", "\[Rule]", "0.012358109607833343`"}], ",", 
   RowBox[{"\<\"95810005_iadap_0.1_Idep_0.75_Idep0_0.25_c_0.75_d_0.5_R_0_0_0_\
0_0_0_p_1\"\>", "\[Rule]", "0.012358109607833343`"}], ",", 
   RowBox[{"\<\"95810005_iadap_0.1_Idep_0.75_Idep0_0.25_c_0.75_d_0.5_R_0_0_0_\
0_0_25_p_1\"\>", "\[Rule]", "0.012358109607833343`"}], ",", 
   RowBox[{"\<\"95810005_iadap_0.1_Idep_0.75_Idep0_0.25_c_0.75_d_0.5_R_0_0_0_\
0_25_0_p_1\"\>", "\[Rule]", "0.008597173535800915`"}], ",", 
   RowBox[{"\<\"95810005_iadap_0.1_Idep_0.75_Idep0_0.25_c_0.75_d_0.5_R_0_0_0_\
0_25_25_p_1\"\>", "\[Rule]", "0.012358109607833343`"}], ",", 
   RowBox[{"\<\"95810005_iadap_0.1_Idep_0.75_Idep0_0.25_c_0.75_d_0.75_R_0_-25_\
-10_0_0_0_p_1\"\>", "\[Rule]", "0.012358109607833343`"}], ",", 
   RowBox[{"\<\"95810005_iadap_0.1_Idep_0.75_Idep0_0.25_c_0.75_d_0.75_R_0_-25_\
-10_0_0_25_p_1\"\>", "\[Rule]", "0.012358109607833343`"}], ",", 
   RowBox[{"\<\"95810005_iadap_0.1_Idep_0.75_Idep0_0.25_c_0.75_d_0.75_R_0_-25_\
-10_0_25_0_p_1\"\>", "\[Rule]", "0.008597173535800915`"}], ",", 
   RowBox[{"\<\"95810005_iadap_0.1_Idep_0.75_Idep0_0.25_c_0.75_d_0.75_R_0_-25_\
-10_0_25_25_p_1\"\>", "\[Rule]", "0.008597173535800915`"}], ",", 
   RowBox[{"\<\"95810005_iadap_0.1_Idep_0.75_Idep0_0.25_c_0.75_d_0.75_R_0_-25_\
0_0_0_0_p_1\"\>", "\[Rule]", "0.012358109607833343`"}], ",", 
   RowBox[{"\<\"95810005_iadap_0.1_Idep_0.75_Idep0_0.25_c_0.75_d_0.75_R_0_-25_\
0_0_0_25_p_1\"\>", "\[Rule]", "0.012358109607833343`"}], ",", 
   RowBox[{"\<\"95810005_iadap_0.1_Idep_0.75_Idep0_0.25_c_0.75_d_0.75_R_0_-25_\
0_0_25_0_p_1\"\>", "\[Rule]", "0.008597173535800915`"}], ",", 
   RowBox[{"\<\"95810005_iadap_0.1_Idep_0.75_Idep0_0.25_c_0.75_d_0.75_R_0_-25_\
0_0_25_25_p_1\"\>", "\[Rule]", "0.008597173535800915`"}], ",", 
   RowBox[{"\<\"95810005_iadap_0.1_Idep_0.75_Idep0_0.25_c_0.75_d_0.75_R_0_0_-\
10_0_0_0_p_1\"\>", "\[Rule]", "0.012358109607833343`"}], ",", 
   RowBox[{"\<\"95810005_iadap_0.1_Idep_0.75_Idep0_0.25_c_0.75_d_0.75_R_0_0_-\
10_0_0_25_p_1\"\>", "\[Rule]", "0.012358109607833343`"}], ",", 
   RowBox[{"\<\"95810005_iadap_0.1_Idep_0.75_Idep0_0.25_c_0.75_d_0.75_R_0_0_-\
10_0_25_0_p_1\"\>", "\[Rule]", "0.008597173535800915`"}], ",", 
   RowBox[{"\<\"95810005_iadap_0.1_Idep_0.75_Idep0_0.25_c_0.75_d_0.75_R_0_0_-\
10_0_25_25_p_1\"\>", "\[Rule]", "0.008597173535800915`"}], ",", 
   RowBox[{"\<\"95810005_iadap_0.1_Idep_0.75_Idep0_0.25_c_0.75_d_0.75_R_0_0_0_\
0_0_0_p_1\"\>", "\[Rule]", "0.012358109607833343`"}], ",", 
   RowBox[{"\<\"95810005_iadap_0.1_Idep_0.75_Idep0_0.25_c_0.75_d_0.75_R_0_0_0_\
0_0_25_p_1\"\>", "\[Rule]", "0.012358109607833343`"}], ",", 
   RowBox[{"\<\"95810005_iadap_0.1_Idep_0.75_Idep0_0.25_c_0.75_d_0.75_R_0_0_0_\
0_25_0_p_1\"\>", "\[Rule]", "0.008597173535800915`"}], ",", 
   RowBox[{"\<\"95810005_iadap_0.1_Idep_0.75_Idep0_0.25_c_0.75_d_0.75_R_0_0_0_\
0_25_25_p_1\"\>", "\[Rule]", "0.008597173535800915`"}], ",", 
   RowBox[{"\<\"95810005_iadap_0.1_Idep_0.75_Idep0_0.25_c_0.75_d_1.5_R_0_-25_-\
10_0_0_0_p_1\"\>", "\[Rule]", "0.008597173535800915`"}], ",", 
   RowBox[{"\<\"95810005_iadap_0.1_Idep_0.75_Idep0_0.25_c_0.75_d_1.5_R_0_-25_-\
10_0_0_25_p_1\"\>", "\[Rule]", "0.012358109607833343`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.906536177628456*^9, {3.90653621535404*^9, 3.906536230506003*^9}, 
   3.906536271145037*^9, {3.9065363344952326`*^9, 3.906536351738858*^9}},
 CellLabel->
  "Out[160]=",ExpressionUUID->"43f23a34-26d0-454f-903d-f1343d0cfeb4"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Classificazione con etichette", "Subsubsection",
 CellChangeTimes->{{3.9065363632432165`*^9, 
  3.9065363699495344`*^9}},ExpressionUUID->"ede27437-f44f-42c1-ab23-\
6b53ecaf6a40"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"probPyrAtmp", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"probIntAtmp", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nRighe", "=", "40000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "nomi", ",", "probPyr", ",", "probInt", ",", "notNull", ",", "res", 
        ",", "meanProb", ",", "stdProb"}], "}"}], "=", 
      RowBox[{"classificaCopieEtichette", "[", 
       RowBox[{
        RowBox[{"dbcopie02", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"1", "+", 
            RowBox[{"nRighe", "*", "i"}]}], ";;", 
           RowBox[{"i", "+", 
            RowBox[{"nRighe", "*", "i"}], "+", "nRighe"}]}], "]"}], "]"}], 
        ",", "myClassifier01"}], "]"}]}], ";", "\n", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"probPyrAtmp", ",", 
       RowBox[{"Thread", "[", 
        RowBox[{"nomi", "->", "probPyr"}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"probIntAtmp", ",", 
       RowBox[{"Thread", "[", 
        RowBox[{"nomi", "->", "probInt"}], "]"}]}], "]"}], ";"}], 
    "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "0", ",", "2"}], "}"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.9049604667402463`*^9, 3.904960493775358*^9}, {
   3.9049605384322104`*^9, 3.904960555911672*^9}, {3.905227588714963*^9, 
   3.905227596130079*^9}, {3.90522765612468*^9, 3.9052276614924083`*^9}, 
   3.90522776878867*^9, 3.9052280495680633`*^9, {3.9065137155702996`*^9, 
   3.906513717448146*^9}, {3.9065162871336255`*^9, 3.9065163258545094`*^9}, {
   3.9065357598004513`*^9, 3.9065357975272017`*^9}, {3.9065358748907776`*^9, 
   3.9065361709132*^9}, {3.9065362089347143`*^9, 3.9065362102959557`*^9}, {
   3.9065363286261897`*^9, 3.9065363302702103`*^9}, {3.9065364235957136`*^9, 
   3.9065364354176393`*^9}},
 CellLabel->
  "In[161]:=",ExpressionUUID->"e6e07e38-4111-41b2-8df8-871f8db1f71c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "@", 
  RowBox[{"Association", "@", 
   RowBox[{"Flatten", "@", "probPyrAtmp"}]}]}]], "Input",
 CellChangeTimes->{{3.9065388303995657`*^9, 3.906538870865193*^9}},
 CellLabel->
  "In[167]:=",ExpressionUUID->"86c0327c-95f8-4678-bea3-a36c7ad5f115"],

Cell[BoxData["115225"], "Output",
 CellChangeTimes->{{3.9065388360177917`*^9, 3.9065388716678953`*^9}},
 CellLabel->
  "Out[167]=",ExpressionUUID->"6a4d0aad-6828-4188-aab1-a7fe8415d50b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nRighe", "*", "5"}]], "Input",
 CellChangeTimes->{{3.9065389501526113`*^9, 3.9065389682457914`*^9}},
 CellLabel->
  "In[171]:=",ExpressionUUID->"966c3ab0-cd7f-4ff1-9b92-5b6967ae1fdf"],

Cell[BoxData["200000"], "Output",
 CellChangeTimes->{{3.9065389557843666`*^9, 3.9065389685921607`*^9}},
 CellLabel->
  "Out[171]=",ExpressionUUID->"ef271278-e479-4528-8e3d-56445827b56f"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Do", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "nomi", ",", "probPyr", ",", "probInt", ",", "notNull", ",", "res", 
        ",", "meanProb", ",", "stdProb"}], "}"}], "=", 
      RowBox[{"classificaCopieEtichette", "[", 
       RowBox[{
        RowBox[{"dbcopie02", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"1", "+", 
            RowBox[{"nRighe", "*", "i"}]}], ";;", 
           RowBox[{"i", "+", 
            RowBox[{"nRighe", "*", "i"}], "+", "nRighe"}]}], "]"}], "]"}], 
        ",", "myClassifier01"}], "]"}]}], ";", "\n", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"probPyrAtmp", ",", 
       RowBox[{"Thread", "[", 
        RowBox[{"nomi", "->", "probPyr"}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"probIntAtmp", ",", 
       RowBox[{"Thread", "[", 
        RowBox[{"nomi", "->", "probInt"}], "]"}]}], "]"}], ";"}], 
    "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "3", ",", "5"}], "}"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.906538943714687*^9, 3.9065389460403786`*^9}},
 CellLabel->
  "In[172]:=",ExpressionUUID->"277c48ae-b646-4bfb-b119-c85d970419b8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "@", 
  RowBox[{"Association", "@", 
   RowBox[{"Flatten", "@", "probPyrAtmp"}]}]}]], "Input",
 CellLabel->
  "In[173]:=",ExpressionUUID->"1955edad-ebe7-479a-8541-a37c938fa52b"],

Cell[BoxData["233816"], "Output",
 CellChangeTimes->{3.906542169203992*^9},
 CellLabel->
  "Out[173]=",ExpressionUUID->"829e49e0-8e62-460d-89a6-eb23ebb3bc23"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "nomi", ",", "probPyr", ",", "probInt", ",", "notNull", ",", "res", ",", 
     "meanProb", ",", "stdProb"}], "}"}], "=", 
   RowBox[{"classificaCopieEtichette", "[", 
    RowBox[{
     RowBox[{"dbcopie02", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"1", "+", 
         RowBox[{"nRighe", "*", "6"}]}], ";;"}], "]"}], "]"}], ",", 
     "myClassifier01"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"probPyrAtmp", ",", 
    RowBox[{"Thread", "[", 
     RowBox[{"nomi", "->", "probPyr"}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"probIntAtmp", ",", 
    RowBox[{"Thread", "[", 
     RowBox[{"nomi", "->", "probInt"}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.906538943714687*^9, 3.9065389460403786`*^9}, {
  3.9065421993585777`*^9, 3.9065422188425236`*^9}},
 CellLabel->
  "In[174]:=",ExpressionUUID->"4f596036-1b02-46ed-a252-e7cb01065bda"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "@", 
  RowBox[{"Association", "@", 
   RowBox[{"Flatten", "@", "probPyrAtmp"}]}]}]], "Input",
 CellLabel->
  "In[177]:=",ExpressionUUID->"ff04b7aa-d923-4a2f-9b6b-90496a6dc4cf"],

Cell[BoxData["250466"], "Output",
 CellChangeTimes->{3.9065425602020693`*^9},
 CellLabel->
  "Out[177]=",ExpressionUUID->"38bbbe13-90c5-4da4-8ae6-cc3f538e6404"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"probPyrAtmp", "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.906542605302869*^9, 3.906542605568632*^9}},
 CellLabel->
  "In[178]:=",ExpressionUUID->"16d50e20-6ee7-418b-8555-05764f8275ad"],

Cell[BoxData[
 TemplateBox[<|"shortenedBoxes" -> TagBox[
     RowBox[{"{", 
       RowBox[{
         RowBox[{
          "\"95810005_iadap_0.1_Idep_0.75_Idep0_0.25_c_0.75_d_0.5_R_0_-25_-10_\
0_0_0_p_1\"", "\[Rule]", "0.9876418903921667`"}], ",", 
         RowBox[{
          "\"95810005_iadap_0.1_Idep_0.75_Idep0_0.25_c_0.75_d_0.5_R_0_-25_-10_\
0_0_25_p_1\"", "\[Rule]", "0.9876418903921667`"}], ",", 
         RowBox[{
          "\"95810005_iadap_0.1_Idep_0.75_Idep0_0.25_c_0.75_d_0.5_R_0_-25_-10_\
0_25_0_p_1\"", "\[Rule]", "0.9914028264641991`"}], ",", 
         RowBox[{
          "\"95810005_iadap_0.1_Idep_0.75_Idep0_0.25_c_0.75_d_0.5_R_0_-25_-10_\
0_25_25_p_1\"", "\[Rule]", "0.9876418903921667`"}], ",", 
         RowBox[{
          "\"95810005_iadap_0.1_Idep_0.75_Idep0_0.25_c_0.75_d_0.5_R_0_-25_0_0_\
0_0_p_1\"", "\[Rule]", "0.9876418903921667`"}], ",", 
         RowBox[{
          "\"95810005_iadap_0.1_Idep_0.75_Idep0_0.25_c_0.75_d_0.5_R_0_-25_0_0_\
0_25_p_1\"", "\[Rule]", "0.9876418903921667`"}], ",", 
         TemplateBox[{"37204"}, "OutputSizeLimit`Skeleton"], ",", 
         RowBox[{
          "\"95810005_iadap_0_Idep_0.5_Idep0_1_c_0.5_d_2_R_0_0_0_0_0_0_p_1\"",
            "\[Rule]", "0.9959195233332193`"}], ",", 
         RowBox[{
          "\"95810005_iadap_0_Idep_0.5_Idep0_1_c_0.5_d_2_R_0_0_0_0_0_50_p_1\"\
", "\[Rule]", "0.9874442207238614`"}], ",", 
         RowBox[{
          "\"95810005_iadap_0_Idep_0.5_Idep0_1_c_0.5_d_2_R_0_0_0_0_50_0_p_1\"\
", "\[Rule]", "0.9957928024165507`"}], ",", 
         RowBox[{
          "\"95810005_iadap_0_Idep_0.5_Idep0_1_c_0.5_d_2_R_0_0_0_0_50_50_p_1\"\
", "\[Rule]", "0.9959195233332193`"}], ",", 
         RowBox[{
          "\"95810005_iadap_0_Idep_0.5_Idep0_1_c_1_d_0.1_R_0_-50_-35_0_0_0_p_\
1\"", "\[Rule]", "0.9876418903921667`"}]}], "}"}], Short[#, 8]& ], "line" -> 
   178, "sessionID" -> 33634892442557134570, "byteCount" -> 6611312, "size" -> 
   8, "stored" -> False, "expr" -> Missing["NotAvailable", "NewSessionID"], 
   "wrap" -> OutputSizeLimit`Defer, "version" -> 1|>,
  "OutputSizeLimitTemplate"]], "Output",
 CellChangeTimes->{3.906542606726816*^9},
 CellLabel->
  "Out[178]=",ExpressionUUID->"be51ba00-9232-4f58-913e-281264adfab1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"classificatiComeInterneuroniAtmp", "=", 
  RowBox[{"Length", "@", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"Association", "@", 
      RowBox[{"Flatten", "[", "probIntAtmp", "]"}]}], ",", 
     RowBox[{
      RowBox[{"#", ">", "0.5"}], "&"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.9065426668152666`*^9, 3.9065427165502667`*^9}},
 CellLabel->
  "In[179]:=",ExpressionUUID->"9e2770f0-08af-4019-8b44-a4b6a2a4f58d"],

Cell[BoxData["3813"], "Output",
 CellChangeTimes->{3.90654271806609*^9},
 CellLabel->
  "Out[179]=",ExpressionUUID->"e68617dd-4189-4e92-87c3-7fce0cc228b2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"classificatiComePiramidaliAtmp", "=", 
  RowBox[{"Length", "@", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"Association", "@", 
      RowBox[{"Flatten", "[", "probPyrAtmp", "]"}]}], ",", 
     RowBox[{
      RowBox[{"#", ">", "0.5"}], "&"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.9065426668152666`*^9, 3.906542735799653*^9}},
 CellLabel->
  "In[180]:=",ExpressionUUID->"656a0413-a2d3-4d95-bc45-3b734ef444ff"],

Cell[BoxData["246653"], "Output",
 CellChangeTimes->{3.9065427375662513`*^9},
 CellLabel->
  "Out[180]=",ExpressionUUID->"db0c3ac2-6a24-48a4-ba07-f9e2c19457df"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"accuratezzaA", "=", 
  RowBox[{
   RowBox[{"N", "@", "classificatiComePiramidaliAtmp"}], "/", 
   RowBox[{"(", 
    RowBox[{
    "classificatiComePiramidaliAtmp", "+", 
     "classificatiComeInterneuroniAtmp"}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.904096968222768*^9, 3.9040970097439203`*^9}, {
   3.9040974530854115`*^9, 3.904097461682597*^9}, {3.9041293383528423`*^9, 
   3.9041293929665203`*^9}, {3.904132431105404*^9, 3.9041324353777742`*^9}, {
   3.904132528011978*^9, 3.9041325403953295`*^9}, {3.9041375665718822`*^9, 
   3.90413757274329*^9}, {3.904137684652308*^9, 3.904137706242121*^9}, {
   3.904181104750471*^9, 3.9041811165901628`*^9}, {3.9041811977037897`*^9, 
   3.9041812198166895`*^9}, {3.904185964160454*^9, 3.9041859715218935`*^9}, {
   3.9048234255014477`*^9, 3.9048234449637356`*^9}, {3.904923511818484*^9, 
   3.9049235368756685`*^9}, {3.904958454859177*^9, 3.904958467985572*^9}, 
   3.9049621712363367`*^9, {3.905228690487384*^9, 3.9052287388504763`*^9}, {
   3.906515321667478*^9, 3.906515360346823*^9}, {3.906517369197037*^9, 
   3.906517396001253*^9}, {3.906526528310458*^9, 3.9065265556675696`*^9}, {
   3.9065427436907463`*^9, 3.9065427536964645`*^9}},
 CellLabel->
  "In[181]:=",ExpressionUUID->"47ab3939-fee4-4262-bbec-0810b25926a3"],

Cell[BoxData["0.9847763768335822`"], "Output",
 CellChangeTimes->{3.90654275454683*^9},
 CellLabel->
  "Out[181]=",ExpressionUUID->"04262be2-6b7c-476e-9343-77d8b73f1fd6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mediaPYRPyrA", "=", 
  RowBox[{"Mean", "[", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"Association", "@", 
      RowBox[{"Flatten", "[", "probPyrAtmp", "]"}]}], ",", 
     RowBox[{
      RowBox[{"#", ">", "0.5"}], "&"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.906542796373483*^9, 3.906542829896388*^9}},
 CellLabel->
  "In[182]:=",ExpressionUUID->"b978e813-a96c-4d92-b923-11202681da2b"],

Cell[BoxData["0.9413203130204099`"], "Output",
 CellChangeTimes->{3.9065428337531*^9},
 CellLabel->
  "Out[182]=",ExpressionUUID->"78e35540-7108-4f2f-856c-27f3d2fa9c84"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Copie - 01(trance b)  ", "Subsection",
 CellChangeTimes->{{3.9037856883091526`*^9, 3.9037856934467874`*^9}, {
   3.904105663446622*^9, 3.9041056661952486`*^9}, {3.9043056073379326`*^9, 
   3.904305608882037*^9}, {3.9043553671344004`*^9, 3.9043553672851057`*^9}, 
   3.904822545799284*^9, {3.9049234063450212`*^9, 3.904923409877516*^9}, 
   3.904965391478297*^9},ExpressionUUID->"c95cb763-0592-43fc-95f3-\
c358d052ade8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "filename", " ", "=", " ", 
   "\"\<neuronCopiesDatabase_pyr_2023_10_16_b\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dbcopie02", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{
     "filepath", "<>", "\"\<\\\\\>\"", "<>", "filename", "<>", 
      "\"\<.json\>\""}], ",", "\"\<RawJSON\>\""}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8708371643172398`*^9, 3.8708371649739227`*^9}, {
   3.870837205358247*^9, 3.8708372889594383`*^9}, {3.8708373717294827`*^9, 
   3.870837375102536*^9}, {3.8708374759074984`*^9, 3.870837491642853*^9}, {
   3.870837678301423*^9, 3.8708376808758116`*^9}, {3.870838008765304*^9, 
   3.8708380426274614`*^9}, {3.870838141648035*^9, 3.870838156343728*^9}, 
   3.870838188336751*^9, 3.8708389006803474`*^9, 3.8708395721715164`*^9, {
   3.899807266745392*^9, 3.899807277069441*^9}, {3.903707485682394*^9, 
   3.9037075063491807`*^9}, {3.903757621461687*^9, 3.903757634322569*^9}, {
   3.9037825871621637`*^9, 3.903782609008459*^9}, 3.903782733323086*^9, {
   3.903785723135454*^9, 3.903785733250041*^9}, {3.9049234167096615`*^9, 
   3.9049234217005315`*^9}, {3.9049240551999583`*^9, 3.9049240556584787`*^9}, 
   3.9049653941486425`*^9, {3.9065432803042297`*^9, 3.9065432827938414`*^9}, 
   3.912139567825816*^9},ExpressionUUID->"ab8dafb7-079f-4be4-a048-\
7882cf1fa006"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "@", 
  RowBox[{"Keys", "@", "dbcopie02"}]}]], "Input",
 CellChangeTimes->{{3.903782740277094*^9, 3.9037827801122212`*^9}, {
  3.903785730947415*^9, 3.9037857309925213`*^9}, {3.904923423292531*^9, 
  3.904923423322534*^9}, {3.9049240584596424`*^9, 3.9049240588223143`*^9}},
 CellLabel->
  "In[186]:=",ExpressionUUID->"440f0c80-3333-4bd9-a28c-b06cccbfce07"],

Cell[BoxData["178425"], "Output",
 CellChangeTimes->{
  3.903782618156659*^9, {3.9037827540094395`*^9, 3.9037827805693855`*^9}, 
   3.903785553305829*^9, 3.9037857369655743`*^9, 3.9040196845449157`*^9, 
   3.9041047036961255`*^9, 3.904183282834422*^9, 3.9041853575061393`*^9, 
   3.9043056488383493`*^9, 3.904355389195642*^9, 3.9047233138164215`*^9, 
   3.904723355192388*^9, 3.904822594014103*^9, 3.9048311524023933`*^9, 
   3.9048322372540708`*^9, 3.904878598658201*^9, 3.904923600498993*^9, 
   3.904924070594859*^9, 3.90495986205795*^9, 3.904965639009965*^9, 
   3.9049658934377317`*^9, 3.904991321448039*^9, 3.9052292784127893`*^9, 
   3.9065433296115065`*^9},
 CellLabel->
  "Out[186]=",ExpressionUUID->"65466da9-f0bd-437f-9af4-fb04c948ade7"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Classificazione con etichette", "Subsubsection",
 CellChangeTimes->{{3.9065363632432165`*^9, 
  3.9065363699495344`*^9}},ExpressionUUID->"b5b98f33-db5d-4aa2-bfd5-\
83bdfb6a3359"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"probPyrBtmp", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"probIntBtmp", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nRighe", "=", "40000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "nomi", ",", "probPyr", ",", "probInt", ",", "notNull", ",", "res", 
        ",", "meanProb", ",", "stdProb"}], "}"}], "=", 
      RowBox[{"classificaCopieEtichette", "[", 
       RowBox[{
        RowBox[{"dbcopie02", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"1", "+", 
            RowBox[{"nRighe", "*", "i"}]}], ";;", 
           RowBox[{"i", "+", 
            RowBox[{"nRighe", "*", "i"}], "+", "nRighe"}]}], "]"}], "]"}], 
        ",", "myClassifier01"}], "]"}]}], ";", "\n", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"probPyrBtmp", ",", 
       RowBox[{"Thread", "[", 
        RowBox[{"nomi", "->", "probPyr"}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"probIntBtmp", ",", 
       RowBox[{"Thread", "[", 
        RowBox[{"nomi", "->", "probInt"}], "]"}]}], "]"}], ";"}], 
    "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "0", ",", "2"}], "}"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.9049604667402463`*^9, 3.904960493775358*^9}, {
   3.9049605384322104`*^9, 3.904960555911672*^9}, {3.905227588714963*^9, 
   3.905227596130079*^9}, {3.90522765612468*^9, 3.9052276614924083`*^9}, 
   3.90522776878867*^9, 3.9052280495680633`*^9, {3.9065137155702996`*^9, 
   3.906513717448146*^9}, {3.9065162871336255`*^9, 3.9065163258545094`*^9}, {
   3.9065357598004513`*^9, 3.9065357975272017`*^9}, {3.9065358748907776`*^9, 
   3.9065361709132*^9}, {3.9065362089347143`*^9, 3.9065362102959557`*^9}, {
   3.9065363286261897`*^9, 3.9065363302702103`*^9}, {3.9065364235957136`*^9, 
   3.9065364354176393`*^9}, {3.9065433002240353`*^9, 3.9065433087981544`*^9}},
 CellLabel->
  "In[187]:=",ExpressionUUID->"7bc8872c-d0f7-44ca-a938-638242508159"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "@", 
  RowBox[{"Association", "@", 
   RowBox[{"Flatten", "@", "probPyrBtmp"}]}]}]], "Input",
 CellChangeTimes->{
  3.9065456205116625`*^9, {3.90654581529525*^9, 3.906545827946596*^9}},
 CellLabel->
  "In[211]:=",ExpressionUUID->"7b701cf3-8d35-420a-a381-0b4e1c6c5675"],

Cell[BoxData["120002"], "Output",
 CellChangeTimes->{
  3.9065456216115513`*^9, {3.9065458158586435`*^9, 3.90654582888484*^9}},
 CellLabel->
  "Out[211]=",ExpressionUUID->"ada94dbc-2ddc-4019-94a4-6f61704e5e18"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Do", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "nomi", ",", "probPyr", ",", "probInt", ",", "notNull", ",", "res", 
        ",", "meanProb", ",", "stdProb"}], "}"}], "=", 
      RowBox[{"classificaCopieEtichette", "[", 
       RowBox[{
        RowBox[{"dbcopie02", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"1", "+", 
            RowBox[{"nRighe", "*", "i"}]}], ";;", 
           RowBox[{"i", "+", 
            RowBox[{"nRighe", "*", "i"}], "+", "nRighe"}]}], "]"}], "]"}], 
        ",", "myClassifier01"}], "]"}]}], ";", "\n", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"probPyrBtmp", ",", 
       RowBox[{"Thread", "[", 
        RowBox[{"nomi", "->", "probPyr"}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"probIntBtmp", ",", 
       RowBox[{"Thread", "[", 
        RowBox[{"nomi", "->", "probInt"}], "]"}]}], "]"}], ";"}], 
    "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "3", ",", "4"}], "}"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.9065458503868113`*^9, 3.906545852047843*^9}},
 CellLabel->
  "In[212]:=",ExpressionUUID->"d58143e0-5a28-4ab7-bd54-2a92f834741d"],

Cell[BoxData[
 TemplateBox[{
  "Part", "take", 
   "\"Cannot take positions \\!\\(\\*RowBox[{\\\"160001\\\"}]\\) through \
\\!\\(\\*RowBox[{\\\"200004\\\"}]\\) in Association[<<1421006232 bytes>>].\"",
    2, 212, 8, 33634892442557134570, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9065466130019646`*^9},
 CellLabel->
  "During evaluation of \
In[212]:=",ExpressionUUID->"d5f8f720-fb8f-4db7-a150-4ae69eb44d9d"],

Cell[BoxData[
 TemplateBox[{
  "Keys", "invrl", 
   "\"The argument <<1421006376 bytes>>[[]] is not a valid Association or a \
list of rules.\"", 2, 212, 9, 33634892442557134570, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9065466160335073`*^9},
 CellLabel->
  "During evaluation of \
In[212]:=",ExpressionUUID->"b1357608-88a4-4e7c-8a50-88bc939abe12"],

Cell[BoxData[
 TemplateBox[{
  "Table", "iterb", 
   "\"Iterator {<<1452737488 bytes>>} does not have appropriate bounds.\"", 2,
    212, 10, 33634892442557134570, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9065466201760445`*^9},
 CellLabel->
  "During evaluation of \
In[212]:=",ExpressionUUID->"e41784e4-8619-4385-9f92-646afb1ed3db"],

Cell[BoxData[
 TemplateBox[{
  "Table", "iterb", 
   "\"Iterator {<<1452737488 bytes>>} does not have appropriate bounds.\"", 2,
    212, 11, 33634892442557134570, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.906546624043643*^9},
 CellLabel->
  "During evaluation of \
In[212]:=",ExpressionUUID->"8f10524c-6c9d-4071-a090-5e59c002c239"],

Cell[BoxData[
 TemplateBox[{
  "Table", "iterb", 
   "\"Iterator {<<1452737488 bytes>>} does not have appropriate bounds.\"", 2,
    212, 12, 33634892442557134570, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.906546627915167*^9},
 CellLabel->
  "During evaluation of \
In[212]:=",ExpressionUUID->"494389c9-d4d1-4db0-afd4-7ca61faae344"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Table\\\", \\\"::\\\", \
\\\"iterb\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 212, 13, 33634892442557134570, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9065466298693733`*^9},
 CellLabel->
  "During evaluation of \
In[212]:=",ExpressionUUID->"4931dc85-6601-4031-a68e-a18efb12fad8"],

Cell[BoxData[
 TemplateBox[{
  "Values", "invrl", 
   "\"The argument Table[<<4358218568 bytes>>] is not a valid Association or \
a list of rules.\"", 2, 212, 14, 33634892442557134570, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9065466355474367`*^9},
 CellLabel->
  "During evaluation of \
In[212]:=",ExpressionUUID->"29facedf-e114-4864-85f9-3d8667f43f7d"],

Cell[BoxData[
 TemplateBox[{
  "StandardDeviation", "shlen", 
   "\"The argument \\!\\(\\*RowBox[{\\\"{\\\", \\\"}\\\"}]\\) should have at \
least two elements.\"", 2, 212, 15, 33634892442557134570, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9065466376001787`*^9},
 CellLabel->
  "During evaluation of \
In[212]:=",ExpressionUUID->"98f332a0-335a-4106-86b9-986123848d30"],

Cell[BoxData[
 TemplateBox[{
  "StandardDeviation", "shlen", 
   "\"The argument \\!\\(\\*RowBox[{\\\"{\\\", \\\"}\\\"}]\\) should have at \
least two elements.\"", 2, 212, 16, 33634892442557134570, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.90654663953032*^9},
 CellLabel->
  "During evaluation of \
In[212]:=",ExpressionUUID->"0adb9c0c-e310-4ad6-b85a-50c378c487d1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "@", 
  RowBox[{"Association", "@", 
   RowBox[{"Flatten", "@", "probPyrBtmp"}]}]}]], "Input",
 CellLabel->
  "In[213]:=",ExpressionUUID->"79cc3bd7-ee22-44bd-a422-a6388f00ea48"],

Cell[BoxData["156635"], "Output",
 CellChangeTimes->{3.906546724202501*^9},
 CellLabel->
  "Out[213]=",ExpressionUUID->"2096c946-6a97-4ba7-bbf9-eca7d6d00ea5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "nomi", ",", "probPyr", ",", "probInt", ",", "notNull", ",", "res", ",", 
     "meanProb", ",", "stdProb"}], "}"}], "=", 
   RowBox[{"classificaCopieEtichette", "[", 
    RowBox[{
     RowBox[{"dbcopie02", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"1", "+", 
         RowBox[{"nRighe", "*", "5"}]}], ";;"}], "]"}], "]"}], ",", 
     "myClassifier01"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"probPyrBtmp", ",", 
    RowBox[{"Thread", "[", 
     RowBox[{"nomi", "->", "probPyr"}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"probIntBtmp", ",", 
    RowBox[{"Thread", "[", 
     RowBox[{"nomi", "->", "probInt"}], "]"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.906546136388754*^9, 3.906546143646473*^9}},
 CellLabel->
  "In[214]:=",ExpressionUUID->"225fc275-9ff5-4377-9c42-67403cf43d75"],

Cell[BoxData[
 TemplateBox[{
  "Part", "take", 
   "\"Cannot take positions \\!\\(\\*RowBox[{\\\"200001\\\"}]\\) through \
\\!\\(\\*RowBox[{\\\"-\\\", \\\"1\\\"}]\\) in Association[<<1452737240 \
bytes>>].\"", 2, 214, 17, 33634892442557134570, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9065467372065835`*^9},
 CellLabel->
  "During evaluation of \
In[214]:=",ExpressionUUID->"82d0b43e-643d-42b9-9caa-a27b76b5fd51"],

Cell[BoxData[
 TemplateBox[{
  "Keys", "invrl", 
   "\"The argument <<1452737368 bytes>>[[]] is not a valid Association or a \
list of rules.\"", 2, 214, 18, 33634892442557134570, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9065467400766153`*^9},
 CellLabel->
  "During evaluation of \
In[214]:=",ExpressionUUID->"794a4d71-004d-4d2e-91c3-ea268c5a83e2"],

Cell[BoxData[
 TemplateBox[{
  "Table", "iterb", 
   "\"Iterator {<<1452737472 bytes>>} does not have appropriate bounds.\"", 2,
    214, 19, 33634892442557134570, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9065467438816843`*^9},
 CellLabel->
  "During evaluation of \
In[214]:=",ExpressionUUID->"39cf16d0-371d-4e89-a2a4-cd328364869f"],

Cell[BoxData[
 TemplateBox[{
  "Table", "iterb", 
   "\"Iterator {<<1452737472 bytes>>} does not have appropriate bounds.\"", 2,
    214, 20, 33634892442557134570, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9065467476765924`*^9},
 CellLabel->
  "During evaluation of \
In[214]:=",ExpressionUUID->"049b00c1-d4a1-4d2f-84da-4ace67e74061"],

Cell[BoxData[
 TemplateBox[{
  "Table", "iterb", 
   "\"Iterator {<<1452737472 bytes>>} does not have appropriate bounds.\"", 2,
    214, 21, 33634892442557134570, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9065467515086927`*^9},
 CellLabel->
  "During evaluation of \
In[214]:=",ExpressionUUID->"1575c58c-f3bc-4daf-8e83-2c1a752bbcab"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Table\\\", \\\"::\\\", \
\\\"iterb\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 214, 22, 33634892442557134570, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9065467534634633`*^9},
 CellLabel->
  "During evaluation of \
In[214]:=",ExpressionUUID->"807acc0f-1a63-4867-b7ad-dfc8b825ce96"],

Cell[BoxData[
 TemplateBox[{
  "Values", "invrl", 
   "\"The argument Table[<<4358218520 bytes>>] is not a valid Association or \
a list of rules.\"", 2, 214, 23, 33634892442557134570, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9065467590827107`*^9},
 CellLabel->
  "During evaluation of \
In[214]:=",ExpressionUUID->"5895bc9a-8efe-401f-9b7e-f4ea5376a1c0"],

Cell[BoxData[
 TemplateBox[{
  "StandardDeviation", "shlen", 
   "\"The argument \\!\\(\\*RowBox[{\\\"{\\\", \\\"}\\\"}]\\) should have at \
least two elements.\"", 2, 214, 24, 33634892442557134570, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.906546760943622*^9},
 CellLabel->
  "During evaluation of \
In[214]:=",ExpressionUUID->"26bb93d9-6c5f-47e3-9dd5-04db20201285"],

Cell[BoxData[
 TemplateBox[{
  "StandardDeviation", "shlen", 
   "\"The argument \\!\\(\\*RowBox[{\\\"{\\\", \\\"}\\\"}]\\) should have at \
least two elements.\"", 2, 214, 25, 33634892442557134570, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9065467629333334`*^9},
 CellLabel->
  "During evaluation of \
In[214]:=",ExpressionUUID->"5979cd82-8a14-4f29-9f4e-851142113a52"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "@", 
  RowBox[{"Association", "@", 
   RowBox[{"Flatten", "@", "probPyrBtmp"}]}]}]], "Input",
 CellLabel->
  "In[217]:=",ExpressionUUID->"a799b3e6-94e0-4a6e-a7f6-007717f31a15"],

Cell[BoxData["156635"], "Output",
 CellChangeTimes->{3.9065471141015577`*^9},
 CellLabel->
  "Out[217]=",ExpressionUUID->"8a3e8c5e-a6ec-41e5-b85a-cfd340b55008"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"classificatiComeInterneuroniBtmp", "=", 
  RowBox[{"Length", "@", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"Association", "@", 
      RowBox[{"Flatten", "[", "probIntBtmp", "]"}]}], ",", 
     RowBox[{
      RowBox[{"#", ">", "0.5"}], "&"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.9065426668152666`*^9, 3.9065427165502667`*^9}, {
  3.906546163958131*^9, 3.9065461707028904`*^9}},
 CellLabel->
  "In[218]:=",ExpressionUUID->"f5c17ce3-aa8e-4fcd-9518-12d9d8fc0699"],

Cell[BoxData["8011"], "Output",
 CellChangeTimes->{3.906547121136693*^9},
 CellLabel->
  "Out[218]=",ExpressionUUID->"c73e9c2d-3224-45db-8ee5-8a314edefc54"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"classificatiComePiramidaliBtmp", "=", 
  RowBox[{"Length", "@", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"Association", "@", 
      RowBox[{"Flatten", "[", "probPyrBtmp", "]"}]}], ",", 
     RowBox[{
      RowBox[{"#", ">", "0.5"}], "&"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.9065426668152666`*^9, 3.906542735799653*^9}, {
  3.9065461679207788`*^9, 3.906546172537911*^9}},
 CellLabel->
  "In[219]:=",ExpressionUUID->"5fd40e63-317d-49bd-bd60-4e83faa352fc"],

Cell[BoxData["148624"], "Output",
 CellChangeTimes->{3.9065471227503414`*^9},
 CellLabel->
  "Out[219]=",ExpressionUUID->"4bda7630-e2d8-4154-b192-7d488dbc0346"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"accuratezzaB", "=", 
  RowBox[{
   RowBox[{"N", "@", "classificatiComePiramidaliBtmp"}], "/", 
   RowBox[{"(", 
    RowBox[{
    "classificatiComePiramidaliBtmp", "+", 
     "classificatiComeInterneuroniBtmp"}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.904096968222768*^9, 3.9040970097439203`*^9}, {
   3.9040974530854115`*^9, 3.904097461682597*^9}, {3.9041293383528423`*^9, 
   3.9041293929665203`*^9}, {3.904132431105404*^9, 3.9041324353777742`*^9}, {
   3.904132528011978*^9, 3.9041325403953295`*^9}, {3.9041375665718822`*^9, 
   3.90413757274329*^9}, {3.904137684652308*^9, 3.904137706242121*^9}, {
   3.904181104750471*^9, 3.9041811165901628`*^9}, {3.9041811977037897`*^9, 
   3.9041812198166895`*^9}, {3.904185964160454*^9, 3.9041859715218935`*^9}, {
   3.9048234255014477`*^9, 3.9048234449637356`*^9}, {3.904923511818484*^9, 
   3.9049235368756685`*^9}, {3.904958454859177*^9, 3.904958467985572*^9}, 
   3.9049621712363367`*^9, {3.905228690487384*^9, 3.9052287388504763`*^9}, {
   3.906515321667478*^9, 3.906515360346823*^9}, {3.906517369197037*^9, 
   3.906517396001253*^9}, {3.906526528310458*^9, 3.9065265556675696`*^9}, {
   3.9065427436907463`*^9, 3.9065427536964645`*^9}, {3.906546175702614*^9, 
   3.9065461825547028`*^9}},
 CellLabel->
  "In[220]:=",ExpressionUUID->"96eb8854-6cfd-4511-b041-260ec28a8177"],

Cell[BoxData["0.9488556197529288`"], "Output",
 CellChangeTimes->{3.9065471259257584`*^9},
 CellLabel->
  "Out[220]=",ExpressionUUID->"7d2b4685-bd7a-496c-ac2c-f34dfefac8d3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mediaPYRPyrB", "=", 
  RowBox[{"Mean", "[", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"Association", "@", 
      RowBox[{"Flatten", "[", "probPyrBtmp", "]"}]}], ",", 
     RowBox[{
      RowBox[{"#", ">", "0.5"}], "&"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.906542796373483*^9, 3.906542829896388*^9}, {
  3.906546184468568*^9, 3.906546186604127*^9}},
 CellLabel->
  "In[221]:=",ExpressionUUID->"31eace4b-eb4d-4728-80ec-9413b5f5d39c"],

Cell[BoxData["0.9740859745980021`"], "Output",
 CellChangeTimes->{3.9065471278784547`*^9},
 CellLabel->
  "Out[221]=",ExpressionUUID->"db265b9e-bbfa-425f-ae9c-919089588524"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Copie - 01(trance c)  ", "Subsection",
 CellChangeTimes->{{3.9037856883091526`*^9, 3.9037856934467874`*^9}, {
   3.904105663446622*^9, 3.9041056661952486`*^9}, {3.9043056073379326`*^9, 
   3.904305608882037*^9}, {3.9043553671344004`*^9, 3.9043553672851057`*^9}, 
   3.904822545799284*^9, {3.9049234063450212`*^9, 3.904923409877516*^9}, 
   3.904965391478297*^9, 
   3.904965536057248*^9},ExpressionUUID->"8faa539f-e81c-4910-8762-\
f41cd3c467cf"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "filename", " ", "=", " ", 
   "\"\<neuronCopiesDatabase_pyr_2023_10_16_c\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dbcopie02", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{
     "filepath", "<>", "\"\<\\\\\>\"", "<>", "filename", "<>", 
      "\"\<.json\>\""}], ",", "\"\<RawJSON\>\""}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8708371643172398`*^9, 3.8708371649739227`*^9}, {
   3.870837205358247*^9, 3.8708372889594383`*^9}, {3.8708373717294827`*^9, 
   3.870837375102536*^9}, {3.8708374759074984`*^9, 3.870837491642853*^9}, {
   3.870837678301423*^9, 3.8708376808758116`*^9}, {3.870838008765304*^9, 
   3.8708380426274614`*^9}, {3.870838141648035*^9, 3.870838156343728*^9}, 
   3.870838188336751*^9, 3.8708389006803474`*^9, 3.8708395721715164`*^9, {
   3.899807266745392*^9, 3.899807277069441*^9}, {3.903707485682394*^9, 
   3.9037075063491807`*^9}, {3.903757621461687*^9, 3.903757634322569*^9}, {
   3.9037825871621637`*^9, 3.903782609008459*^9}, 3.903782733323086*^9, {
   3.903785723135454*^9, 3.903785733250041*^9}, {3.9049234167096615`*^9, 
   3.9049234217005315`*^9}, {3.9049240551999583`*^9, 3.9049240556584787`*^9}, 
   3.9049653941486425`*^9, 3.9049655382993293`*^9, {3.906557350160348*^9, 
   3.9065573798256903`*^9}, 
   3.912139575101169*^9},ExpressionUUID->"195d930c-7f5f-4e26-807b-\
e7e7838f9502"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "@", 
  RowBox[{"Keys", "@", "dbcopie02"}]}]], "Input",
 CellChangeTimes->{{3.903782740277094*^9, 3.9037827801122212`*^9}, {
  3.903785730947415*^9, 3.9037857309925213`*^9}, {3.904923423292531*^9, 
  3.904923423322534*^9}, {3.9049240584596424`*^9, 3.9049240588223143`*^9}},
 CellLabel->
  "In[228]:=",ExpressionUUID->"a0d43197-38db-4183-af61-dc914b44932b"],

Cell[BoxData["81081"], "Output",
 CellChangeTimes->{
  3.903782618156659*^9, {3.9037827540094395`*^9, 3.9037827805693855`*^9}, 
   3.903785553305829*^9, 3.9037857369655743`*^9, 3.9040196845449157`*^9, 
   3.9041047036961255`*^9, 3.904183282834422*^9, 3.9041853575061393`*^9, 
   3.9043056488383493`*^9, 3.904355389195642*^9, 3.9047233138164215`*^9, 
   3.904723355192388*^9, 3.904822594014103*^9, 3.9048311524023933`*^9, 
   3.9048322372540708`*^9, 3.904878598658201*^9, 3.904923600498993*^9, 
   3.904924070594859*^9, 3.90495986205795*^9, 3.9049656581454806`*^9, 
   3.9049674250478573`*^9, 3.904993067260469*^9, 3.9052310471123834`*^9, 
   3.906557397699806*^9},
 CellLabel->
  "Out[228]=",ExpressionUUID->"5ccdf2ef-11fd-4b87-a9c0-7a7427012d4d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Classificazione con etichette", "Subsubsection",
 CellChangeTimes->{{3.9065363632432165`*^9, 
  3.9065363699495344`*^9}},ExpressionUUID->"46664c5c-6025-44fa-8f82-\
4ddf13c0a5fb"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"probPyrCtmp", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"probIntCtmp", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nRighe", "=", "40000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "nomi", ",", "probPyr", ",", "probInt", ",", "notNull", ",", "res", 
        ",", "meanProb", ",", "stdProb"}], "}"}], "=", 
      RowBox[{"classificaCopieEtichette", "[", 
       RowBox[{
        RowBox[{"dbcopie02", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"1", "+", 
            RowBox[{"nRighe", "*", "i"}]}], ";;", 
           RowBox[{"i", "+", 
            RowBox[{"nRighe", "*", "i"}], "+", "nRighe"}]}], "]"}], "]"}], 
        ",", "myClassifier01"}], "]"}]}], ";", "\n", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"probPyrCtmp", ",", 
       RowBox[{"Thread", "[", 
        RowBox[{"nomi", "->", "probPyr"}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"probIntCtmp", ",", 
       RowBox[{"Thread", "[", 
        RowBox[{"nomi", "->", "probInt"}], "]"}]}], "]"}], ";"}], 
    "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "0", ",", "1"}], "}"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.9049604667402463`*^9, 3.904960493775358*^9}, {
   3.9049605384322104`*^9, 3.904960555911672*^9}, {3.905227588714963*^9, 
   3.905227596130079*^9}, {3.90522765612468*^9, 3.9052276614924083`*^9}, 
   3.90522776878867*^9, 3.9052280495680633`*^9, {3.9065137155702996`*^9, 
   3.906513717448146*^9}, {3.9065162871336255`*^9, 3.9065163258545094`*^9}, {
   3.9065357598004513`*^9, 3.9065357975272017`*^9}, {3.9065358748907776`*^9, 
   3.9065361709132*^9}, {3.9065362089347143`*^9, 3.9065362102959557`*^9}, {
   3.9065363286261897`*^9, 3.9065363302702103`*^9}, {3.9065364235957136`*^9, 
   3.9065364354176393`*^9}, {3.9065433002240353`*^9, 
   3.9065433087981544`*^9}, {3.906557256384124*^9, 3.9065572974712114`*^9}, 
   3.9065574063558016`*^9},
 CellLabel->
  "In[229]:=",ExpressionUUID->"9abc0315-aeb7-41a2-86c3-9f33f8cedf41"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "@", 
  RowBox[{"Association", "@", 
   RowBox[{"Flatten", "@", "probPyrCtmp"}]}]}]], "Input",
 CellChangeTimes->{
  3.9065456205116625`*^9, {3.90654581529525*^9, 3.906545827946596*^9}, 
   3.906557262409644*^9},
 CellLabel->
  "In[233]:=",ExpressionUUID->"1980a8ad-ff08-44cd-9413-81b9dbf1ce9a"],

Cell[BoxData["80001"], "Output",
 CellChangeTimes->{
  3.9065456216115513`*^9, {3.9065458158586435`*^9, 3.90654582888484*^9}, 
   3.90656020629888*^9},
 CellLabel->
  "Out[233]=",ExpressionUUID->"d1f135a1-f5cf-4ec1-9bd2-720d9790b4c8"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "nomi", ",", "probPyr", ",", "probInt", ",", "notNull", ",", "res", ",", 
     "meanProb", ",", "stdProb"}], "}"}], "=", 
   RowBox[{"classificaCopieEtichette", "[", 
    RowBox[{
     RowBox[{"dbcopie02", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"1", "+", 
         RowBox[{"nRighe", "*", "2"}]}], ";;"}], "]"}], "]"}], ",", 
     "myClassifier01"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"probPyrCtmp", ",", 
    RowBox[{"Thread", "[", 
     RowBox[{"nomi", "->", "probPyr"}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"probIntCtmp", ",", 
    RowBox[{"Thread", "[", 
     RowBox[{"nomi", "->", "probInt"}], "]"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.906546136388754*^9, 3.906546143646473*^9}, {
   3.906557276272703*^9, 3.906557304434349*^9}, 3.9065574230553393`*^9, 
   3.906558413903632*^9},
 CellLabel->
  "In[234]:=",ExpressionUUID->"7fcb9d83-864b-49f4-a65a-63d52435cbf2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "@", 
  RowBox[{"Association", "@", 
   RowBox[{"Flatten", "@", "probPyrCtmp"}]}]}]], "Input",
 CellChangeTimes->{3.906557278888926*^9},
 CellLabel->
  "In[237]:=",ExpressionUUID->"9d82c09e-24ae-4e75-8bba-30bb5833a72c"],

Cell[BoxData["81081"], "Output",
 CellChangeTimes->{3.9065471141015577`*^9, 3.906560260649351*^9},
 CellLabel->
  "Out[237]=",ExpressionUUID->"1119846e-4140-4e8c-aeec-fef219584675"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"classificatiComeInterneuroniCtmp", "=", 
  RowBox[{"Length", "@", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"Association", "@", 
      RowBox[{"Flatten", "[", "probIntCtmp", "]"}]}], ",", 
     RowBox[{
      RowBox[{"#", ">", "0.5"}], "&"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.9065426668152666`*^9, 3.9065427165502667`*^9}, {
  3.906546163958131*^9, 3.9065461707028904`*^9}, {3.9065573207594223`*^9, 
  3.9065573268424854`*^9}},
 CellLabel->
  "In[238]:=",ExpressionUUID->"127264da-c1a8-41c5-9045-f8e04b7340a9"],

Cell[BoxData["1852"], "Output",
 CellChangeTimes->{3.906547121136693*^9, 3.906560264119274*^9},
 CellLabel->
  "Out[238]=",ExpressionUUID->"66483d53-c986-4813-8bbf-1823b0980e55"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"classificatiComePiramidaliCtmp", "=", 
  RowBox[{"Length", "@", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"Association", "@", 
      RowBox[{"Flatten", "[", "probPyrCtmp", "]"}]}], ",", 
     RowBox[{
      RowBox[{"#", ">", "0.5"}], "&"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.9065426668152666`*^9, 3.906542735799653*^9}, {
   3.9065461679207788`*^9, 3.906546172537911*^9}, 3.9065572889174447`*^9, 
   3.9065573284109154`*^9},
 CellLabel->
  "In[239]:=",ExpressionUUID->"979a7fc3-6402-4005-a220-41efd69c67b3"],

Cell[BoxData["79229"], "Output",
 CellChangeTimes->{3.9065471227503414`*^9, 3.906560265812463*^9},
 CellLabel->
  "Out[239]=",ExpressionUUID->"45f277c2-eb89-418a-ae52-f29ed89e9eb6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"accuratezzaC", "=", 
  RowBox[{
   RowBox[{"N", "@", "classificatiComePiramidaliCtmp"}], "/", 
   RowBox[{"(", 
    RowBox[{
    "classificatiComePiramidaliCtmp", "+", 
     "classificatiComeInterneuroniCtmp"}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.904096968222768*^9, 3.9040970097439203`*^9}, {
   3.9040974530854115`*^9, 3.904097461682597*^9}, {3.9041293383528423`*^9, 
   3.9041293929665203`*^9}, {3.904132431105404*^9, 3.9041324353777742`*^9}, {
   3.904132528011978*^9, 3.9041325403953295`*^9}, {3.9041375665718822`*^9, 
   3.90413757274329*^9}, {3.904137684652308*^9, 3.904137706242121*^9}, {
   3.904181104750471*^9, 3.9041811165901628`*^9}, {3.9041811977037897`*^9, 
   3.9041812198166895`*^9}, {3.904185964160454*^9, 3.9041859715218935`*^9}, {
   3.9048234255014477`*^9, 3.9048234449637356`*^9}, {3.904923511818484*^9, 
   3.9049235368756685`*^9}, {3.904958454859177*^9, 3.904958467985572*^9}, 
   3.9049621712363367`*^9, {3.905228690487384*^9, 3.9052287388504763`*^9}, {
   3.906515321667478*^9, 3.906515360346823*^9}, {3.906517369197037*^9, 
   3.906517396001253*^9}, {3.906526528310458*^9, 3.9065265556675696`*^9}, {
   3.9065427436907463`*^9, 3.9065427536964645`*^9}, {3.906546175702614*^9, 
   3.9065461825547028`*^9}, {3.9065573310008216`*^9, 3.9065573376047726`*^9}},
 CellLabel->
  "In[240]:=",ExpressionUUID->"3124907d-3bd2-468f-8e26-e6b348efa9cc"],

Cell[BoxData["0.9771586438253105`"], "Output",
 CellChangeTimes->{3.9065471259257584`*^9, 3.906560269484481*^9},
 CellLabel->
  "Out[240]=",ExpressionUUID->"715aedf2-c504-4cad-ae86-9e521e1bd837"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mediaPYRPyrC", "=", 
  RowBox[{"Mean", "[", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"Association", "@", 
      RowBox[{"Flatten", "[", "probPyrCtmp", "]"}]}], ",", 
     RowBox[{
      RowBox[{"#", ">", "0.5"}], "&"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.906542796373483*^9, 3.906542829896388*^9}, {
  3.906546184468568*^9, 3.906546186604127*^9}, {3.906557339963142*^9, 
  3.906557341938299*^9}},
 CellLabel->
  "In[241]:=",ExpressionUUID->"91713bfe-3527-43d8-844b-25f9742172c3"],

Cell[BoxData["0.9674082462149284`"], "Output",
 CellChangeTimes->{3.9065471278784547`*^9, 3.9065602727453365`*^9},
 CellLabel->
  "Out[241]=",ExpressionUUID->"b520241a-5b28-4db1-a886-78fb512d85b5"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Copie - 01(trance d)  ", "Subsection",
 CellChangeTimes->{{3.9037856883091526`*^9, 3.9037856934467874`*^9}, {
   3.904105663446622*^9, 3.9041056661952486`*^9}, {3.9043056073379326`*^9, 
   3.904305608882037*^9}, {3.9043553671344004`*^9, 3.9043553672851057`*^9}, 
   3.904822545799284*^9, {3.9049234063450212`*^9, 3.904923409877516*^9}, 
   3.904965391478297*^9, 3.904965536057248*^9, 
   3.904969709023775*^9},ExpressionUUID->"458e6b4c-5b8e-47f5-b27b-\
dcf916fb470a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "filename", " ", "=", " ", 
   "\"\<neuronCopiesDatabase_pyr_2023_10_16_d\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dbcopie02", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{
     "filepath", "<>", "\"\<\\\\\>\"", "<>", "filename", "<>", 
      "\"\<.json\>\""}], ",", "\"\<RawJSON\>\""}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8708371643172398`*^9, 3.8708371649739227`*^9}, {
   3.870837205358247*^9, 3.8708372889594383`*^9}, {3.8708373717294827`*^9, 
   3.870837375102536*^9}, {3.8708374759074984`*^9, 3.870837491642853*^9}, {
   3.870837678301423*^9, 3.8708376808758116`*^9}, {3.870838008765304*^9, 
   3.8708380426274614`*^9}, {3.870838141648035*^9, 3.870838156343728*^9}, 
   3.870838188336751*^9, 3.8708389006803474`*^9, 3.8708395721715164`*^9, {
   3.899807266745392*^9, 3.899807277069441*^9}, {3.903707485682394*^9, 
   3.9037075063491807`*^9}, {3.903757621461687*^9, 3.903757634322569*^9}, {
   3.9037825871621637`*^9, 3.903782609008459*^9}, 3.903782733323086*^9, {
   3.903785723135454*^9, 3.903785733250041*^9}, {3.9049234167096615`*^9, 
   3.9049234217005315`*^9}, {3.9049240551999583`*^9, 3.9049240556584787`*^9}, 
   3.9049653941486425`*^9, 3.9049655382993293`*^9, 3.9049697120211477`*^9, {
   3.9066026690119295`*^9, 3.90660267010795*^9}, 
   3.9121395790675716`*^9},ExpressionUUID->"a774371b-8cfd-4922-b4cc-\
25b3d302cfa7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "@", 
  RowBox[{"Keys", "@", "dbcopie02"}]}]], "Input",
 CellChangeTimes->{{3.903782740277094*^9, 3.9037827801122212`*^9}, {
  3.903785730947415*^9, 3.9037857309925213`*^9}, {3.904923423292531*^9, 
  3.904923423322534*^9}, {3.9049240584596424`*^9, 3.9049240588223143`*^9}},
 CellLabel->
  "In[280]:=",ExpressionUUID->"d10d32d4-d68a-4366-a63f-2390cddb58cc"],

Cell[BoxData["149498"], "Output",
 CellChangeTimes->{
  3.903782618156659*^9, {3.9037827540094395`*^9, 3.9037827805693855`*^9}, 
   3.903785553305829*^9, 3.9037857369655743`*^9, 3.9040196845449157`*^9, 
   3.9041047036961255`*^9, 3.904183282834422*^9, 3.9041853575061393`*^9, 
   3.9043056488383493`*^9, 3.904355389195642*^9, 3.9047233138164215`*^9, 
   3.904723355192388*^9, 3.904822594014103*^9, 3.9048311524023933`*^9, 
   3.9048322372540708`*^9, 3.904878598658201*^9, 3.904923600498993*^9, 
   3.904924070594859*^9, 3.90495986205795*^9, 3.9049656581454806`*^9, 
   3.9049674250478573`*^9, {3.9049698146386013`*^9, 3.904969837700716*^9}, 
   3.9049852790989475`*^9, 3.9052323650431004`*^9, 3.9066026932731023`*^9},
 CellLabel->
  "Out[280]=",ExpressionUUID->"347000cb-7c95-4b11-9f54-86bdf5c2726f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Classificazione con etichette", "Subsubsection",
 CellChangeTimes->{{3.9065363632432165`*^9, 
  3.9065363699495344`*^9}},ExpressionUUID->"5d544bb8-953f-487e-b061-\
62e65d8b9994"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"probPyrDtmp", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"probIntDtmp", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nRighe", "=", "40000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "nomi", ",", "probPyr", ",", "probInt", ",", "notNull", ",", "res", 
        ",", "meanProb", ",", "stdProb"}], "}"}], "=", 
      RowBox[{"classificaCopieEtichette", "[", 
       RowBox[{
        RowBox[{"dbcopie02", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"1", "+", 
            RowBox[{"nRighe", "*", "i"}]}], ";;", 
           RowBox[{"i", "+", 
            RowBox[{"nRighe", "*", "i"}], "+", "nRighe"}]}], "]"}], "]"}], 
        ",", "myClassifier01"}], "]"}]}], ";", "\n", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"probPyrDtmp", ",", 
       RowBox[{"Thread", "[", 
        RowBox[{"nomi", "->", "probPyr"}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"probIntDtmp", ",", 
       RowBox[{"Thread", "[", 
        RowBox[{"nomi", "->", "probInt"}], "]"}]}], "]"}], ";"}], 
    "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "0", ",", "2"}], "}"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.9049604667402463`*^9, 3.904960493775358*^9}, {
   3.9049605384322104`*^9, 3.904960555911672*^9}, {3.905227588714963*^9, 
   3.905227596130079*^9}, {3.90522765612468*^9, 3.9052276614924083`*^9}, 
   3.90522776878867*^9, 3.9052280495680633`*^9, {3.9065137155702996`*^9, 
   3.906513717448146*^9}, {3.9065162871336255`*^9, 3.9065163258545094`*^9}, {
   3.9065357598004513`*^9, 3.9065357975272017`*^9}, {3.9065358748907776`*^9, 
   3.9065361709132*^9}, {3.9065362089347143`*^9, 3.9065362102959557`*^9}, {
   3.9065363286261897`*^9, 3.9065363302702103`*^9}, {3.9065364235957136`*^9, 
   3.9065364354176393`*^9}, {3.9065433002240353`*^9, 
   3.9065433087981544`*^9}, {3.906557256384124*^9, 3.9065572974712114`*^9}, 
   3.9065574063558016`*^9, {3.906562350977069*^9, 3.9065623728489385`*^9}, 
   3.906562428380234*^9, {3.9066004309673996`*^9, 3.9066004544856796`*^9}, 
   3.9066005057806644`*^9, {3.906600974243191*^9, 3.906600990460407*^9}, 
   3.9066027023191814`*^9},
 CellLabel->
  "In[281]:=",ExpressionUUID->"15128ce6-9f16-4359-bf72-5702b6d27c89"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "@", 
  RowBox[{"Association", "@", 
   RowBox[{"Flatten", "@", "probPyrDtmp"}]}]}]], "Input",
 CellChangeTimes->{
  3.9065456205116625`*^9, {3.90654581529525*^9, 3.906545827946596*^9}, 
   3.906557262409644*^9, 3.906562359488572*^9, 3.906600442924019*^9, 
   3.906600982869232*^9},
 CellLabel->
  "In[285]:=",ExpressionUUID->"dbe1ae05-d4ac-4641-b42f-5f625b9fcbd1"],

Cell[BoxData["109348"], "Output",
 CellChangeTimes->{3.906604869020357*^9},
 CellLabel->
  "Out[285]=",ExpressionUUID->"923dd686-bd7c-4f13-9d18-586bcf146970"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "nomi", ",", "probPyr", ",", "probInt", ",", "notNull", ",", "res", ",", 
     "meanProb", ",", "stdProb"}], "}"}], "=", 
   RowBox[{"classificaCopieEtichette", "[", 
    RowBox[{
     RowBox[{"dbcopie02", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"1", "+", 
         RowBox[{"nRighe", "*", "3"}]}], ";;"}], "]"}], "]"}], ",", 
     "myClassifier01"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"probPyrDtmp", ",", 
    RowBox[{"Thread", "[", 
     RowBox[{"nomi", "->", "probPyr"}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"probIntDtmp", ",", 
    RowBox[{"Thread", "[", 
     RowBox[{"nomi", "->", "probInt"}], "]"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.906546136388754*^9, 3.906546143646473*^9}, {
   3.906557276272703*^9, 3.906557304434349*^9}, 3.9065574230553393`*^9, 
   3.906558413903632*^9, {3.906562360819792*^9, 3.9065623740330667`*^9}, 
   3.9065624337130046`*^9, {3.9066004450880365`*^9, 3.9066004563149757`*^9}, 
   3.9066005081730623`*^9, {3.906600983614375*^9, 3.906600992011701*^9}, 
   3.9066027053546333`*^9},
 CellLabel->
  "In[286]:=",ExpressionUUID->"07a7037d-59b5-419a-ab32-f56f14e2e162"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "@", 
  RowBox[{"Association", "@", 
   RowBox[{"Flatten", "@", "probPyrDtmp"}]}]}]], "Input",
 CellChangeTimes->{3.906557278888926*^9, 3.906562362231865*^9, 
  3.9066004465120707`*^9, 3.9066009846169543`*^9},
 CellLabel->
  "In[289]:=",ExpressionUUID->"cc0bff45-a405-480d-8238-6f476db047d5"],

Cell[BoxData["138844"], "Output",
 CellChangeTimes->{3.9066054507468023`*^9},
 CellLabel->
  "Out[289]=",ExpressionUUID->"9cc8d8ec-f37a-42bf-ab27-8b4c44e50b62"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"classificatiComeInterneuroniDtmp", "=", 
  RowBox[{"Length", "@", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"Association", "@", 
      RowBox[{"Flatten", "[", "probIntDtmp", "]"}]}], ",", 
     RowBox[{
      RowBox[{"#", ">", "0.5"}], "&"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.9065426668152666`*^9, 3.9065427165502667`*^9}, {
  3.906546163958131*^9, 3.9065461707028904`*^9}, {3.9065573207594223`*^9, 
  3.9065573268424854`*^9}, {3.9065623764098454`*^9, 3.9065623798382616`*^9}, {
  3.906600458080119*^9, 3.9066004616868415`*^9}, {3.906600994000451*^9, 
  3.906600996820153*^9}},
 CellLabel->
  "In[290]:=",ExpressionUUID->"29928d48-0c31-4b5c-bdc9-a0e310571b09"],

Cell[BoxData["25855"], "Output",
 CellChangeTimes->{3.906605456934618*^9},
 CellLabel->
  "Out[290]=",ExpressionUUID->"21b9895d-19b5-4d4f-ab28-d62129ba4d1e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"classificatiComePiramidaliDtmp", "=", 
  RowBox[{"Length", "@", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"Association", "@", 
      RowBox[{"Flatten", "[", "probPyrDtmp", "]"}]}], ",", 
     RowBox[{
      RowBox[{"#", ">", "0.5"}], "&"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.9065426668152666`*^9, 3.906542735799653*^9}, {
   3.9065461679207788`*^9, 3.906546172537911*^9}, 3.9065572889174447`*^9, 
   3.9065573284109154`*^9, {3.906562366161508*^9, 3.9065623818200073`*^9}, {
   3.9066004491367188`*^9, 3.906600463510515*^9}, {3.906600986829708*^9, 
   3.906600998979685*^9}},
 CellLabel->
  "In[291]:=",ExpressionUUID->"70f78dec-55f0-4813-8b1e-595efc626fc4"],

Cell[BoxData["112989"], "Output",
 CellChangeTimes->{3.906605458591855*^9},
 CellLabel->
  "Out[291]=",ExpressionUUID->"d05779ee-5984-4e70-a253-7e314b3b5d41"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"accuratezzaD", "=", 
  RowBox[{
   RowBox[{"N", "@", "classificatiComePiramidaliDtmp"}], "/", 
   RowBox[{"(", 
    RowBox[{
    "classificatiComePiramidaliDtmp", "+", 
     "classificatiComeInterneuroniDtmp"}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.904096968222768*^9, 3.9040970097439203`*^9}, {
   3.9040974530854115`*^9, 3.904097461682597*^9}, {3.9041293383528423`*^9, 
   3.9041293929665203`*^9}, {3.904132431105404*^9, 3.9041324353777742`*^9}, {
   3.904132528011978*^9, 3.9041325403953295`*^9}, {3.9041375665718822`*^9, 
   3.90413757274329*^9}, {3.904137684652308*^9, 3.904137706242121*^9}, {
   3.904181104750471*^9, 3.9041811165901628`*^9}, {3.9041811977037897`*^9, 
   3.9041812198166895`*^9}, {3.904185964160454*^9, 3.9041859715218935`*^9}, {
   3.9048234255014477`*^9, 3.9048234449637356`*^9}, {3.904923511818484*^9, 
   3.9049235368756685`*^9}, {3.904958454859177*^9, 3.904958467985572*^9}, 
   3.9049621712363367`*^9, {3.905228690487384*^9, 3.9052287388504763`*^9}, {
   3.906515321667478*^9, 3.906515360346823*^9}, {3.906517369197037*^9, 
   3.906517396001253*^9}, {3.906526528310458*^9, 3.9065265556675696`*^9}, {
   3.9065427436907463`*^9, 3.9065427536964645`*^9}, {3.906546175702614*^9, 
   3.9065461825547028`*^9}, {3.9065573310008216`*^9, 
   3.9065573376047726`*^9}, {3.906562383881546*^9, 3.906562390154877*^9}, {
   3.9066004669287415`*^9, 3.9066004755251236`*^9}, {3.9066010007005043`*^9, 
   3.9066010116217318`*^9}},
 CellLabel->
  "In[292]:=",ExpressionUUID->"74742785-e224-4592-bea1-03513635b046"],

Cell[BoxData["0.813783814928985`"], "Output",
 CellChangeTimes->{3.9066054605427203`*^9},
 CellLabel->
  "Out[292]=",ExpressionUUID->"7af801b2-02c3-419a-b425-26d25d7bdb48"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mediaPYRPyrD", "=", 
  RowBox[{"Mean", "[", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"Association", "@", 
      RowBox[{"Flatten", "[", "probPyrDtmp", "]"}]}], ",", 
     RowBox[{
      RowBox[{"#", ">", "0.5"}], "&"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.906542796373483*^9, 3.906542829896388*^9}, {
   3.906546184468568*^9, 3.906546186604127*^9}, {3.906557339963142*^9, 
   3.906557341938299*^9}, 3.9065623922373433`*^9, 3.906594421653817*^9, {
   3.9066004772459283`*^9, 3.9066004801895833`*^9}, {3.9066010051599865`*^9, 
   3.9066010141172595`*^9}},
 CellLabel->
  "In[293]:=",ExpressionUUID->"83ab65c1-dbc2-4603-af7b-975b49c8699c"],

Cell[BoxData["0.9319355778129293`"], "Output",
 CellChangeTimes->{3.906605462159918*^9},
 CellLabel->
  "Out[293]=",ExpressionUUID->"44b66d05-8293-4696-bbbe-70968bbb73d4"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Copie - 01(trance e)  ", "Subsection",
 CellChangeTimes->{{3.9037856883091526`*^9, 3.9037856934467874`*^9}, {
   3.904105663446622*^9, 3.9041056661952486`*^9}, {3.9043056073379326`*^9, 
   3.904305608882037*^9}, {3.9043553671344004`*^9, 3.9043553672851057`*^9}, 
   3.904822545799284*^9, {3.9049234063450212`*^9, 3.904923409877516*^9}, 
   3.904965391478297*^9, 3.904965536057248*^9, 
   3.9049656893801737`*^9},ExpressionUUID->"e49adb37-6ad3-488e-9547-\
f3b51e452f84"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "filename", " ", "=", " ", 
   "\"\<neuronCopiesDatabase_pyr_2023_10_16_e\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dbcopie02", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{
     "filepath", "<>", "\"\<\\\\\>\"", "<>", "filename", "<>", 
      "\"\<.json\>\""}], ",", "\"\<RawJSON\>\""}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8708371643172398`*^9, 3.8708371649739227`*^9}, {
   3.870837205358247*^9, 3.8708372889594383`*^9}, {3.8708373717294827`*^9, 
   3.870837375102536*^9}, {3.8708374759074984`*^9, 3.870837491642853*^9}, {
   3.870837678301423*^9, 3.8708376808758116`*^9}, {3.870838008765304*^9, 
   3.8708380426274614`*^9}, {3.870838141648035*^9, 3.870838156343728*^9}, 
   3.870838188336751*^9, 3.8708389006803474`*^9, 3.8708395721715164`*^9, {
   3.899807266745392*^9, 3.899807277069441*^9}, {3.903707485682394*^9, 
   3.9037075063491807`*^9}, {3.903757621461687*^9, 3.903757634322569*^9}, {
   3.9037825871621637`*^9, 3.903782609008459*^9}, 3.903782733323086*^9, {
   3.903785723135454*^9, 3.903785733250041*^9}, {3.9049234167096615`*^9, 
   3.9049234217005315`*^9}, {3.9049240551999583`*^9, 3.9049240556584787`*^9}, 
   3.9049653941486425`*^9, 3.9049655382993293`*^9, 3.9049656923012185`*^9, {
   3.9065624012321925`*^9, 3.9065624023312054`*^9}, 
   3.912139583674157*^9},ExpressionUUID->"a4e60bbf-547a-4353-a36b-\
6fb456fcbfa9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "@", 
  RowBox[{"Keys", "@", "dbcopie02"}]}]], "Input",
 CellChangeTimes->{{3.903782740277094*^9, 3.9037827801122212`*^9}, {
  3.903785730947415*^9, 3.9037857309925213`*^9}, {3.904923423292531*^9, 
  3.904923423322534*^9}, {3.9049240584596424`*^9, 3.9049240588223143`*^9}},
 CellLabel->
  "In[245]:=",ExpressionUUID->"5ce74353-2b46-45ce-b2d5-9511901b579e"],

Cell[BoxData["136686"], "Output",
 CellChangeTimes->{
  3.903782618156659*^9, {3.9037827540094395`*^9, 3.9037827805693855`*^9}, 
   3.903785553305829*^9, 3.9037857369655743`*^9, 3.9040196845449157`*^9, 
   3.9041047036961255`*^9, 3.904183282834422*^9, 3.9041853575061393`*^9, 
   3.9043056488383493`*^9, 3.904355389195642*^9, 3.9047233138164215`*^9, 
   3.904723355192388*^9, 3.904822594014103*^9, 3.9048311524023933`*^9, 
   3.9048322372540708`*^9, 3.904878598658201*^9, 3.904923600498993*^9, 
   3.904924070594859*^9, 3.90495986205795*^9, 3.9049656581454806`*^9, 
   3.904965777692341*^9, 3.90496838278246*^9, 3.904989230918764*^9, 
   3.905233423715315*^9, 3.906562421328806*^9},
 CellLabel->
  "Out[245]=",ExpressionUUID->"14d4ceb3-a110-4184-8cc4-76b7f0aac22a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Classificazione con etichette", "Subsubsection",
 CellChangeTimes->{{3.9065363632432165`*^9, 
  3.9065363699495344`*^9}},ExpressionUUID->"0b0b3cf7-017e-411d-85a8-\
960567694325"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"probPyrEtmp", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"probIntRtmp", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nRighe", "=", "40000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "nomi", ",", "probPyr", ",", "probInt", ",", "notNull", ",", "res", 
        ",", "meanProb", ",", "stdProb"}], "}"}], "=", 
      RowBox[{"classificaCopieEtichette", "[", 
       RowBox[{
        RowBox[{"dbcopie02", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"1", "+", 
            RowBox[{"nRighe", "*", "i"}]}], ";;", 
           RowBox[{"i", "+", 
            RowBox[{"nRighe", "*", "i"}], "+", "nRighe"}]}], "]"}], "]"}], 
        ",", "myClassifier01"}], "]"}]}], ";", "\n", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"probPyrEtmp", ",", 
       RowBox[{"Thread", "[", 
        RowBox[{"nomi", "->", "probPyr"}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"probIntRtmp", ",", 
       RowBox[{"Thread", "[", 
        RowBox[{"nomi", "->", "probInt"}], "]"}]}], "]"}], ";"}], 
    "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "0", ",", "2"}], "}"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.9049604667402463`*^9, 3.904960493775358*^9}, {
   3.9049605384322104`*^9, 3.904960555911672*^9}, {3.905227588714963*^9, 
   3.905227596130079*^9}, {3.90522765612468*^9, 3.9052276614924083`*^9}, 
   3.90522776878867*^9, 3.9052280495680633`*^9, {3.9065137155702996`*^9, 
   3.906513717448146*^9}, {3.9065162871336255`*^9, 3.9065163258545094`*^9}, {
   3.9065357598004513`*^9, 3.9065357975272017`*^9}, {3.9065358748907776`*^9, 
   3.9065361709132*^9}, {3.9065362089347143`*^9, 3.9065362102959557`*^9}, {
   3.9065363286261897`*^9, 3.9065363302702103`*^9}, {3.9065364235957136`*^9, 
   3.9065364354176393`*^9}, {3.9065433002240353`*^9, 
   3.9065433087981544`*^9}, {3.906557256384124*^9, 3.9065572974712114`*^9}, 
   3.9065574063558016`*^9, {3.906562350977069*^9, 3.9065623728489385`*^9}, 
   3.906562428380234*^9},
 CellLabel->
  "In[246]:=",ExpressionUUID->"c5e0f018-3246-4f8c-96a8-2ef0f509cb83"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "@", 
  RowBox[{"Association", "@", 
   RowBox[{"Flatten", "@", "probPyrEtmp"}]}]}]], "Input",
 CellChangeTimes->{
  3.9065456205116625`*^9, {3.90654581529525*^9, 3.906545827946596*^9}, 
   3.906557262409644*^9, 3.906562359488572*^9},
 CellLabel->
  "In[250]:=",ExpressionUUID->"000a9e35-2fe8-4ee9-952e-d7ddb0ae2a0b"],

Cell[BoxData["119986"], "Output",
 CellChangeTimes->{
  3.9065456216115513`*^9, {3.9065458158586435`*^9, 3.90654582888484*^9}, 
   3.90656020629888*^9, 3.9065707713156347`*^9},
 CellLabel->
  "Out[250]=",ExpressionUUID->"aac197fd-2482-4d1e-9f3b-81b49de02037"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "nomi", ",", "probPyr", ",", "probInt", ",", "notNull", ",", "res", ",", 
     "meanProb", ",", "stdProb"}], "}"}], "=", 
   RowBox[{"classificaCopieEtichette", "[", 
    RowBox[{
     RowBox[{"dbcopie02", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"1", "+", 
         RowBox[{"nRighe", "*", "3"}]}], ";;"}], "]"}], "]"}], ",", 
     "myClassifier01"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"probPyrEtmp", ",", 
    RowBox[{"Thread", "[", 
     RowBox[{"nomi", "->", "probPyr"}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"probIntRtmp", ",", 
    RowBox[{"Thread", "[", 
     RowBox[{"nomi", "->", "probInt"}], "]"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.906546136388754*^9, 3.906546143646473*^9}, {
   3.906557276272703*^9, 3.906557304434349*^9}, 3.9065574230553393`*^9, 
   3.906558413903632*^9, {3.906562360819792*^9, 3.9065623740330667`*^9}, 
   3.9065624337130046`*^9},
 CellLabel->
  "In[251]:=",ExpressionUUID->"e7af3acc-41fc-44c8-8814-fdea7978f1a5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "@", 
  RowBox[{"Association", "@", 
   RowBox[{"Flatten", "@", "probPyrEtmp"}]}]}]], "Input",
 CellChangeTimes->{3.906557278888926*^9, 3.906562362231865*^9},
 CellLabel->
  "In[254]:=",ExpressionUUID->"0f70fbee-d9b0-48a1-b19f-4a274439dc3f"],

Cell[BoxData["136410"], "Output",
 CellChangeTimes->{3.9065471141015577`*^9, 3.906560260649351*^9, 
  3.9065943970164776`*^9},
 CellLabel->
  "Out[254]=",ExpressionUUID->"25d20a06-46c1-4f11-bb5e-30b55e04c404"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"classificatiComeInterneuroniEtmp", "=", 
  RowBox[{"Length", "@", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"Association", "@", 
      RowBox[{"Flatten", "[", "probIntRtmp", "]"}]}], ",", 
     RowBox[{
      RowBox[{"#", ">", "0.5"}], "&"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.9065426668152666`*^9, 3.9065427165502667`*^9}, {
  3.906546163958131*^9, 3.9065461707028904`*^9}, {3.9065573207594223`*^9, 
  3.9065573268424854`*^9}, {3.9065623764098454`*^9, 3.9065623798382616`*^9}},
 CellLabel->
  "In[255]:=",ExpressionUUID->"49dcb8b8-7ea0-427b-ae40-953df1451ea2"],

Cell[BoxData["5928"], "Output",
 CellChangeTimes->{3.906547121136693*^9, 3.906560264119274*^9, 
  3.9065944048904*^9},
 CellLabel->
  "Out[255]=",ExpressionUUID->"5df8161f-4fbf-40a8-8e5f-e3018b1395a4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"classificatiComePiramidaliEtmp", "=", 
  RowBox[{"Length", "@", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"Association", "@", 
      RowBox[{"Flatten", "[", "probPyrEtmp", "]"}]}], ",", 
     RowBox[{
      RowBox[{"#", ">", "0.5"}], "&"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.9065426668152666`*^9, 3.906542735799653*^9}, {
   3.9065461679207788`*^9, 3.906546172537911*^9}, 3.9065572889174447`*^9, 
   3.9065573284109154`*^9, {3.906562366161508*^9, 3.9065623818200073`*^9}},
 CellLabel->
  "In[256]:=",ExpressionUUID->"7234c607-5512-4ccb-aece-21dd63e95ef0"],

Cell[BoxData["130482"], "Output",
 CellChangeTimes->{3.9065471227503414`*^9, 3.906560265812463*^9, 
  3.906594407203867*^9},
 CellLabel->
  "Out[256]=",ExpressionUUID->"7c2b7c47-c8aa-44de-a34a-ae3ac1730a9f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"accuratezzaE", "=", 
  RowBox[{
   RowBox[{"N", "@", "classificatiComePiramidaliEtmp"}], "/", 
   RowBox[{"(", 
    RowBox[{
    "classificatiComePiramidaliEtmp", "+", 
     "classificatiComeInterneuroniEtmp"}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.904096968222768*^9, 3.9040970097439203`*^9}, {
   3.9040974530854115`*^9, 3.904097461682597*^9}, {3.9041293383528423`*^9, 
   3.9041293929665203`*^9}, {3.904132431105404*^9, 3.9041324353777742`*^9}, {
   3.904132528011978*^9, 3.9041325403953295`*^9}, {3.9041375665718822`*^9, 
   3.90413757274329*^9}, {3.904137684652308*^9, 3.904137706242121*^9}, {
   3.904181104750471*^9, 3.9041811165901628`*^9}, {3.9041811977037897`*^9, 
   3.9041812198166895`*^9}, {3.904185964160454*^9, 3.9041859715218935`*^9}, {
   3.9048234255014477`*^9, 3.9048234449637356`*^9}, {3.904923511818484*^9, 
   3.9049235368756685`*^9}, {3.904958454859177*^9, 3.904958467985572*^9}, 
   3.9049621712363367`*^9, {3.905228690487384*^9, 3.9052287388504763`*^9}, {
   3.906515321667478*^9, 3.906515360346823*^9}, {3.906517369197037*^9, 
   3.906517396001253*^9}, {3.906526528310458*^9, 3.9065265556675696`*^9}, {
   3.9065427436907463`*^9, 3.9065427536964645`*^9}, {3.906546175702614*^9, 
   3.9065461825547028`*^9}, {3.9065573310008216`*^9, 
   3.9065573376047726`*^9}, {3.906562383881546*^9, 3.906562390154877*^9}},
 CellLabel->
  "In[257]:=",ExpressionUUID->"fde621a7-33a2-48a0-9f30-6eefe4d20619"],

Cell[BoxData["0.9565427754563448`"], "Output",
 CellChangeTimes->{3.9065471259257584`*^9, 3.906560269484481*^9, 
  3.906594410243905*^9},
 CellLabel->
  "Out[257]=",ExpressionUUID->"02cb4eb4-45e9-4e87-a4c8-a6040861d562"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mediaPYRPyrE", "=", 
  RowBox[{"Mean", "[", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"Association", "@", 
      RowBox[{"Flatten", "[", "probPyrEtmp", "]"}]}], ",", 
     RowBox[{
      RowBox[{"#", ">", "0.5"}], "&"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.906542796373483*^9, 3.906542829896388*^9}, {
   3.906546184468568*^9, 3.906546186604127*^9}, {3.906557339963142*^9, 
   3.906557341938299*^9}, 3.9065623922373433`*^9, 3.906594421653817*^9},
 CellLabel->
  "In[259]:=",ExpressionUUID->"31abbbcc-b485-40fb-a437-710e4574a352"],

Cell[BoxData["0.9657183731427322`"], "Output",
 CellChangeTimes->{
  3.9065471278784547`*^9, 3.9065602727453365`*^9, {3.9065944130505457`*^9, 
   3.906594423558408*^9}},
 CellLabel->
  "Out[259]=",ExpressionUUID->"2df4e675-5e19-40a5-9793-a465fe1a96ff"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"probIntEtmp", "=", "probIntRtmp"}], ";"}]], "Input",
 CellChangeTimes->{{3.9066291396958103`*^9, 3.906629143704791*^9}},
 CellLabel->
  "In[295]:=",ExpressionUUID->"54364e20-8c93-44ab-a8c6-fba93cf4f6d3"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Copie - 01(trance f)  ", "Subsection",
 CellChangeTimes->{{3.9037856883091526`*^9, 3.9037856934467874`*^9}, {
   3.904105663446622*^9, 3.9041056661952486`*^9}, {3.9043056073379326`*^9, 
   3.904305608882037*^9}, {3.9043553671344004`*^9, 3.9043553672851057`*^9}, 
   3.904822545799284*^9, {3.9049234063450212`*^9, 3.904923409877516*^9}, 
   3.904965391478297*^9, 3.904965536057248*^9, 3.9049656893801737`*^9, 
   3.9066004202948165`*^9},ExpressionUUID->"309e550d-ed28-4bae-a0c6-\
561907653fb1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "filename", " ", "=", " ", 
   "\"\<neuronCopiesDatabase_pyr_2023_10_16_f\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dbcopie02", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{
     "filepath", "<>", "\"\<\\\\\>\"", "<>", "filename", "<>", 
      "\"\<.json\>\""}], ",", "\"\<RawJSON\>\""}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8708371643172398`*^9, 3.8708371649739227`*^9}, {
   3.870837205358247*^9, 3.8708372889594383`*^9}, {3.8708373717294827`*^9, 
   3.870837375102536*^9}, {3.8708374759074984`*^9, 3.870837491642853*^9}, {
   3.870837678301423*^9, 3.8708376808758116`*^9}, {3.870838008765304*^9, 
   3.8708380426274614`*^9}, {3.870838141648035*^9, 3.870838156343728*^9}, 
   3.870838188336751*^9, 3.8708389006803474`*^9, 3.8708395721715164`*^9, {
   3.899807266745392*^9, 3.899807277069441*^9}, {3.903707485682394*^9, 
   3.9037075063491807`*^9}, {3.903757621461687*^9, 3.903757634322569*^9}, {
   3.9037825871621637`*^9, 3.903782609008459*^9}, 3.903782733323086*^9, {
   3.903785723135454*^9, 3.903785733250041*^9}, {3.9049234167096615`*^9, 
   3.9049234217005315`*^9}, {3.9049240551999583`*^9, 3.9049240556584787`*^9}, 
   3.9049653941486425`*^9, 3.9049655382993293`*^9, 3.9049656923012185`*^9, {
   3.9065624012321925`*^9, 3.9065624023312054`*^9}, 3.9066004229564915`*^9, 
   3.9121395875360885`*^9},ExpressionUUID->"d6793c87-3e69-41d7-9960-\
fa9407114d0b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "@", 
  RowBox[{"Keys", "@", "dbcopie02"}]}]], "Input",
 CellChangeTimes->{{3.903782740277094*^9, 3.9037827801122212`*^9}, {
  3.903785730947415*^9, 3.9037857309925213`*^9}, {3.904923423292531*^9, 
  3.904923423322534*^9}, {3.9049240584596424`*^9, 3.9049240588223143`*^9}},
 CellLabel->
  "In[263]:=",ExpressionUUID->"acfe31ef-c72e-4ac5-8aaf-2fd5684fcc00"],

Cell[BoxData["100717"], "Output",
 CellChangeTimes->{3.9066005005926313`*^9},
 CellLabel->
  "Out[263]=",ExpressionUUID->"7a843088-d338-4a4d-8f55-8637622ebb5c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Classificazione con etichette", "Subsubsection",
 CellChangeTimes->{{3.9065363632432165`*^9, 
  3.9065363699495344`*^9}},ExpressionUUID->"8d1ad993-edfe-46b4-a429-\
629bb7c995d0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"probPyrFtmp", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"probIntFtmp", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nRighe", "=", "40000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "nomi", ",", "probPyr", ",", "probInt", ",", "notNull", ",", "res", 
        ",", "meanProb", ",", "stdProb"}], "}"}], "=", 
      RowBox[{"classificaCopieEtichette", "[", 
       RowBox[{
        RowBox[{"dbcopie02", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"1", "+", 
            RowBox[{"nRighe", "*", "i"}]}], ";;", 
           RowBox[{"i", "+", 
            RowBox[{"nRighe", "*", "i"}], "+", "nRighe"}]}], "]"}], "]"}], 
        ",", "myClassifier01"}], "]"}]}], ";", "\n", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"probPyrFtmp", ",", 
       RowBox[{"Thread", "[", 
        RowBox[{"nomi", "->", "probPyr"}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"probIntFtmp", ",", 
       RowBox[{"Thread", "[", 
        RowBox[{"nomi", "->", "probInt"}], "]"}]}], "]"}], ";"}], 
    "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "0", ",", "1"}], "}"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.9049604667402463`*^9, 3.904960493775358*^9}, {
   3.9049605384322104`*^9, 3.904960555911672*^9}, {3.905227588714963*^9, 
   3.905227596130079*^9}, {3.90522765612468*^9, 3.9052276614924083`*^9}, 
   3.90522776878867*^9, 3.9052280495680633`*^9, {3.9065137155702996`*^9, 
   3.906513717448146*^9}, {3.9065162871336255`*^9, 3.9065163258545094`*^9}, {
   3.9065357598004513`*^9, 3.9065357975272017`*^9}, {3.9065358748907776`*^9, 
   3.9065361709132*^9}, {3.9065362089347143`*^9, 3.9065362102959557`*^9}, {
   3.9065363286261897`*^9, 3.9065363302702103`*^9}, {3.9065364235957136`*^9, 
   3.9065364354176393`*^9}, {3.9065433002240353`*^9, 
   3.9065433087981544`*^9}, {3.906557256384124*^9, 3.9065572974712114`*^9}, 
   3.9065574063558016`*^9, {3.906562350977069*^9, 3.9065623728489385`*^9}, 
   3.906562428380234*^9, {3.9066004309673996`*^9, 3.9066004544856796`*^9}, 
   3.9066005057806644`*^9},
 CellLabel->
  "In[264]:=",ExpressionUUID->"1e76e8e1-ebfc-4383-9d07-72e3607143ad"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "@", 
  RowBox[{"Association", "@", 
   RowBox[{"Flatten", "@", "probPyrFtmp"}]}]}]], "Input",
 CellChangeTimes->{
  3.9065456205116625`*^9, {3.90654581529525*^9, 3.906545827946596*^9}, 
   3.906557262409644*^9, 3.906562359488572*^9, 3.906600442924019*^9},
 CellLabel->
  "In[268]:=",ExpressionUUID->"34d931da-b3da-4313-807b-7fb254113037"],

Cell[BoxData["79921"], "Output",
 CellChangeTimes->{3.906602161153598*^9},
 CellLabel->
  "Out[268]=",ExpressionUUID->"c584d995-1e7a-4e7a-ba67-1e2b4bc0729d"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "nomi", ",", "probPyr", ",", "probInt", ",", "notNull", ",", "res", ",", 
     "meanProb", ",", "stdProb"}], "}"}], "=", 
   RowBox[{"classificaCopieEtichette", "[", 
    RowBox[{
     RowBox[{"dbcopie02", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"1", "+", 
         RowBox[{"nRighe", "*", "2"}]}], ";;"}], "]"}], "]"}], ",", 
     "myClassifier01"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"probPyrFtmp", ",", 
    RowBox[{"Thread", "[", 
     RowBox[{"nomi", "->", "probPyr"}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"probIntFtmp", ",", 
    RowBox[{"Thread", "[", 
     RowBox[{"nomi", "->", "probInt"}], "]"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.906546136388754*^9, 3.906546143646473*^9}, {
   3.906557276272703*^9, 3.906557304434349*^9}, 3.9065574230553393`*^9, 
   3.906558413903632*^9, {3.906562360819792*^9, 3.9065623740330667`*^9}, 
   3.9065624337130046`*^9, {3.9066004450880365`*^9, 3.9066004563149757`*^9}, 
   3.9066005081730623`*^9},
 CellLabel->
  "In[269]:=",ExpressionUUID->"fd5f4b73-e52f-448e-ac8e-3df9b2894bb3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "@", 
  RowBox[{"Association", "@", 
   RowBox[{"Flatten", "@", "probPyrFtmp"}]}]}]], "Input",
 CellChangeTimes->{3.906557278888926*^9, 3.906562362231865*^9, 
  3.9066004465120707`*^9},
 CellLabel->
  "In[272]:=",ExpressionUUID->"1c816c1f-7957-4ed8-88d9-3b480e4e8da8"],

Cell[BoxData["100637"], "Output",
 CellChangeTimes->{3.9066025590105047`*^9},
 CellLabel->
  "Out[272]=",ExpressionUUID->"ac890576-863e-41bd-8bbd-b77c3681fabb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"classificatiComeInterneuroniFtmp", "=", 
  RowBox[{"Length", "@", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"Association", "@", 
      RowBox[{"Flatten", "[", "probIntFtmp", "]"}]}], ",", 
     RowBox[{
      RowBox[{"#", ">", "0.5"}], "&"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.9065426668152666`*^9, 3.9065427165502667`*^9}, {
  3.906546163958131*^9, 3.9065461707028904`*^9}, {3.9065573207594223`*^9, 
  3.9065573268424854`*^9}, {3.9065623764098454`*^9, 3.9065623798382616`*^9}, {
  3.906600458080119*^9, 3.9066004616868415`*^9}},
 CellLabel->
  "In[273]:=",ExpressionUUID->"3ce36cee-e4b5-4ca2-9f54-10e2d847d986"],

Cell[BoxData["22139"], "Output",
 CellChangeTimes->{3.9066025646116457`*^9},
 CellLabel->
  "Out[273]=",ExpressionUUID->"3ddd6884-ff54-4477-8d08-b7df5c47e4a5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"classificatiComePiramidaliFtmp", "=", 
  RowBox[{"Length", "@", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"Association", "@", 
      RowBox[{"Flatten", "[", "probPyrFtmp", "]"}]}], ",", 
     RowBox[{
      RowBox[{"#", ">", "0.5"}], "&"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.9065426668152666`*^9, 3.906542735799653*^9}, {
   3.9065461679207788`*^9, 3.906546172537911*^9}, 3.9065572889174447`*^9, 
   3.9065573284109154`*^9, {3.906562366161508*^9, 3.9065623818200073`*^9}, {
   3.9066004491367188`*^9, 3.906600463510515*^9}},
 CellLabel->
  "In[274]:=",ExpressionUUID->"d13c41af-83e3-4e4d-869c-d9710115d58e"],

Cell[BoxData["78498"], "Output",
 CellChangeTimes->{3.9066025670869985`*^9},
 CellLabel->
  "Out[274]=",ExpressionUUID->"42520249-1068-468e-9354-90f419b79b60"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"accuratezzaF", "=", 
  RowBox[{
   RowBox[{"N", "@", "classificatiComePiramidaliFtmp"}], "/", 
   RowBox[{"(", 
    RowBox[{
    "classificatiComePiramidaliFtmp", "+", 
     "classificatiComeInterneuroniFtmp"}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.904096968222768*^9, 3.9040970097439203`*^9}, {
   3.9040974530854115`*^9, 3.904097461682597*^9}, {3.9041293383528423`*^9, 
   3.9041293929665203`*^9}, {3.904132431105404*^9, 3.9041324353777742`*^9}, {
   3.904132528011978*^9, 3.9041325403953295`*^9}, {3.9041375665718822`*^9, 
   3.90413757274329*^9}, {3.904137684652308*^9, 3.904137706242121*^9}, {
   3.904181104750471*^9, 3.9041811165901628`*^9}, {3.9041811977037897`*^9, 
   3.9041812198166895`*^9}, {3.904185964160454*^9, 3.9041859715218935`*^9}, {
   3.9048234255014477`*^9, 3.9048234449637356`*^9}, {3.904923511818484*^9, 
   3.9049235368756685`*^9}, {3.904958454859177*^9, 3.904958467985572*^9}, 
   3.9049621712363367`*^9, {3.905228690487384*^9, 3.9052287388504763`*^9}, {
   3.906515321667478*^9, 3.906515360346823*^9}, {3.906517369197037*^9, 
   3.906517396001253*^9}, {3.906526528310458*^9, 3.9065265556675696`*^9}, {
   3.9065427436907463`*^9, 3.9065427536964645`*^9}, {3.906546175702614*^9, 
   3.9065461825547028`*^9}, {3.9065573310008216`*^9, 
   3.9065573376047726`*^9}, {3.906562383881546*^9, 3.906562390154877*^9}, {
   3.9066004669287415`*^9, 3.9066004755251236`*^9}},
 CellLabel->
  "In[275]:=",ExpressionUUID->"4411f51d-67e1-42f4-b0cb-12f461fc565e"],

Cell[BoxData["0.7800113278416486`"], "Output",
 CellChangeTimes->{3.906602569526951*^9},
 CellLabel->
  "Out[275]=",ExpressionUUID->"d13221be-42cd-441e-9151-2fd6a86b8833"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mediaPYRPyrF", "=", 
  RowBox[{"Mean", "[", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"Association", "@", 
      RowBox[{"Flatten", "[", "probPyrFtmp", "]"}]}], ",", 
     RowBox[{
      RowBox[{"#", ">", "0.5"}], "&"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.906542796373483*^9, 3.906542829896388*^9}, {
   3.906546184468568*^9, 3.906546186604127*^9}, {3.906557339963142*^9, 
   3.906557341938299*^9}, 3.9065623922373433`*^9, 3.906594421653817*^9, {
   3.9066004772459283`*^9, 3.9066004801895833`*^9}},
 CellLabel->
  "In[276]:=",ExpressionUUID->"6d20d8f7-f775-4c21-ad87-dc2d61cc7a73"],

Cell[BoxData["0.929186089493861`"], "Output",
 CellChangeTimes->{3.9066025712660065`*^9},
 CellLabel->
  "Out[276]=",ExpressionUUID->"29f24fa3-8ef8-4f8e-970a-3ac83aada352"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Copie - 01(trance g)  ", "Subsection",
 CellChangeTimes->{{3.9037856883091526`*^9, 3.9037856934467874`*^9}, {
   3.904105663446622*^9, 3.9041056661952486`*^9}, {3.9043056073379326`*^9, 
   3.904305608882037*^9}, {3.9043553671344004`*^9, 3.9043553672851057`*^9}, 
   3.904822545799284*^9, {3.9049234063450212`*^9, 3.904923409877516*^9}, 
   3.904965391478297*^9, 3.904965536057248*^9, 3.9049656893801737`*^9, 
   3.9066004202948165`*^9, 
   3.906646612569169*^9},ExpressionUUID->"96cb5c90-b824-44b4-a256-\
c6039c4ef55d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "filename", " ", "=", " ", 
   "\"\<neuronCopiesDatabase_pyr_2023_10_16_g\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dbcopie02", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{
     "filepath", "<>", "\"\<\\\\\>\"", "<>", "filename", "<>", 
      "\"\<.json\>\""}], ",", "\"\<RawJSON\>\""}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8708371643172398`*^9, 3.8708371649739227`*^9}, {
   3.870837205358247*^9, 3.8708372889594383`*^9}, {3.8708373717294827`*^9, 
   3.870837375102536*^9}, {3.8708374759074984`*^9, 3.870837491642853*^9}, {
   3.870837678301423*^9, 3.8708376808758116`*^9}, {3.870838008765304*^9, 
   3.8708380426274614`*^9}, {3.870838141648035*^9, 3.870838156343728*^9}, 
   3.870838188336751*^9, 3.8708389006803474`*^9, 3.8708395721715164`*^9, {
   3.899807266745392*^9, 3.899807277069441*^9}, {3.903707485682394*^9, 
   3.9037075063491807`*^9}, {3.903757621461687*^9, 3.903757634322569*^9}, {
   3.9037825871621637`*^9, 3.903782609008459*^9}, 3.903782733323086*^9, {
   3.903785723135454*^9, 3.903785733250041*^9}, {3.9049234167096615`*^9, 
   3.9049234217005315`*^9}, {3.9049240551999583`*^9, 3.9049240556584787`*^9}, 
   3.9049653941486425`*^9, 3.9049655382993293`*^9, 3.9049656923012185`*^9, {
   3.9065624012321925`*^9, 3.9065624023312054`*^9}, 3.9066004229564915`*^9, 
   3.906646614342198*^9, 
   3.9121395944070807`*^9},ExpressionUUID->"951f4b5f-1ed8-4019-a183-\
3a2adc57cfce"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "@", 
  RowBox[{"Keys", "@", "dbcopie02"}]}]], "Input",
 CellChangeTimes->{{3.903782740277094*^9, 3.9037827801122212`*^9}, {
  3.903785730947415*^9, 3.9037857309925213`*^9}, {3.904923423292531*^9, 
  3.904923423322534*^9}, {3.9049240584596424`*^9, 3.9049240588223143`*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"733937f8-a6d7-42fb-a7e5-445ec54ae9f5"],

Cell[BoxData["240368"], "Output",
 CellChangeTimes->{3.9066005005926313`*^9, 3.906646692075026*^9, 
  3.906685546519929*^9, 3.9066915223287315`*^9},
 CellLabel->"Out[53]=",ExpressionUUID->"e12a5320-2042-4388-9e3c-5c82c60ba959"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Classificazione con etichette", "Subsubsection",
 CellChangeTimes->{{3.9065363632432165`*^9, 
  3.9065363699495344`*^9}},ExpressionUUID->"14c6f07b-6658-42af-9b90-\
7b0932d3b433"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"probPyrGtmp", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"probIntGtmp", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nRighe", "=", "40000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "nomi", ",", "probPyr", ",", "probInt", ",", "notNull", ",", "res", 
        ",", "meanProb", ",", "stdProb"}], "}"}], "=", 
      RowBox[{"classificaCopieEtichette", "[", 
       RowBox[{
        RowBox[{"dbcopie02", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"1", "+", 
            RowBox[{"nRighe", "*", "i"}]}], ";;", 
           RowBox[{"i", "+", 
            RowBox[{"nRighe", "*", "i"}], "+", "nRighe"}]}], "]"}], "]"}], 
        ",", "myClassifier01"}], "]"}]}], ";", "\n", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"probPyrGtmp", ",", 
       RowBox[{"Thread", "[", 
        RowBox[{"nomi", "->", "probPyr"}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"probIntGtmp", ",", 
       RowBox[{"Thread", "[", 
        RowBox[{"nomi", "->", "probInt"}], "]"}]}], "]"}], ";"}], 
    "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "0", ",", "2"}], "}"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.9049604667402463`*^9, 3.904960493775358*^9}, {
   3.9049605384322104`*^9, 3.904960555911672*^9}, {3.905227588714963*^9, 
   3.905227596130079*^9}, {3.90522765612468*^9, 3.9052276614924083`*^9}, 
   3.90522776878867*^9, 3.9052280495680633`*^9, {3.9065137155702996`*^9, 
   3.906513717448146*^9}, {3.9065162871336255`*^9, 3.9065163258545094`*^9}, {
   3.9065357598004513`*^9, 3.9065357975272017`*^9}, {3.9065358748907776`*^9, 
   3.9065361709132*^9}, {3.9065362089347143`*^9, 3.9065362102959557`*^9}, {
   3.9065363286261897`*^9, 3.9065363302702103`*^9}, {3.9065364235957136`*^9, 
   3.9065364354176393`*^9}, {3.9065433002240353`*^9, 
   3.9065433087981544`*^9}, {3.906557256384124*^9, 3.9065572974712114`*^9}, 
   3.9065574063558016`*^9, {3.906562350977069*^9, 3.9065623728489385`*^9}, 
   3.906562428380234*^9, {3.9066004309673996`*^9, 3.9066004544856796`*^9}, 
   3.9066005057806644`*^9, {3.906646619204595*^9, 3.906646640686045*^9}, {
   3.9066466982036357`*^9, 3.9066467130888796`*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"291c7d5a-8422-4b86-ab34-748a658decd1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "@", 
  RowBox[{"Association", "@", 
   RowBox[{"Flatten", "@", "probPyrGtmp"}]}]}]], "Input",
 CellChangeTimes->{
  3.9065456205116625`*^9, {3.90654581529525*^9, 3.906545827946596*^9}, 
   3.906557262409644*^9, 3.906562359488572*^9, 3.906600442924019*^9, 
   3.90664662788264*^9},
 CellLabel->"In[58]:=",ExpressionUUID->"5e21c5e4-6208-420b-9951-499644373783"],

Cell[BoxData["114551"], "Output",
 CellChangeTimes->{3.906602161153598*^9, 3.9066501109414206`*^9, 
  3.906687796896475*^9, 3.9066941349945555`*^9},
 CellLabel->"Out[58]=",ExpressionUUID->"4c807eb4-3d04-4d5a-850f-8d42e551882b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"classificatiComeInterneuroniGtmp", "=", 
  RowBox[{"Length", "@", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"Association", "@", 
      RowBox[{"Flatten", "[", "probIntGtmp", "]"}]}], ",", 
     RowBox[{
      RowBox[{"#", ">", "0.5"}], "&"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.9065426668152666`*^9, 3.9065427165502667`*^9}, {
  3.906546163958131*^9, 3.9065461707028904`*^9}, {3.9065573207594223`*^9, 
  3.9065573268424854`*^9}, {3.9065623764098454`*^9, 3.9065623798382616`*^9}, {
  3.906600458080119*^9, 3.9066004616868415`*^9}, {3.906646644285368*^9, 
  3.9066466474178348`*^9}},
 CellLabel->"In[61]:=",ExpressionUUID->"c0a13389-5921-45a2-9d14-3c8943fcae45"],

Cell[BoxData["6552"], "Output",
 CellChangeTimes->{3.9066025646116457`*^9, 3.9066941462335076`*^9},
 CellLabel->"Out[61]=",ExpressionUUID->"0830c70f-a837-4e0d-8d3b-fbfad8ac42fb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"classificatiComePiramidaliGtmp", "=", 
  RowBox[{"Length", "@", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"Association", "@", 
      RowBox[{"Flatten", "[", "probPyrGtmp", "]"}]}], ",", 
     RowBox[{
      RowBox[{"#", ">", "0.5"}], "&"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.9065426668152666`*^9, 3.906542735799653*^9}, {
   3.9065461679207788`*^9, 3.906546172537911*^9}, 3.9065572889174447`*^9, 
   3.9065573284109154`*^9, {3.906562366161508*^9, 3.9065623818200073`*^9}, {
   3.9066004491367188`*^9, 3.906600463510515*^9}, {3.906646634619465*^9, 
   3.90664664881662*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"d290f043-5158-48d4-9ac0-4381314f2228"],

Cell[BoxData["107999"], "Output",
 CellChangeTimes->{3.9066025670869985`*^9, 3.9066941485845184`*^9},
 CellLabel->"Out[62]=",ExpressionUUID->"468b0250-3cfa-4b6d-bcd3-e30762026cee"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"accuratezzaG", "=", 
  RowBox[{
   RowBox[{"N", "@", "classificatiComePiramidaliGtmp"}], "/", 
   RowBox[{"(", 
    RowBox[{
    "classificatiComePiramidaliGtmp", "+", 
     "classificatiComeInterneuroniGtmp"}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.904096968222768*^9, 3.9040970097439203`*^9}, {
   3.9040974530854115`*^9, 3.904097461682597*^9}, {3.9041293383528423`*^9, 
   3.9041293929665203`*^9}, {3.904132431105404*^9, 3.9041324353777742`*^9}, {
   3.904132528011978*^9, 3.9041325403953295`*^9}, {3.9041375665718822`*^9, 
   3.90413757274329*^9}, {3.904137684652308*^9, 3.904137706242121*^9}, {
   3.904181104750471*^9, 3.9041811165901628`*^9}, {3.9041811977037897`*^9, 
   3.9041812198166895`*^9}, {3.904185964160454*^9, 3.9041859715218935`*^9}, {
   3.9048234255014477`*^9, 3.9048234449637356`*^9}, {3.904923511818484*^9, 
   3.9049235368756685`*^9}, {3.904958454859177*^9, 3.904958467985572*^9}, 
   3.9049621712363367`*^9, {3.905228690487384*^9, 3.9052287388504763`*^9}, {
   3.906515321667478*^9, 3.906515360346823*^9}, {3.906517369197037*^9, 
   3.906517396001253*^9}, {3.906526528310458*^9, 3.9065265556675696`*^9}, {
   3.9065427436907463`*^9, 3.9065427536964645`*^9}, {3.906546175702614*^9, 
   3.9065461825547028`*^9}, {3.9065573310008216`*^9, 
   3.9065573376047726`*^9}, {3.906562383881546*^9, 3.906562390154877*^9}, {
   3.9066004669287415`*^9, 3.9066004755251236`*^9}, {3.9066466519027414`*^9, 
   3.906646657753586*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"27dccfe0-35ac-42db-8b7b-1c6c5636c303"],

Cell[BoxData["0.942802769072291`"], "Output",
 CellChangeTimes->{3.906602569526951*^9, 3.9066941510165358`*^9},
 CellLabel->"Out[63]=",ExpressionUUID->"d9222da7-5800-4935-a995-f65a4969b280"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mediaPYRPyrG", "=", 
  RowBox[{"Mean", "[", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"Association", "@", 
      RowBox[{"Flatten", "[", "probPyrGtmp", "]"}]}], ",", 
     RowBox[{
      RowBox[{"#", ">", "0.5"}], "&"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.906542796373483*^9, 3.906542829896388*^9}, {
   3.906546184468568*^9, 3.906546186604127*^9}, {3.906557339963142*^9, 
   3.906557341938299*^9}, 3.9065623922373433`*^9, 3.906594421653817*^9, {
   3.9066004772459283`*^9, 3.9066004801895833`*^9}, {3.906646659736469*^9, 
   3.906646662264632*^9}},
 CellLabel->"In[64]:=",ExpressionUUID->"0966de87-d15b-4181-a0b2-f7aad0937db1"],

Cell[BoxData["0.9659224423448712`"], "Output",
 CellChangeTimes->{3.9066025712660065`*^9, 3.9066941538093767`*^9},
 CellLabel->"Out[64]=",ExpressionUUID->"467f2893-966f-436d-936d-025c8e5fb7c3"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"probPyrGtmp", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"probIntGtmp", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nRighe", "=", "40000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "nomi", ",", "probPyr", ",", "probInt", ",", "notNull", ",", "res", 
        ",", "meanProb", ",", "stdProb"}], "}"}], "=", 
      RowBox[{"classificaCopieEtichette", "[", 
       RowBox[{
        RowBox[{"dbcopie02", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"1", "+", 
            RowBox[{"nRighe", "*", "i"}]}], ";;", 
           RowBox[{"i", "+", 
            RowBox[{"nRighe", "*", "i"}], "+", "nRighe"}]}], "]"}], "]"}], 
        ",", "myClassifier01"}], "]"}]}], ";", "\n", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"probPyrGtmp", ",", 
       RowBox[{"Thread", "[", 
        RowBox[{"nomi", "->", "probPyr"}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"probIntGtmp", ",", 
       RowBox[{"Thread", "[", 
        RowBox[{"nomi", "->", "probInt"}], "]"}]}], "]"}], ";"}], 
    "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "3", ",", "5"}], "}"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.906646727043233*^9, 3.9066467289848585`*^9}, {
  3.90669137207277*^9, 3.9066913730919204`*^9}},
 CellLabel->"In[65]:=",ExpressionUUID->"984f2908-7c05-49e9-a124-2e8eac0d1310"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "@", 
  RowBox[{"Association", "@", 
   RowBox[{"Flatten", "@", "probPyrGtmp"}]}]}]], "Input",
 CellLabel->"In[69]:=",ExpressionUUID->"9957cd9d-408c-40d9-bf53-80d647935278"],

Cell[BoxData["120005"], "Output",
 CellChangeTimes->{3.906657015291402*^9, 3.906690167359425*^9, 
  3.9066963563309946`*^9},
 CellLabel->"Out[69]=",ExpressionUUID->"bdaa98ee-2461-4aac-bd44-3efee6fb2ffc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"classificatiComeInterneuroniGtmp", "=", 
  RowBox[{"Length", "@", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"Association", "@", 
      RowBox[{"Flatten", "[", "probIntGtmp", "]"}]}], ",", 
     RowBox[{
      RowBox[{"#", ">", "0.5"}], "&"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.9065426668152666`*^9, 3.9065427165502667`*^9}, {
  3.906546163958131*^9, 3.9065461707028904`*^9}, {3.9065573207594223`*^9, 
  3.9065573268424854`*^9}, {3.9065623764098454`*^9, 3.9065623798382616`*^9}, {
  3.906600458080119*^9, 3.9066004616868415`*^9}, {3.906646644285368*^9, 
  3.9066466474178348`*^9}},
 CellLabel->"In[72]:=",ExpressionUUID->"170e7655-2d60-46eb-b8c0-c34f5c4551b2"],

Cell[BoxData["788"], "Output",
 CellChangeTimes->{3.9066025646116457`*^9, 3.9066963650805693`*^9},
 CellLabel->"Out[72]=",ExpressionUUID->"82cb17ec-4372-4e40-a297-85de574ef603"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"classificatiComePiramidaliGtmp", "=", 
  RowBox[{"Length", "@", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"Association", "@", 
      RowBox[{"Flatten", "[", "probPyrGtmp", "]"}]}], ",", 
     RowBox[{
      RowBox[{"#", ">", "0.5"}], "&"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.9065426668152666`*^9, 3.906542735799653*^9}, {
   3.9065461679207788`*^9, 3.906546172537911*^9}, 3.9065572889174447`*^9, 
   3.9065573284109154`*^9, {3.906562366161508*^9, 3.9065623818200073`*^9}, {
   3.9066004491367188`*^9, 3.906600463510515*^9}, {3.906646634619465*^9, 
   3.90664664881662*^9}},
 CellLabel->"In[73]:=",ExpressionUUID->"b5a605e4-9267-48e1-b128-e6810ba70fed"],

Cell[BoxData["119217"], "Output",
 CellChangeTimes->{3.9066025670869985`*^9, 3.9066963662830143`*^9},
 CellLabel->"Out[73]=",ExpressionUUID->"a5485d3c-8db5-4fc1-8a74-4ecca5a8fe7f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"accuratezzaG", "=", 
  RowBox[{
   RowBox[{"N", "@", "classificatiComePiramidaliGtmp"}], "/", 
   RowBox[{"(", 
    RowBox[{
    "classificatiComePiramidaliGtmp", "+", 
     "classificatiComeInterneuroniGtmp"}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.904096968222768*^9, 3.9040970097439203`*^9}, {
   3.9040974530854115`*^9, 3.904097461682597*^9}, {3.9041293383528423`*^9, 
   3.9041293929665203`*^9}, {3.904132431105404*^9, 3.9041324353777742`*^9}, {
   3.904132528011978*^9, 3.9041325403953295`*^9}, {3.9041375665718822`*^9, 
   3.90413757274329*^9}, {3.904137684652308*^9, 3.904137706242121*^9}, {
   3.904181104750471*^9, 3.9041811165901628`*^9}, {3.9041811977037897`*^9, 
   3.9041812198166895`*^9}, {3.904185964160454*^9, 3.9041859715218935`*^9}, {
   3.9048234255014477`*^9, 3.9048234449637356`*^9}, {3.904923511818484*^9, 
   3.9049235368756685`*^9}, {3.904958454859177*^9, 3.904958467985572*^9}, 
   3.9049621712363367`*^9, {3.905228690487384*^9, 3.9052287388504763`*^9}, {
   3.906515321667478*^9, 3.906515360346823*^9}, {3.906517369197037*^9, 
   3.906517396001253*^9}, {3.906526528310458*^9, 3.9065265556675696`*^9}, {
   3.9065427436907463`*^9, 3.9065427536964645`*^9}, {3.906546175702614*^9, 
   3.9065461825547028`*^9}, {3.9065573310008216`*^9, 
   3.9065573376047726`*^9}, {3.906562383881546*^9, 3.906562390154877*^9}, {
   3.9066004669287415`*^9, 3.9066004755251236`*^9}, {3.9066466519027414`*^9, 
   3.906646657753586*^9}},
 CellLabel->"In[74]:=",ExpressionUUID->"d6b995db-69cc-4f48-abdb-9e857d979ee4"],

Cell[BoxData["0.9934336069330445`"], "Output",
 CellChangeTimes->{3.906602569526951*^9, 3.9066963673765683`*^9},
 CellLabel->"Out[74]=",ExpressionUUID->"718852f6-93b9-47a8-9569-74992afd2bfe"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mediaPYRPyrG", "=", 
  RowBox[{"Mean", "[", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"Association", "@", 
      RowBox[{"Flatten", "[", "probPyrGtmp", "]"}]}], ",", 
     RowBox[{
      RowBox[{"#", ">", "0.5"}], "&"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.906542796373483*^9, 3.906542829896388*^9}, {
   3.906546184468568*^9, 3.906546186604127*^9}, {3.906557339963142*^9, 
   3.906557341938299*^9}, 3.9065623922373433`*^9, 3.906594421653817*^9, {
   3.9066004772459283`*^9, 3.9066004801895833`*^9}, {3.906646659736469*^9, 
   3.906646662264632*^9}},
 CellLabel->"In[75]:=",ExpressionUUID->"94e762b9-96fd-4b84-a055-b2f1a29827be"],

Cell[BoxData["0.9811155492389751`"], "Output",
 CellChangeTimes->{3.9066025712660065`*^9, 3.906696369562022*^9},
 CellLabel->"Out[75]=",ExpressionUUID->"2cf5d39a-7bd7-4d9c-a2f9-b6d60dc1c3af"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"probPyrGtmp", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"probIntGtmp", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nRighe", "=", "40000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "nomi", ",", "probPyr", ",", "probInt", ",", "notNull", ",", "res", ",", 
     "meanProb", ",", "stdProb"}], "}"}], "=", 
   RowBox[{"classificaCopieEtichette", "[", 
    RowBox[{
     RowBox[{"dbcopie02", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"1", "+", 
         RowBox[{"nRighe", "*", "6"}]}], ";;"}], "]"}], "]"}], ",", 
     "myClassifier01"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"probPyrGtmp", ",", 
    RowBox[{"Thread", "[", 
     RowBox[{"nomi", "->", "probPyr"}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"probIntGtmp", ",", 
    RowBox[{"Thread", "[", 
     RowBox[{"nomi", "->", "probInt"}], "]"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.906546136388754*^9, 3.906546143646473*^9}, {
   3.906557276272703*^9, 3.906557304434349*^9}, 3.9065574230553393`*^9, 
   3.906558413903632*^9, {3.906562360819792*^9, 3.9065623740330667`*^9}, 
   3.9065624337130046`*^9, {3.9066004450880365`*^9, 3.9066004563149757`*^9}, 
   3.9066005081730623`*^9, {3.906646629175602*^9, 3.9066466424941235`*^9}, {
   3.906691378776228*^9, 3.9066913793266363`*^9}, 3.9066968229657445`*^9},
 CellLabel->"In[82]:=",ExpressionUUID->"a20abd1d-63c4-49cd-9578-3d3cfde765d2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "@", 
  RowBox[{"Association", "@", 
   RowBox[{"Flatten", "@", "probPyrGtmp"}]}]}]], "Input",
 CellChangeTimes->{3.906557278888926*^9, 3.906562362231865*^9, 
  3.9066004465120707`*^9, 3.9066466306553264`*^9},
 CellLabel->"In[88]:=",ExpressionUUID->"ea2e63c9-4b8b-4494-b0bb-d593134433f8"],

Cell[BoxData["368"], "Output",
 CellChangeTimes->{3.9066025590105047`*^9, 3.9066808201580734`*^9, 
  3.9066911762297316`*^9, 3.906697193495515*^9},
 CellLabel->"Out[88]=",ExpressionUUID->"07361b93-19d2-45b9-8865-87be6f8a3fa9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"classificatiComeInterneuroniGtmp", "=", 
  RowBox[{"Length", "@", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"Association", "@", 
      RowBox[{"Flatten", "[", "probIntGtmp", "]"}]}], ",", 
     RowBox[{
      RowBox[{"#", ">", "0.5"}], "&"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.9065426668152666`*^9, 3.9065427165502667`*^9}, {
  3.906546163958131*^9, 3.9065461707028904`*^9}, {3.9065573207594223`*^9, 
  3.9065573268424854`*^9}, {3.9065623764098454`*^9, 3.9065623798382616`*^9}, {
  3.906600458080119*^9, 3.9066004616868415`*^9}, {3.906646644285368*^9, 
  3.9066466474178348`*^9}},
 CellLabel->"In[91]:=",ExpressionUUID->"5b66db96-bb12-46e5-905f-863a14c5a6b2"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.9066025646116457`*^9, 3.906697200738698*^9},
 CellLabel->"Out[91]=",ExpressionUUID->"4de62ffc-061d-471c-a06e-8525f7529a5c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"classificatiComePiramidaliGtmp", "=", 
  RowBox[{"Length", "@", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"Association", "@", 
      RowBox[{"Flatten", "[", "probPyrGtmp", "]"}]}], ",", 
     RowBox[{
      RowBox[{"#", ">", "0.5"}], "&"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.9065426668152666`*^9, 3.906542735799653*^9}, {
   3.9065461679207788`*^9, 3.906546172537911*^9}, 3.9065572889174447`*^9, 
   3.9065573284109154`*^9, {3.906562366161508*^9, 3.9065623818200073`*^9}, {
   3.9066004491367188`*^9, 3.906600463510515*^9}, {3.906646634619465*^9, 
   3.90664664881662*^9}},
 CellLabel->"In[92]:=",ExpressionUUID->"2839f66f-7bac-428c-ae4b-efae90e42e43"],

Cell[BoxData["368"], "Output",
 CellChangeTimes->{3.9066025670869985`*^9, 3.9066972029118404`*^9},
 CellLabel->"Out[92]=",ExpressionUUID->"68e4ee7f-2b1c-4366-9cef-8c171e5d3b65"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"accuratezzaG", "=", 
  RowBox[{
   RowBox[{"N", "@", "classificatiComePiramidaliGtmp"}], "/", 
   RowBox[{"(", 
    RowBox[{
    "classificatiComePiramidaliGtmp", "+", 
     "classificatiComeInterneuroniGtmp"}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.904096968222768*^9, 3.9040970097439203`*^9}, {
   3.9040974530854115`*^9, 3.904097461682597*^9}, {3.9041293383528423`*^9, 
   3.9041293929665203`*^9}, {3.904132431105404*^9, 3.9041324353777742`*^9}, {
   3.904132528011978*^9, 3.9041325403953295`*^9}, {3.9041375665718822`*^9, 
   3.90413757274329*^9}, {3.904137684652308*^9, 3.904137706242121*^9}, {
   3.904181104750471*^9, 3.9041811165901628`*^9}, {3.9041811977037897`*^9, 
   3.9041812198166895`*^9}, {3.904185964160454*^9, 3.9041859715218935`*^9}, {
   3.9048234255014477`*^9, 3.9048234449637356`*^9}, {3.904923511818484*^9, 
   3.9049235368756685`*^9}, {3.904958454859177*^9, 3.904958467985572*^9}, 
   3.9049621712363367`*^9, {3.905228690487384*^9, 3.9052287388504763`*^9}, {
   3.906515321667478*^9, 3.906515360346823*^9}, {3.906517369197037*^9, 
   3.906517396001253*^9}, {3.906526528310458*^9, 3.9065265556675696`*^9}, {
   3.9065427436907463`*^9, 3.9065427536964645`*^9}, {3.906546175702614*^9, 
   3.9065461825547028`*^9}, {3.9065573310008216`*^9, 
   3.9065573376047726`*^9}, {3.906562383881546*^9, 3.906562390154877*^9}, {
   3.9066004669287415`*^9, 3.9066004755251236`*^9}, {3.9066466519027414`*^9, 
   3.906646657753586*^9}},
 CellLabel->"In[93]:=",ExpressionUUID->"7d0ac452-49f8-4da6-bbad-8658d35911c1"],

Cell[BoxData["1.`"], "Output",
 CellChangeTimes->{3.906602569526951*^9, 3.906697204798135*^9},
 CellLabel->"Out[93]=",ExpressionUUID->"fe1168d6-07bf-4faa-83a3-49329af2e93a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mediaPYRPyrG", "=", 
  RowBox[{"Mean", "[", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"Association", "@", 
      RowBox[{"Flatten", "[", "probPyrGtmp", "]"}]}], ",", 
     RowBox[{
      RowBox[{"#", ">", "0.5"}], "&"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.906542796373483*^9, 3.906542829896388*^9}, {
   3.906546184468568*^9, 3.906546186604127*^9}, {3.906557339963142*^9, 
   3.906557341938299*^9}, 3.9065623922373433`*^9, 3.906594421653817*^9, {
   3.9066004772459283`*^9, 3.9066004801895833`*^9}, {3.906646659736469*^9, 
   3.906646662264632*^9}},
 CellLabel->"In[94]:=",ExpressionUUID->"f63e3aba-6081-4ebc-9083-2d374587c407"],

Cell[BoxData["0.9861326209725266`"], "Output",
 CellChangeTimes->{3.9066025712660065`*^9, 3.906697206338685*^9},
 CellLabel->"Out[94]=",ExpressionUUID->"adad0248-2e51-499e-893a-8d91f0e3e99b"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Copie interneuroni - bAC ", "Subsection",
 CellChangeTimes->{{3.9037856883091526`*^9, 3.9037856934467874`*^9}, {
   3.904105663446622*^9, 3.9041056661952486`*^9}, {3.9043056073379326`*^9, 
   3.904305608882037*^9}, {3.9043553671344004`*^9, 3.9043553672851057`*^9}, 
   3.904822545799284*^9},ExpressionUUID->"703de693-c195-47ec-8b4f-\
de4ab2ae6f65"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "filename", " ", "=", " ", 
   "\"\<neuronCopiesDatabase_intern_2023_07_10_bAC\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dbcopie02", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{
     "filepath", "<>", "\"\<\\\\\>\"", "<>", "filename", "<>", 
      "\"\<.json\>\""}], ",", "\"\<RawJSON\>\""}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8708371643172398`*^9, 3.8708371649739227`*^9}, {
   3.870837205358247*^9, 3.8708372889594383`*^9}, {3.8708373717294827`*^9, 
   3.870837375102536*^9}, {3.8708374759074984`*^9, 3.870837491642853*^9}, {
   3.870837678301423*^9, 3.8708376808758116`*^9}, {3.870838008765304*^9, 
   3.8708380426274614`*^9}, {3.870838141648035*^9, 3.870838156343728*^9}, 
   3.870838188336751*^9, 3.8708389006803474`*^9, 3.8708395721715164`*^9, {
   3.899807266745392*^9, 3.899807277069441*^9}, {3.903707485682394*^9, 
   3.9037075063491807`*^9}, {3.903757621461687*^9, 3.903757634322569*^9}, {
   3.9037825871621637`*^9, 3.903782609008459*^9}, 3.903782733323086*^9, {
   3.903785723135454*^9, 3.903785733250041*^9}, 
   3.912139630968751*^9},ExpressionUUID->"c257eb9f-b259-4b74-84f9-\
cb5e0d9dd18b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "@", 
  RowBox[{"Keys", "@", "dbcopie02"}]}]], "Input",
 CellChangeTimes->{{3.903782740277094*^9, 3.9037827801122212`*^9}, {
  3.903785730947415*^9, 3.9037857309925213`*^9}},
 CellLabel->
  "In[162]:=",ExpressionUUID->"ea51d0bc-92bb-467b-b330-a465c8f924f6"],

Cell[BoxData["45192"], "Output",
 CellChangeTimes->{
  3.903782618156659*^9, {3.9037827540094395`*^9, 3.9037827805693855`*^9}, 
   3.903785553305829*^9, 3.9037857369655743`*^9, 3.9040196845449157`*^9, 
   3.9041047036961255`*^9, 3.904183282834422*^9, 3.9041853575061393`*^9, 
   3.9043056488383493`*^9, 3.904355389195642*^9, 3.9047233138164215`*^9, 
   3.904723355192388*^9, 3.904822594014103*^9, 3.9048311524023933`*^9, 
   3.9048322372540708`*^9, 3.904878598658201*^9, 3.9049540668947105`*^9, 
   3.9049623331827908`*^9, 3.90498449396867*^9, 3.90523746265877*^9, 
   3.9067784499945364`*^9},
 CellLabel->
  "Out[162]=",ExpressionUUID->"c1482a97-dc02-44fa-ad2b-624ef88dc965"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Classificazione con etichette", "Subsubsection",
 CellChangeTimes->{{3.906777901158475*^9, 3.906777906002653*^9}, {
  3.9067781390699515`*^9, 
  3.9067781401076384`*^9}},ExpressionUUID->"b04d6f35-9dc7-4ba9-8a1a-\
5e99798dec84"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"probPyrBAC", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"probIntBAC", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nRighe", "=", "10000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "nomi", ",", "probPyr", ",", "probInt", ",", "notNull", ",", "res", 
        ",", "meanProb", ",", "stdProb"}], "}"}], "=", 
      RowBox[{"classificaCopieEtichette", "[", 
       RowBox[{
        RowBox[{"dbcopie02", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"1", "+", 
            RowBox[{"nRighe", "*", "i"}]}], ";;", 
           RowBox[{"i", "+", 
            RowBox[{"nRighe", "*", "i"}], "+", "nRighe"}]}], "]"}], "]"}], 
        ",", "myClassifier01"}], "]"}]}], ";", "\n", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"probPyrBAC", ",", 
       RowBox[{"Thread", "[", 
        RowBox[{"nomi", "->", "probPyr"}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"probIntBAC", ",", 
       RowBox[{"Thread", "[", 
        RowBox[{"nomi", "->", "probInt"}], "]"}]}], "]"}], ";"}], 
    "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "0", ",", "3"}], "}"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.906777914246835*^9, 3.906777933235026*^9}, {
  3.9067779909579196`*^9, 3.906777996399377*^9}},
 CellLabel->
  "In[163]:=",ExpressionUUID->"776ae4cc-6742-4cb0-b509-bb7b783195b3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "nomi", ",", "probPyr", ",", "probInt", ",", "notNull", ",", "res", ",", 
     "meanProb", ",", "stdProb"}], "}"}], "=", 
   RowBox[{"classificaCopieEtichette", "[", 
    RowBox[{
     RowBox[{"dbcopie02", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"1", "+", 
         RowBox[{"nRighe", "*", "4"}]}], ";;"}], "]"}], "]"}], ",", 
     "myClassifier01"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"probPyrBAC", ",", 
    RowBox[{"Thread", "[", 
     RowBox[{"nomi", "->", "probPyr"}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"probIntBAC", ",", 
    RowBox[{"Thread", "[", 
     RowBox[{"nomi", "->", "probInt"}], "]"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.9067780175002546`*^9, 3.906778021850912*^9}},
 CellLabel->
  "In[167]:=",ExpressionUUID->"a654b3b9-6466-41a6-bd00-9a42713b8c70"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "@", 
  RowBox[{"Association", "@", 
   RowBox[{"Flatten", "@", "probIntBAC"}]}]}]], "Input",
 CellChangeTimes->{3.9067780604597006`*^9},
 CellLabel->
  "In[170]:=",ExpressionUUID->"46b0efa1-0767-4b7d-bf64-975d9698d62a"],

Cell[BoxData["45192"], "Output",
 CellChangeTimes->{3.9067791418920794`*^9},
 CellLabel->
  "Out[170]=",ExpressionUUID->"1577993a-59d6-42a4-976d-c769717e7d35"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"classificatiComeInterneuroniBAC", "=", 
  RowBox[{"Length", "@", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"Association", "@", 
      RowBox[{"Flatten", "[", "probIntBAC", "]"}]}], ",", 
     RowBox[{
      RowBox[{"#", ">", "0.5"}], "&"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.9065426668152666`*^9, 3.9065427165502667`*^9}, {
  3.906546163958131*^9, 3.9065461707028904`*^9}, {3.9065573207594223`*^9, 
  3.9065573268424854`*^9}, {3.9065623764098454`*^9, 3.9065623798382616`*^9}, {
  3.906600458080119*^9, 3.9066004616868415`*^9}, {3.906646644285368*^9, 
  3.9066466474178348`*^9}, {3.9067780689509706`*^9, 3.906778073737214*^9}},
 CellLabel->
  "In[171]:=",ExpressionUUID->"b540cfba-affd-4d3e-884e-1344c2f5ce0f"],

Cell[BoxData["26076"], "Output",
 CellChangeTimes->{3.9066025646116457`*^9, 3.906697200738698*^9, 
  3.906779141979726*^9},
 CellLabel->
  "Out[171]=",ExpressionUUID->"55df64da-0ab5-4325-9e0c-d3bc659695d4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"classificatiComePiramidaliBAC", "=", 
  RowBox[{"Length", "@", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"Association", "@", 
      RowBox[{"Flatten", "[", "probPyrBAC", "]"}]}], ",", 
     RowBox[{
      RowBox[{"#", ">", "0.5"}], "&"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.9065426668152666`*^9, 3.906542735799653*^9}, {
   3.9065461679207788`*^9, 3.906546172537911*^9}, 3.9065572889174447`*^9, 
   3.9065573284109154`*^9, {3.906562366161508*^9, 3.9065623818200073`*^9}, {
   3.9066004491367188`*^9, 3.906600463510515*^9}, {3.906646634619465*^9, 
   3.90664664881662*^9}, {3.9067780772498713`*^9, 3.9067780843285866`*^9}},
 CellLabel->
  "In[172]:=",ExpressionUUID->"944c3c57-0480-46b9-9755-221f56d2d0f3"],

Cell[BoxData["19116"], "Output",
 CellChangeTimes->{3.9066025670869985`*^9, 3.9066972029118404`*^9, 
  3.9067791420728245`*^9},
 CellLabel->
  "Out[172]=",ExpressionUUID->"f079a96a-ef54-4fd8-a156-d1482f89b9b6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"accuratezzaBAC", "=", 
  RowBox[{
   RowBox[{"N", "@", "classificatiComeInterneuroniBAC"}], "/", 
   RowBox[{"(", 
    RowBox[{
    "classificatiComePiramidaliBAC", "+", "classificatiComeInterneuroniBAC"}],
     ")"}]}]}]], "Input",
 CellChangeTimes->{{3.904096968222768*^9, 3.9040970097439203`*^9}, {
   3.9040974530854115`*^9, 3.904097461682597*^9}, {3.9041293383528423`*^9, 
   3.9041293929665203`*^9}, {3.904132431105404*^9, 3.9041324353777742`*^9}, {
   3.904132528011978*^9, 3.9041325403953295`*^9}, {3.9041375665718822`*^9, 
   3.90413757274329*^9}, {3.904137684652308*^9, 3.904137706242121*^9}, {
   3.904181104750471*^9, 3.9041811165901628`*^9}, {3.9041811977037897`*^9, 
   3.9041812198166895`*^9}, {3.904185964160454*^9, 3.9041859715218935`*^9}, {
   3.9048234255014477`*^9, 3.9048234449637356`*^9}, {3.904923511818484*^9, 
   3.9049235368756685`*^9}, {3.904958454859177*^9, 3.904958467985572*^9}, 
   3.9049621712363367`*^9, {3.905228690487384*^9, 3.9052287388504763`*^9}, {
   3.906515321667478*^9, 3.906515360346823*^9}, {3.906517369197037*^9, 
   3.906517396001253*^9}, {3.906526528310458*^9, 3.9065265556675696`*^9}, {
   3.9065427436907463`*^9, 3.9065427536964645`*^9}, {3.906546175702614*^9, 
   3.9065461825547028`*^9}, {3.9065573310008216`*^9, 
   3.9065573376047726`*^9}, {3.906562383881546*^9, 3.906562390154877*^9}, {
   3.9066004669287415`*^9, 3.9066004755251236`*^9}, {3.9066466519027414`*^9, 
   3.906646657753586*^9}, {3.9067780873381224`*^9, 3.9067781011467094`*^9}},
 CellLabel->
  "In[173]:=",ExpressionUUID->"cebc914e-f829-433a-a044-2db532ed3fc3"],

Cell[BoxData["0.57700477960701`"], "Output",
 CellChangeTimes->{3.906602569526951*^9, 3.906697204798135*^9, 
  3.9067791421154885`*^9},
 CellLabel->
  "Out[173]=",ExpressionUUID->"99a67cc5-9d14-4566-85b9-4d835ff3a7e6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mediaINTint", "=", 
  RowBox[{"Mean", "[", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"Association", "@", 
      RowBox[{"Flatten", "[", "probIntBAC", "]"}]}], ",", 
     RowBox[{
      RowBox[{"#", ">", "0.5"}], "&"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.906542796373483*^9, 3.906542829896388*^9}, {
   3.906546184468568*^9, 3.906546186604127*^9}, {3.906557339963142*^9, 
   3.906557341938299*^9}, 3.9065623922373433`*^9, 3.906594421653817*^9, {
   3.9066004772459283`*^9, 3.9066004801895833`*^9}, {3.906646659736469*^9, 
   3.906646662264632*^9}, {3.9067781042149677`*^9, 3.906778114443054*^9}},
 CellLabel->
  "In[174]:=",ExpressionUUID->"0aca069b-6559-4a5b-9ec7-a55b8e38f8f0"],

Cell[BoxData["0.922212539697581`"], "Output",
 CellChangeTimes->{3.9066025712660065`*^9, 3.906697206338685*^9, 
  3.906779142202188*^9},
 CellLabel->
  "Out[174]=",ExpressionUUID->"4487d97f-7170-48c3-ae64-62ebaf0750ef"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Copie interneuroni - cAC ", "Subsection",
 CellChangeTimes->{{3.9037856883091526`*^9, 3.9037856934467874`*^9}, {
   3.904105663446622*^9, 3.9041056661952486`*^9}, {3.9043056073379326`*^9, 
   3.904305608882037*^9}, {3.9043553671344004`*^9, 3.9043553672851057`*^9}, 
   3.904822545799284*^9, 
   3.904963164906908*^9},ExpressionUUID->"318baea1-56b3-4baa-9ca7-\
541cd6445814"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "filename", " ", "=", " ", 
   "\"\<neuronCopiesDatabase_intern_2023_07_10_cAC\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dbcopie02", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{
     "filepath", "<>", "\"\<\\\\\>\"", "<>", "filename", "<>", 
      "\"\<.json\>\""}], ",", "\"\<RawJSON\>\""}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8708371643172398`*^9, 3.8708371649739227`*^9}, {
   3.870837205358247*^9, 3.8708372889594383`*^9}, {3.8708373717294827`*^9, 
   3.870837375102536*^9}, {3.8708374759074984`*^9, 3.870837491642853*^9}, {
   3.870837678301423*^9, 3.8708376808758116`*^9}, {3.870838008765304*^9, 
   3.8708380426274614`*^9}, {3.870838141648035*^9, 3.870838156343728*^9}, 
   3.870838188336751*^9, 3.8708389006803474`*^9, 3.8708395721715164`*^9, {
   3.899807266745392*^9, 3.899807277069441*^9}, {3.903707485682394*^9, 
   3.9037075063491807`*^9}, {3.903757621461687*^9, 3.903757634322569*^9}, {
   3.9037825871621637`*^9, 3.903782609008459*^9}, 3.903782733323086*^9, {
   3.903785723135454*^9, 3.903785733250041*^9}, 3.904963167070471*^9, 
   3.912139640230578*^9},ExpressionUUID->"46450245-2c8a-4a92-90dc-\
ce283deba321"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "@", 
  RowBox[{"Keys", "@", "dbcopie02"}]}]], "Input",
 CellChangeTimes->{{3.903782740277094*^9, 3.9037827801122212`*^9}, {
  3.903785730947415*^9, 3.9037857309925213`*^9}},
 CellLabel->
  "In[182]:=",ExpressionUUID->"ad4fbc9a-a9d2-4c3e-a72d-a87148bb314b"],

Cell[BoxData["58652"], "Output",
 CellChangeTimes->{
  3.903782618156659*^9, {3.9037827540094395`*^9, 3.9037827805693855`*^9}, 
   3.903785553305829*^9, 3.9037857369655743`*^9, 3.9040196845449157`*^9, 
   3.9041047036961255`*^9, 3.904183282834422*^9, 3.9041853575061393`*^9, 
   3.9043056488383493`*^9, 3.904355389195642*^9, 3.9047233138164215`*^9, 
   3.904723355192388*^9, 3.904822594014103*^9, 3.9048311524023933`*^9, 
   3.9048322372540708`*^9, 3.904878598658201*^9, 3.9049540668947105`*^9, 
   3.9049623331827908`*^9, 3.9049632140226903`*^9, 3.904986849911112*^9, 
   3.905238510115095*^9, 3.9052397073288355`*^9, 3.9067793331423893`*^9},
 CellLabel->
  "Out[182]=",ExpressionUUID->"4a86a2a3-5e5c-4dfc-b6de-6bd46317321e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Classificazione con etichette", "Subsubsection",
 CellChangeTimes->{{3.906777901158475*^9, 3.906777906002653*^9}, {
  3.9067781390699515`*^9, 
  3.9067781401076384`*^9}},ExpressionUUID->"b0d6e32a-efe4-43e5-b1af-\
ef84ccb65501"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"probPyrCAC", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"probIntCAC", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nRighe", "=", "10000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "nomi", ",", "probPyr", ",", "probInt", ",", "notNull", ",", "res", 
        ",", "meanProb", ",", "stdProb"}], "}"}], "=", 
      RowBox[{"classificaCopieEtichette", "[", 
       RowBox[{
        RowBox[{"dbcopie02", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"1", "+", 
            RowBox[{"nRighe", "*", "i"}]}], ";;", 
           RowBox[{"i", "+", 
            RowBox[{"nRighe", "*", "i"}], "+", "nRighe"}]}], "]"}], "]"}], 
        ",", "myClassifier01"}], "]"}]}], ";", "\n", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"probPyrCAC", ",", 
       RowBox[{"Thread", "[", 
        RowBox[{"nomi", "->", "probPyr"}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"probIntCAC", ",", 
       RowBox[{"Thread", "[", 
        RowBox[{"nomi", "->", "probInt"}], "]"}]}], "]"}], ";"}], 
    "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "0", ",", "4"}], "}"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.906777914246835*^9, 3.906777933235026*^9}, {
   3.9067779909579196`*^9, 3.906777996399377*^9}, {3.9067792050900707`*^9, 
   3.9067792210496955`*^9}, 3.906779326606756*^9},
 CellLabel->
  "In[183]:=",ExpressionUUID->"d565522b-52cf-4026-aa46-85eafe8d52d5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "nomi", ",", "probPyr", ",", "probInt", ",", "notNull", ",", "res", ",", 
     "meanProb", ",", "stdProb"}], "}"}], "=", 
   RowBox[{"classificaCopieEtichette", "[", 
    RowBox[{
     RowBox[{"dbcopie02", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"1", "+", 
         RowBox[{"nRighe", "*", "5"}]}], ";;"}], "]"}], "]"}], ",", 
     "myClassifier01"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"probPyrCAC", ",", 
    RowBox[{"Thread", "[", 
     RowBox[{"nomi", "->", "probPyr"}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"probIntCAC", ",", 
    RowBox[{"Thread", "[", 
     RowBox[{"nomi", "->", "probInt"}], "]"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.9067780175002546`*^9, 3.906778021850912*^9}, {
   3.9067792136377587`*^9, 3.9067792224216156`*^9}, 3.9067793288778105`*^9},
 CellLabel->
  "In[187]:=",ExpressionUUID->"a32bbb9d-5a60-47a1-8c3a-b743e126b57f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "@", 
  RowBox[{"Association", "@", 
   RowBox[{"Flatten", "@", "probIntCAC"}]}]}]], "Input",
 CellChangeTimes->{3.9067780604597006`*^9, 3.906779223381216*^9},
 CellLabel->
  "In[190]:=",ExpressionUUID->"d3e21200-75ba-4006-a672-c2c1c6851e52"],

Cell[BoxData["58436"], "Output",
 CellChangeTimes->{3.9067791418920794`*^9, 3.9067803252781878`*^9},
 CellLabel->
  "Out[190]=",ExpressionUUID->"9790ea3d-f481-4826-8a97-53f8005559ce"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"classificatiComeInterneuroniCAC", "=", 
  RowBox[{"Length", "@", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"Association", "@", 
      RowBox[{"Flatten", "[", "probIntCAC", "]"}]}], ",", 
     RowBox[{
      RowBox[{"#", ">", "0.5"}], "&"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.9065426668152666`*^9, 3.9065427165502667`*^9}, {
  3.906546163958131*^9, 3.9065461707028904`*^9}, {3.9065573207594223`*^9, 
  3.9065573268424854`*^9}, {3.9065623764098454`*^9, 3.9065623798382616`*^9}, {
  3.906600458080119*^9, 3.9066004616868415`*^9}, {3.906646644285368*^9, 
  3.9066466474178348`*^9}, {3.9067780689509706`*^9, 3.906778073737214*^9}, {
  3.906779226733382*^9, 3.906779229509342*^9}},
 CellLabel->
  "In[191]:=",ExpressionUUID->"4688fcda-c85c-4318-bd8c-eba908bbdc5d"],

Cell[BoxData["37533"], "Output",
 CellChangeTimes->{3.9066025646116457`*^9, 3.906697200738698*^9, 
  3.906779141979726*^9, 3.906780325389723*^9},
 CellLabel->
  "Out[191]=",ExpressionUUID->"6461ccac-62a2-4781-a5a9-5497c83a4fda"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"classificatiComePiramidaliCAC", "=", 
  RowBox[{"Length", "@", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"Association", "@", 
      RowBox[{"Flatten", "[", "probPyrCAC", "]"}]}], ",", 
     RowBox[{
      RowBox[{"#", ">", "0.5"}], "&"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.9065426668152666`*^9, 3.906542735799653*^9}, {
   3.9065461679207788`*^9, 3.906546172537911*^9}, 3.9065572889174447`*^9, 
   3.9065573284109154`*^9, {3.906562366161508*^9, 3.9065623818200073`*^9}, {
   3.9066004491367188`*^9, 3.906600463510515*^9}, {3.906646634619465*^9, 
   3.90664664881662*^9}, {3.9067780772498713`*^9, 3.9067780843285866`*^9}, {
   3.906779236018433*^9, 3.9067792389304457`*^9}},
 CellLabel->
  "In[192]:=",ExpressionUUID->"b2b5b088-a6db-4aaf-ae36-676071c1823c"],

Cell[BoxData["20903"], "Output",
 CellChangeTimes->{3.9066025670869985`*^9, 3.9066972029118404`*^9, 
  3.9067791420728245`*^9, 3.9067803255166335`*^9},
 CellLabel->
  "Out[192]=",ExpressionUUID->"39914d73-da17-4f77-b49a-c0fffa8bac4d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"accuratezzaCAC", "=", 
  RowBox[{
   RowBox[{"N", "@", "classificatiComeInterneuroniCAC"}], "/", 
   RowBox[{"(", 
    RowBox[{
    "classificatiComePiramidaliCAC", "+", "classificatiComeInterneuroniCAC"}],
     ")"}]}]}]], "Input",
 CellChangeTimes->{{3.904096968222768*^9, 3.9040970097439203`*^9}, {
   3.9040974530854115`*^9, 3.904097461682597*^9}, {3.9041293383528423`*^9, 
   3.9041293929665203`*^9}, {3.904132431105404*^9, 3.9041324353777742`*^9}, {
   3.904132528011978*^9, 3.9041325403953295`*^9}, {3.9041375665718822`*^9, 
   3.90413757274329*^9}, {3.904137684652308*^9, 3.904137706242121*^9}, {
   3.904181104750471*^9, 3.9041811165901628`*^9}, {3.9041811977037897`*^9, 
   3.9041812198166895`*^9}, {3.904185964160454*^9, 3.9041859715218935`*^9}, {
   3.9048234255014477`*^9, 3.9048234449637356`*^9}, {3.904923511818484*^9, 
   3.9049235368756685`*^9}, {3.904958454859177*^9, 3.904958467985572*^9}, 
   3.9049621712363367`*^9, {3.905228690487384*^9, 3.9052287388504763`*^9}, {
   3.906515321667478*^9, 3.906515360346823*^9}, {3.906517369197037*^9, 
   3.906517396001253*^9}, {3.906526528310458*^9, 3.9065265556675696`*^9}, {
   3.9065427436907463`*^9, 3.9065427536964645`*^9}, {3.906546175702614*^9, 
   3.9065461825547028`*^9}, {3.9065573310008216`*^9, 
   3.9065573376047726`*^9}, {3.906562383881546*^9, 3.906562390154877*^9}, {
   3.9066004669287415`*^9, 3.9066004755251236`*^9}, {3.9066466519027414`*^9, 
   3.906646657753586*^9}, {3.9067780873381224`*^9, 3.9067781011467094`*^9}, {
   3.9067792411701174`*^9, 3.90677925212916*^9}},
 CellLabel->
  "In[193]:=",ExpressionUUID->"d29e7a18-c7c7-4387-8122-9fb787bbda39"],

Cell[BoxData["0.6422924224792935`"], "Output",
 CellChangeTimes->{3.906602569526951*^9, 3.906697204798135*^9, 
  3.9067791421154885`*^9, 3.9067803255585213`*^9},
 CellLabel->
  "Out[193]=",ExpressionUUID->"fbd23413-2c1b-4b20-89be-3204a8204759"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mediaINTintCAC", "=", 
  RowBox[{"Mean", "[", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"Association", "@", 
      RowBox[{"Flatten", "[", "probIntCAC", "]"}]}], ",", 
     RowBox[{
      RowBox[{"#", ">", "0.5"}], "&"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.906542796373483*^9, 3.906542829896388*^9}, {
   3.906546184468568*^9, 3.906546186604127*^9}, {3.906557339963142*^9, 
   3.906557341938299*^9}, 3.9065623922373433`*^9, 3.906594421653817*^9, {
   3.9066004772459283`*^9, 3.9066004801895833`*^9}, {3.906646659736469*^9, 
   3.906646662264632*^9}, {3.9067781042149677`*^9, 3.906778114443054*^9}, {
   3.9067792627761374`*^9, 3.906779268372568*^9}},
 CellLabel->
  "In[194]:=",ExpressionUUID->"987f2ae0-21f4-4e7b-84ef-77d449876a68"],

Cell[BoxData["0.9703255529328116`"], "Output",
 CellChangeTimes->{3.9066025712660065`*^9, 3.906697206338685*^9, 
  3.906779142202188*^9, 3.9067803256695843`*^9},
 CellLabel->
  "Out[194]=",ExpressionUUID->"9c139126-9f18-44f5-a110-963a8507462c"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Copie interneuroni - cNAC ", "Subsection",
 CellChangeTimes->{{3.9037856883091526`*^9, 3.9037856934467874`*^9}, {
   3.904105663446622*^9, 3.9041056661952486`*^9}, {3.9043056073379326`*^9, 
   3.904305608882037*^9}, {3.9043553671344004`*^9, 3.9043553672851057`*^9}, 
   3.904822545799284*^9, 3.904963164906908*^9, 
   3.904964295789697*^9},ExpressionUUID->"9ddad48e-249b-4952-93fc-\
088d35ba4e20"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "filename", " ", "=", " ", 
   "\"\<neuronCopiesDatabase_intern_2023_07_10_cNAC\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dbcopie02", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{
     "filepath", "<>", "\"\<\\\\\>\"", "<>", "filename", "<>", 
      "\"\<.json\>\""}], ",", "\"\<RawJSON\>\""}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8708371643172398`*^9, 3.8708371649739227`*^9}, {
   3.870837205358247*^9, 3.8708372889594383`*^9}, {3.8708373717294827`*^9, 
   3.870837375102536*^9}, {3.8708374759074984`*^9, 3.870837491642853*^9}, {
   3.870837678301423*^9, 3.8708376808758116`*^9}, {3.870838008765304*^9, 
   3.8708380426274614`*^9}, {3.870838141648035*^9, 3.870838156343728*^9}, 
   3.870838188336751*^9, 3.8708389006803474`*^9, 3.8708395721715164`*^9, {
   3.899807266745392*^9, 3.899807277069441*^9}, {3.903707485682394*^9, 
   3.9037075063491807`*^9}, {3.903757621461687*^9, 3.903757634322569*^9}, {
   3.9037825871621637`*^9, 3.903782609008459*^9}, 3.903782733323086*^9, {
   3.903785723135454*^9, 3.903785733250041*^9}, 3.904963167070471*^9, 
   3.904964299270956*^9, 
   3.9121396493460693`*^9},ExpressionUUID->"ad3f8f1a-4017-4d3a-86f1-\
106aba410c2e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "@", 
  RowBox[{"Keys", "@", "dbcopie02"}]}]], "Input",
 CellChangeTimes->{{3.903782740277094*^9, 3.9037827801122212`*^9}, {
  3.903785730947415*^9, 3.9037857309925213`*^9}},
 CellLabel->
  "In[200]:=",ExpressionUUID->"423530d9-34bb-45bc-be6e-7e0442e02c5b"],

Cell[BoxData["52028"], "Output",
 CellChangeTimes->{
  3.903782618156659*^9, {3.9037827540094395`*^9, 3.9037827805693855`*^9}, 
   3.903785553305829*^9, 3.9037857369655743`*^9, 3.9040196845449157`*^9, 
   3.9041047036961255`*^9, 3.904183282834422*^9, 3.9041853575061393`*^9, 
   3.9043056488383493`*^9, 3.904355389195642*^9, 3.9047233138164215`*^9, 
   3.904723355192388*^9, 3.904822594014103*^9, 3.9048311524023933`*^9, 
   3.9048322372540708`*^9, 3.904878598658201*^9, 3.9049540668947105`*^9, 
   3.9049623331827908`*^9, 3.9049632140226903`*^9, 3.904964549595976*^9, 
   3.9049904456305003`*^9, 3.905240895422927*^9, 3.9067806467902274`*^9},
 CellLabel->
  "Out[200]=",ExpressionUUID->"d3519136-1d07-4726-ae0a-b15d3ab6dc16"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Classificazione con etichette", "Subsubsection",
 CellChangeTimes->{{3.906777901158475*^9, 3.906777906002653*^9}, {
  3.9067781390699515`*^9, 
  3.9067781401076384`*^9}},ExpressionUUID->"ca6b6b61-6ef3-4a36-be7b-\
458a525b665a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"probPyrCNAC", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"probIntCNAC", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nRighe", "=", "10000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "nomi", ",", "probPyr", ",", "probInt", ",", "notNull", ",", "res", 
        ",", "meanProb", ",", "stdProb"}], "}"}], "=", 
      RowBox[{"classificaCopieEtichette", "[", 
       RowBox[{
        RowBox[{"dbcopie02", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"1", "+", 
            RowBox[{"nRighe", "*", "i"}]}], ";;", 
           RowBox[{"i", "+", 
            RowBox[{"nRighe", "*", "i"}], "+", "nRighe"}]}], "]"}], "]"}], 
        ",", "myClassifier01"}], "]"}]}], ";", "\n", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"probPyrCNAC", ",", 
       RowBox[{"Thread", "[", 
        RowBox[{"nomi", "->", "probPyr"}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"probIntCNAC", ",", 
       RowBox[{"Thread", "[", 
        RowBox[{"nomi", "->", "probInt"}], "]"}]}], "]"}], ";"}], 
    "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "0", ",", "4"}], "}"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.906777914246835*^9, 3.906777933235026*^9}, {
   3.9067779909579196`*^9, 3.906777996399377*^9}, {3.9067792050900707`*^9, 
   3.9067792210496955`*^9}, 3.906779326606756*^9, {3.906780567182746*^9, 
   3.906780591509248*^9}},
 CellLabel->
  "In[201]:=",ExpressionUUID->"7698f9f1-4bb2-49ae-8a4b-66ab7de328d3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "nomi", ",", "probPyr", ",", "probInt", ",", "notNull", ",", "res", ",", 
     "meanProb", ",", "stdProb"}], "}"}], "=", 
   RowBox[{"classificaCopieEtichette", "[", 
    RowBox[{
     RowBox[{"dbcopie02", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"1", "+", 
         RowBox[{"nRighe", "*", "5"}]}], ";;"}], "]"}], "]"}], ",", 
     "myClassifier01"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"probPyrCNAC", ",", 
    RowBox[{"Thread", "[", 
     RowBox[{"nomi", "->", "probPyr"}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"probIntCNAC", ",", 
    RowBox[{"Thread", "[", 
     RowBox[{"nomi", "->", "probInt"}], "]"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.9067780175002546`*^9, 3.906778021850912*^9}, {
   3.9067792136377587`*^9, 3.9067792224216156`*^9}, 3.9067793288778105`*^9, {
   3.906780570322069*^9, 3.906780581660747*^9}},
 CellLabel->
  "In[205]:=",ExpressionUUID->"a2b6bccf-d1ee-43a4-9fa9-a3635104461e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "@", 
  RowBox[{"Association", "@", 
   RowBox[{"Flatten", "@", "probIntCNAC"}]}]}]], "Input",
 CellChangeTimes->{3.9067780604597006`*^9, 3.906779223381216*^9, 
  3.906780597181884*^9},
 CellLabel->
  "In[208]:=",ExpressionUUID->"b80ad952-e570-4461-9aeb-8689f1e83cdd"],

Cell[BoxData["51500"], "Output",
 CellChangeTimes->{3.9067791418920794`*^9, 3.9067803252781878`*^9, 
  3.906781517168598*^9},
 CellLabel->
  "Out[208]=",ExpressionUUID->"a7f7e9b1-a917-4552-a65d-2e1bf5d5b227"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"classificatiComeInterneuroniCNAC", "=", 
  RowBox[{"Length", "@", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"Association", "@", 
      RowBox[{"Flatten", "[", "probIntCNAC", "]"}]}], ",", 
     RowBox[{
      RowBox[{"#", ">", "0.5"}], "&"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.9065426668152666`*^9, 3.9065427165502667`*^9}, {
  3.906546163958131*^9, 3.9065461707028904`*^9}, {3.9065573207594223`*^9, 
  3.9065573268424854`*^9}, {3.9065623764098454`*^9, 3.9065623798382616`*^9}, {
  3.906600458080119*^9, 3.9066004616868415`*^9}, {3.906646644285368*^9, 
  3.9066466474178348`*^9}, {3.9067780689509706`*^9, 3.906778073737214*^9}, {
  3.906779226733382*^9, 3.906779229509342*^9}, {3.9067805828377466`*^9, 
  3.9067806006150427`*^9}},
 CellLabel->
  "In[209]:=",ExpressionUUID->"2822d672-9a25-4c53-ba45-b2e5ae4518fb"],

Cell[BoxData["41676"], "Output",
 CellChangeTimes->{3.9066025646116457`*^9, 3.906697200738698*^9, 
  3.906779141979726*^9, 3.906780325389723*^9, 3.9067815172778387`*^9},
 CellLabel->
  "Out[209]=",ExpressionUUID->"91bbf804-e8ff-45e2-9511-d21a8cc50002"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"classificatiComePiramidaliCNAC", "=", 
  RowBox[{"Length", "@", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"Association", "@", 
      RowBox[{"Flatten", "[", "probPyrCNAC", "]"}]}], ",", 
     RowBox[{
      RowBox[{"#", ">", "0.5"}], "&"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.9065426668152666`*^9, 3.906542735799653*^9}, {
   3.9065461679207788`*^9, 3.906546172537911*^9}, 3.9065572889174447`*^9, 
   3.9065573284109154`*^9, {3.906562366161508*^9, 3.9065623818200073`*^9}, {
   3.9066004491367188`*^9, 3.906600463510515*^9}, {3.906646634619465*^9, 
   3.90664664881662*^9}, {3.9067780772498713`*^9, 3.9067780843285866`*^9}, {
   3.906779236018433*^9, 3.9067792389304457`*^9}, 3.9067805720597525`*^9, 
   3.90678060335065*^9},
 CellLabel->
  "In[210]:=",ExpressionUUID->"af38664c-470f-4e71-8cfd-ffbeaeb25d71"],

Cell[BoxData["9824"], "Output",
 CellChangeTimes->{3.9066025670869985`*^9, 3.9066972029118404`*^9, 
  3.9067791420728245`*^9, 3.9067803255166335`*^9, 3.9067815175751877`*^9},
 CellLabel->
  "Out[210]=",ExpressionUUID->"c9837445-7b21-47fd-aad7-0a0ed5577a49"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"accuratezzaCNAC", "=", 
  RowBox[{
   RowBox[{"N", "@", "classificatiComeInterneuroniCNAC"}], "/", 
   RowBox[{"(", 
    RowBox[{
    "classificatiComePiramidaliCNAC", "+", 
     "classificatiComeInterneuroniCNAC"}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.904096968222768*^9, 3.9040970097439203`*^9}, {
   3.9040974530854115`*^9, 3.904097461682597*^9}, {3.9041293383528423`*^9, 
   3.9041293929665203`*^9}, {3.904132431105404*^9, 3.9041324353777742`*^9}, {
   3.904132528011978*^9, 3.9041325403953295`*^9}, {3.9041375665718822`*^9, 
   3.90413757274329*^9}, {3.904137684652308*^9, 3.904137706242121*^9}, {
   3.904181104750471*^9, 3.9041811165901628`*^9}, {3.9041811977037897`*^9, 
   3.9041812198166895`*^9}, {3.904185964160454*^9, 3.9041859715218935`*^9}, {
   3.9048234255014477`*^9, 3.9048234449637356`*^9}, {3.904923511818484*^9, 
   3.9049235368756685`*^9}, {3.904958454859177*^9, 3.904958467985572*^9}, 
   3.9049621712363367`*^9, {3.905228690487384*^9, 3.9052287388504763`*^9}, {
   3.906515321667478*^9, 3.906515360346823*^9}, {3.906517369197037*^9, 
   3.906517396001253*^9}, {3.906526528310458*^9, 3.9065265556675696`*^9}, {
   3.9065427436907463`*^9, 3.9065427536964645`*^9}, {3.906546175702614*^9, 
   3.9065461825547028`*^9}, {3.9065573310008216`*^9, 
   3.9065573376047726`*^9}, {3.906562383881546*^9, 3.906562390154877*^9}, {
   3.9066004669287415`*^9, 3.9066004755251236`*^9}, {3.9066466519027414`*^9, 
   3.906646657753586*^9}, {3.9067780873381224`*^9, 3.9067781011467094`*^9}, {
   3.9067792411701174`*^9, 3.90677925212916*^9}, {3.9067806061578026`*^9, 
   3.906780615898759*^9}},
 CellLabel->
  "In[211]:=",ExpressionUUID->"f4a00aa7-22d5-441f-bdc0-42a81f7ebd8c"],

Cell[BoxData["0.8092427184466019`"], "Output",
 CellChangeTimes->{3.906602569526951*^9, 3.906697204798135*^9, 
  3.9067791421154885`*^9, 3.9067803255585213`*^9, 3.9067815175862045`*^9},
 CellLabel->
  "Out[211]=",ExpressionUUID->"81879b6b-02a9-4992-b7e9-462245c3ef0c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mediaINTintCNAC", "=", 
  RowBox[{"Mean", "[", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"Association", "@", 
      RowBox[{"Flatten", "[", "probIntCNAC", "]"}]}], ",", 
     RowBox[{
      RowBox[{"#", ">", "0.5"}], "&"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.906542796373483*^9, 3.906542829896388*^9}, {
   3.906546184468568*^9, 3.906546186604127*^9}, {3.906557339963142*^9, 
   3.906557341938299*^9}, 3.9065623922373433`*^9, 3.906594421653817*^9, {
   3.9066004772459283`*^9, 3.9066004801895833`*^9}, {3.906646659736469*^9, 
   3.906646662264632*^9}, {3.9067781042149677`*^9, 3.906778114443054*^9}, {
   3.9067792627761374`*^9, 3.906779268372568*^9}, 3.906780585312418*^9, 
   3.9067806194976234`*^9},
 CellLabel->
  "In[212]:=",ExpressionUUID->"dce0dce6-cec5-4e0c-bdce-56669414e7d6"],

Cell[BoxData["0.9451430467673559`"], "Output",
 CellChangeTimes->{3.9066025712660065`*^9, 3.906697206338685*^9, 
  3.906779142202188*^9, 3.9067803256695843`*^9, 3.906781517698861*^9},
 CellLabel->
  "Out[212]=",ExpressionUUID->"eb376308-4f86-436a-9eb6-595a018be00a"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Analisi dei risultati - dati etichettati", "Subsection",
 CellChangeTimes->{{3.905249195881524*^9, 3.9052491998939443`*^9}, {
  3.906699717546261*^9, 
  3.906699720484723*^9}},ExpressionUUID->"f2a4a0f0-110b-4f9d-a870-\
a74bfeb5b441"],

Cell[CellGroupData[{

Cell["Pyramidal:", "Subsubsection",
 CellChangeTimes->{{3.91213833436187*^9, 3.912138339775124*^9}, {
  3.9121393088427715`*^9, 
  3.9121393114107924`*^9}},ExpressionUUID->"69c67962-6015-453b-bfa2-\
6c2f09a8a7bc"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"PYRprobPyr", "=", 
   RowBox[{"Association", "@", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"AssociationThread", "[", 
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"#", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], "]"}], "&"}], ",", "probPyr"}], 
     "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Length", "@", "PYRprobPyr"}]}], "Input",
 CellChangeTimes->{{3.9067070462947288`*^9, 3.906707046567549*^9}, {
  3.9067072504343634`*^9, 3.906707278165718*^9}, {3.906707323794424*^9, 
  3.906707348372432*^9}, {3.912139289779606*^9, 
  3.9121392952054467`*^9}},ExpressionUUID->"ea2208f4-68df-40d6-970c-\
0a820b61970b"],

Cell[BoxData["1023140"], "Output",
 CellChangeTimes->{3.9067073434276543`*^9},
 CellLabel->
  "Out[142]=",ExpressionUUID->"fbdc7688-72c2-4c04-b44c-0a65153d1744"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"PYRpyr", "=", 
   RowBox[{"Select", "[", 
    RowBox[{"PYRprobPyr", ",", 
     RowBox[{
      RowBox[{"#", ">", "0.5"}], "&"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Length", "@", "PYRpyr"}]}], "Input",
 CellLabel->
  "In[143]:=",ExpressionUUID->"fbe5dbb5-16ae-48fd-89a8-d15d0d577ed4"],

Cell[BoxData["948942"], "Output",
 CellChangeTimes->{3.906707369705208*^9},
 CellLabel->
  "Out[144]=",ExpressionUUID->"12de586e-e1a0-4fe7-9a50-c1b1813c8e7b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"N", " ", "@", 
   RowBox[{"Length", "@", "PYRpyr"}]}], "/", 
  RowBox[{"Length", "@", "PYRprobPyr"}]}]], "Input",
 CellLabel->
  "In[145]:=",ExpressionUUID->"b3f44c2b-3dac-43c3-bfe0-2bf821bb8095"],

Cell[BoxData["0.9274801102488418`"], "Output",
 CellChangeTimes->{3.9067073780369034`*^9},
 CellLabel->
  "Out[145]=",ExpressionUUID->"0b693896-d500-49ea-93b5-509eee4115b4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Mean", "[", "PYRpyr", "]"}]], "Input",
 CellChangeTimes->{3.9067171118393936`*^9},
 CellLabel->
  "In[146]:=",ExpressionUUID->"67982c51-cd2c-438d-8308-83c4bf218b73"],

Cell[BoxData["0.9548638414583771`"], "Output",
 CellChangeTimes->{3.9067171136477942`*^9},
 CellLabel->
  "Out[146]=",ExpressionUUID->"5d2a4d79-94e1-4109-9cb3-53a063eb366d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StandardDeviation", "[", "PYRpyr", "]"}]], "Input",
 CellChangeTimes->{{3.9067171361909513`*^9, 3.9067171385284634`*^9}},
 CellLabel->
  "In[147]:=",ExpressionUUID->"1b40090e-6759-4a17-a9ad-8863084bf719"],

Cell[BoxData["0.08096123301744715`"], "Output",
 CellChangeTimes->{3.906717139590147*^9},
 CellLabel->
  "Out[147]=",ExpressionUUID->"ee8f921b-885a-4a50-be8c-33d9650ca96e"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.906777790579241*^9, 
  3.9067777907126875`*^9}},ExpressionUUID->"5d5c8227-efe3-4430-8e93-\
73fa642a497b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Interneurons", "Subsubsection",
 CellChangeTimes->{{3.9067777412854633`*^9, 3.906777742819651*^9}, {
  3.9067817667955027`*^9, 3.9067817671343727`*^9}, {3.9121393563567553`*^9, 
  3.912139360085614*^9}},ExpressionUUID->"765b5c40-3191-4274-87c1-\
5024caac0c9e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"import", "=", 
   RowBox[{"Flatten", "@", "probIntBAC"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.905249214845274*^9, 3.9052492698061485`*^9}, {
   3.9052494347919254`*^9, 3.9052494361635323`*^9}, 3.9066997577284083`*^9, {
   3.9067000808262897`*^9, 3.906700082180298*^9}, {3.9067007707667584`*^9, 
   3.9067007841402264`*^9}, {3.9067009433611927`*^9, 
   3.9067009447758646`*^9}, {3.906707002668676*^9, 3.906707003038018*^9}, {
   3.906781886878831*^9, 3.906781891344179*^9}, {3.912138522929618*^9, 
   3.912138527593449*^9}},ExpressionUUID->"8c4e57ec-68a1-4cdf-b9ad-\
df5ea86186c0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"resBAC", "=", 
   RowBox[{"Association", "@", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"AssociationThread", "[", 
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"#", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], "]"}], "&"}], ",", "import"}], 
     "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Length", "@", "resBAC"}]}], "Input",
 CellChangeTimes->{{3.9067070509738474`*^9, 3.906707069500883*^9}, {
  3.9067072812257495`*^9, 3.906707284051081*^9}, {3.9067819108887596`*^9, 
  3.90678192016418*^9}},
 CellLabel->
  "In[216]:=",ExpressionUUID->"ce989c8a-d937-41c2-9721-6730851201da"],

Cell[BoxData["45192"], "Output",
 CellChangeTimes->{3.9067070740877824`*^9, 3.9067072964318523`*^9, 
  3.906799886049531*^9},
 CellLabel->
  "Out[217]=",ExpressionUUID->"0ba5337a-575f-49b2-8027-258c69e64654"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"import", "=", 
   RowBox[{"Flatten", "@", "probIntCAC"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.905249214845274*^9, 3.9052492698061485`*^9}, {
   3.9052494347919254`*^9, 3.9052494361635323`*^9}, 3.9066997577284083`*^9, {
   3.9067000808262897`*^9, 3.906700082180298*^9}, {3.9067007707667584`*^9, 
   3.9067007841402264`*^9}, {3.9067009433611927`*^9, 
   3.9067009447758646`*^9}, {3.906707002668676*^9, 3.906707003038018*^9}, {
   3.906781886878831*^9, 3.906781891344179*^9}, 3.9067998475875063`*^9, {
   3.91213853831357*^9, 
   3.9121385532745466`*^9}},ExpressionUUID->"29b5b581-01d6-46b9-93d5-\
8e343e3edb5e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"resCAC", "=", 
   RowBox[{"Association", "@", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"AssociationThread", "[", 
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"#", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], "]"}], "&"}], ",", "import"}], 
     "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Length", "@", "resCAC"}]}], "Input",
 CellChangeTimes->{{3.9067070509738474`*^9, 3.906707069500883*^9}, {
  3.9067072812257495`*^9, 3.906707284051081*^9}, {3.9067819108887596`*^9, 
  3.90678192016418*^9}, {3.9067998506924305`*^9, 3.9067998534390793`*^9}},
 CellLabel->
  "In[219]:=",ExpressionUUID->"a1567ffe-da39-45a5-977b-90accf32701a"],

Cell[BoxData["58436"], "Output",
 CellChangeTimes->{3.9067998869487815`*^9},
 CellLabel->
  "Out[220]=",ExpressionUUID->"a199a6a1-a977-4fe2-84d4-db48102d3511"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"import", "=", 
   RowBox[{"Flatten", "@", "probIntCNAC"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.905249214845274*^9, 3.9052492698061485`*^9}, {
   3.9052494347919254`*^9, 3.9052494361635323`*^9}, 3.9066997577284083`*^9, {
   3.9067000808262897`*^9, 3.906700082180298*^9}, {3.9067007707667584`*^9, 
   3.9067007841402264`*^9}, {3.9067009433611927`*^9, 
   3.9067009447758646`*^9}, {3.906707002668676*^9, 3.906707003038018*^9}, {
   3.906781886878831*^9, 3.906781891344179*^9}, {3.9067998571108956`*^9, 
   3.9067998580568285`*^9}, {3.9121385683582573`*^9, 
   3.912138587513073*^9}},ExpressionUUID->"5d6c36e7-0bf9-4442-ae00-\
d6cb666ddfd6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"resCNAC", "=", 
   RowBox[{"Association", "@", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"AssociationThread", "[", 
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"#", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], "]"}], "&"}], ",", "import"}], 
     "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Length", "@", "resCNAC"}]}], "Input",
 CellChangeTimes->{{3.9067070509738474`*^9, 3.906707069500883*^9}, {
  3.9067072812257495`*^9, 3.906707284051081*^9}, {3.9067819108887596`*^9, 
  3.90678192016418*^9}, {3.9067998605970354`*^9, 3.9067998641246033`*^9}},
 CellLabel->
  "In[222]:=",ExpressionUUID->"adbecbbc-9407-4946-845b-4c7e1d7c3e18"],

Cell[BoxData["51500"], "Output",
 CellChangeTimes->{3.906799887787643*^9},
 CellLabel->
  "Out[223]=",ExpressionUUID->"3539ed44-1c4b-42bc-b9c6-1fa89c084fd0"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Length", "@", "resBAC"}], "+", 
  RowBox[{"Length", "@", "resCAC"}], "+", 
  RowBox[{"Length", "@", "resCNAC"}]}]], "Input",
 CellChangeTimes->{{3.9121383991687317`*^9, 
  3.9121384068237495`*^9}},ExpressionUUID->"e07860ef-3adf-46f7-ad6c-\
8be80daec54e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"45192", "+", "58436", "+", "51500"}]], "Input",
 CellChangeTimes->{{3.912138418668121*^9, 3.9121384251859183`*^9}},
 CellLabel->
  "In[1009]:=",ExpressionUUID->"938400fc-c0b4-4c05-af8b-5a32fd58eead"],

Cell[BoxData["155128"], "Output",
 CellChangeTimes->{3.912138425449851*^9},
 CellLabel->
  "Out[1009]=",ExpressionUUID->"cd340cb5-48eb-4068-a037-88c1c1bf346e"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"INTprobInt", "=", 
   RowBox[{"Join", "[", 
    RowBox[{"resBAC", ",", "resCAC", ",", "resCNAC"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.9067820180992703`*^9, 3.906782036440729*^9}},
 CellLabel->
  "In[224]:=",ExpressionUUID->"b0e39e20-80a1-4f37-9ce6-ed1b11490be3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"INTint", "=", 
   RowBox[{"Select", "[", 
    RowBox[{"INTprobInt", ",", 
     RowBox[{
      RowBox[{"#", ">", "0.5"}], "&"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Length", "@", "INTint"}]}], "Input",
 CellChangeTimes->{{3.906707097331372*^9, 3.9067070976004906`*^9}, {
  3.906782086341201*^9, 3.9067820935723763`*^9}},
 CellLabel->
  "In[225]:=",ExpressionUUID->"aeba1b3e-6013-4d57-bb3d-df5c8e97e207"],

Cell[BoxData["105285"], "Output",
 CellChangeTimes->{3.9067071027156763`*^9, 3.9067998880656*^9},
 CellLabel->
  "Out[226]=",ExpressionUUID->"e2228c16-496c-4ae7-8231-72cd21d47cbd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"N", " ", "@", 
   RowBox[{"Length", "@", "INTint"}]}], "/", 
  RowBox[{"Length", "@", "INTprobInt"}]}]], "Input",
 CellChangeTimes->{{3.906707117405277*^9, 3.9067071236500177`*^9}, {
  3.906782094737891*^9, 3.906782098181857*^9}},
 CellLabel->
  "In[227]:=",ExpressionUUID->"3306b942-dc0d-485b-a7da-cb8aba665a0b"],

Cell[BoxData["0.6786975916662369`"], "Output",
 CellChangeTimes->{{3.906707118247542*^9, 3.906707124329975*^9}, 
   3.906799888115466*^9},
 CellLabel->
  "Out[227]=",ExpressionUUID->"054dd9d0-1f59-48a0-a202-bab7cc3083dd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Mean", "[", "INTint", "]"}]], "Input",
 CellChangeTimes->{3.9067171118393936`*^9, 3.9067821227347565`*^9},
 CellLabel->
  "In[228]:=",ExpressionUUID->"14012b3b-5087-44e9-b218-d07f7506d244"],

Cell[BoxData["0.9484411338790679`"], "Output",
 CellChangeTimes->{3.9067171136477942`*^9, 3.9067998881697135`*^9},
 CellLabel->
  "Out[228]=",ExpressionUUID->"c80625f4-a2b9-478b-a7cc-a33b995bd679"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StandardDeviation", "[", "INTint", "]"}]], "Input",
 CellChangeTimes->{{3.9067171361909513`*^9, 3.9067171385284634`*^9}, 
   3.906782123836367*^9},
 CellLabel->
  "In[229]:=",ExpressionUUID->"d97e9d5d-b92b-4f34-91cf-bd34cadc93a5"],

Cell[BoxData["0.10408988883809352`"], "Output",
 CellChangeTimes->{3.906717139590147*^9, 3.9067998882135983`*^9},
 CellLabel->
  "Out[229]=",ExpressionUUID->"9087dd41-c5ac-4c58-8ad6-7459fab0723a"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.906777790579241*^9, 3.9067777907126875`*^9}},
 CellLabel->
  "In[230]:=",ExpressionUUID->"9f808d59-5332-4a84-a4cd-75ec508826f0"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1428., 735.75},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"13.2 for Microsoft Windows (64-bit) (January 30, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"6313a930-3b5f-456c-bcfc-34b4be5a6ac5"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 241, 6, 28, "Input",ExpressionUUID->"cccf1356-34ac-4fb4-9533-7454e7e6dd19"],
Cell[CellGroupData[{
Cell[824, 30, 219, 4, 54, "Subsection",ExpressionUUID->"c1349309-8b67-466c-a605-354e6035568a"],
Cell[1046, 36, 9724, 203, 638, "Input",ExpressionUUID->"4f3d014e-4e5b-4c2b-82ad-fe1d6a1efe53"],
Cell[CellGroupData[{
Cell[10795, 243, 165, 3, 45, "Subsubsection",ExpressionUUID->"ae971821-fc8c-4510-b055-abd296f203cd"],
Cell[10963, 248, 1358, 26, 48, "Input",ExpressionUUID->"43732470-518f-47b9-9129-3bf7c032c104"],
Cell[12324, 276, 491, 9, 28, "Input",ExpressionUUID->"1e9aa822-f41d-4046-9fe4-9b2bb222cf79"],
Cell[CellGroupData[{
Cell[12840, 289, 358, 6, 28, "Input",ExpressionUUID->"32c65646-f66a-49e0-93b0-5a58c0d1b469"],
Cell[13201, 297, 3444, 57, 109, "Output",ExpressionUUID->"2952c2d1-5438-4e68-99c9-97be1e41a75d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16682, 359, 261, 5, 28, "Input",ExpressionUUID->"856acb7d-9429-449f-b6ff-3498d89ff6aa"],
Cell[16946, 366, 1044, 17, 32, "Output",ExpressionUUID->"555cfd9c-85e3-4fb9-a266-641696947ced"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[18039, 389, 165, 3, 45, "Subsubsection",ExpressionUUID->"d8c2a145-de67-4e82-b2de-4acbdc397837"],
Cell[18207, 394, 1362, 26, 48, "Input",ExpressionUUID->"45c8a981-a573-4587-bab1-15639d455501"],
Cell[19572, 422, 1498, 22, 28, "Input",ExpressionUUID->"e6a0c9f3-69eb-49fe-9223-c382ef11a376"],
Cell[CellGroupData[{
Cell[21095, 448, 207, 4, 28, "Input",ExpressionUUID->"25408df2-52d2-42c9-97b2-a84079a33405"],
Cell[21305, 454, 3264, 54, 109, "Output",ExpressionUUID->"c84e3905-6533-4e5d-8735-4a8dd72d878e"]
}, Open  ]],
Cell[24584, 511, 1362, 26, 48, "Input",ExpressionUUID->"4ba32ffa-8e72-40ee-b0c4-9861189d4038"],
Cell[25949, 539, 420, 8, 28, "Input",ExpressionUUID->"0d30b48a-8790-4dc3-8035-96dbed614ac6"],
Cell[CellGroupData[{
Cell[26394, 551, 259, 5, 28, "Input",ExpressionUUID->"1257dae3-a260-41ca-bb98-ecb092c3ded4"],
Cell[26656, 558, 3118, 47, 109, "Output",ExpressionUUID->"41a186da-5abb-419c-bef9-7fb95deb5306"]
}, Open  ]],
Cell[CellGroupData[{
Cell[29811, 610, 213, 3, 28, "Input",ExpressionUUID->"ed877582-6514-48df-95ca-287b74e406cc"],
Cell[30027, 615, 489, 7, 32, "Output",ExpressionUUID->"32e5075f-69b8-4d95-9fa1-024c0deebebd"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[30577, 629, 228, 4, 38, "Subsection",ExpressionUUID->"5af86a42-c60f-42c0-8898-119933e92589"],
Cell[30808, 635, 4715, 115, 371, "Input",ExpressionUUID->"f8a784ae-1c71-471d-8cb1-6131fa302f13"],
Cell[35526, 752, 4900, 118, 371, "Input",ExpressionUUID->"03a35647-e952-471d-863e-0c854f149e5a"]
}, Closed]],
Cell[CellGroupData[{
Cell[40463, 875, 162, 3, 38, "Subsection",ExpressionUUID->"dd55a5b2-987f-4904-922b-f0fbe9aef09c"],
Cell[CellGroupData[{
Cell[40650, 882, 610, 9, 45, "Subsubsection",ExpressionUUID->"b6a21df0-8423-49aa-a814-2345032e8374"],
Cell[41263, 893, 1565, 40, 86, "Input",ExpressionUUID->"acd977c5-d42f-4492-a319-f324d0d4af40"],
Cell[42831, 935, 526, 11, 28, "Input",ExpressionUUID->"3a1cc528-7612-41be-ab0e-ee292da78db2"],
Cell[CellGroupData[{
Cell[43382, 950, 235, 4, 28, "Input",ExpressionUUID->"0f51ee35-17b2-40e0-9e7a-d992fe3b4e78"],
Cell[43620, 956, 3220, 52, 109, "Output",ExpressionUUID->"3e7abf63-3bf1-4c07-b134-81a21bcecc28"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46877, 1013, 746, 13, 28, "Input",ExpressionUUID->"3f100938-d687-4b1a-a21f-ecbf7ccd576f"],
Cell[47626, 1028, 153812, 2639, 64, "Output",ExpressionUUID->"58a0edf4-f4c0-424e-8786-d7e676a0695a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[201475, 3672, 203, 3, 28, "Input",ExpressionUUID->"32ab41af-3949-4aa1-aa0e-d03378185def"],
Cell[201681, 3677, 241857, 4421, 585, "Output",ExpressionUUID->"631136f2-5afe-4492-917b-7bdf35dad74a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[443575, 8103, 1696, 41, 67, "Input",ExpressionUUID->"a2d8fd1d-4622-433a-a893-cd0a1aba9fa6"],
Cell[445274, 8146, 769, 11, 32, "Output",ExpressionUUID->"87baafa1-51ce-4ee6-af6b-58ba68356874"],
Cell[446046, 8159, 767, 11, 32, "Output",ExpressionUUID->"233bd85b-3c9e-441c-94a4-8787ea8efeaf"],
Cell[446816, 8172, 769, 11, 32, "Output",ExpressionUUID->"415b423e-a48f-4634-81d3-76297cfe3442"]
}, Open  ]],
Cell[CellGroupData[{
Cell[447622, 8188, 404, 10, 28, "Input",ExpressionUUID->"67ae60d7-878e-42e0-9998-a9c58a2f6d15"],
Cell[448029, 8200, 830, 14, 32, "Output",ExpressionUUID->"d86efcec-4bcd-4a45-85a6-a3d0c0f04faf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[448896, 8219, 462, 11, 28, "Input",ExpressionUUID->"20640db2-e85e-4673-863b-e9a651a2c7c4"],
Cell[449361, 8232, 831, 14, 32, "Output",ExpressionUUID->"dc7d53f8-c431-4e0f-83ed-3174b5d5a15c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[450229, 8251, 523, 10, 28, "Input",ExpressionUUID->"31407827-4b89-4010-a46a-6482d79cc762"],
Cell[450755, 8263, 10068, 247, 201, "Output",ExpressionUUID->"6e5edd5d-190b-4f8b-b759-415bd82df3a4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[460860, 8515, 422, 8, 28, "Input",ExpressionUUID->"7564dd65-c7ef-4ad0-ba99-14167def1a02"],
Cell[461285, 8525, 10033, 246, 201, "Output",ExpressionUUID->"5c927a0d-0038-4099-a797-c643e2c05ee6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[471355, 8776, 209, 4, 28, "Input",ExpressionUUID->"40f21b6c-18d4-4104-bc41-f2c662e21c77"],
Cell[471567, 8782, 2945, 48, 109, "Output",ExpressionUUID->"70f2ea65-ee11-425d-9d6c-b28c04b609e5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[474549, 8835, 376, 8, 28, "Input",ExpressionUUID->"c5325a29-3cd9-44ce-90fe-0d092559ce18"],
Cell[474928, 8845, 451, 9, 32, "Output",ExpressionUUID->"86f7715a-5c06-44e1-aa34-b5bae4c777ad"],
Cell[475382, 8856, 476, 9, 32, "Output",ExpressionUUID->"8d895088-9ec3-4bf7-b239-81549273bebe"],
Cell[475861, 8867, 374, 7, 32, "Output",ExpressionUUID->"c2e22456-86be-4f6a-93c4-68ea99e0cfff"],
Cell[476238, 8876, 374, 7, 32, "Output",ExpressionUUID->"cb937868-df37-45cd-999d-ed8f55bc4fd4"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[476673, 8890, 403, 6, 54, "Subsection",ExpressionUUID->"51fe84ac-34d3-4929-b874-684acf6b948a"],
Cell[477079, 8898, 1319, 26, 48, "Input",ExpressionUUID->"d80e4a5f-8663-4ee6-a127-693112d8967d"],
Cell[CellGroupData[{
Cell[478423, 8928, 385, 6, 28, "Input",ExpressionUUID->"c8429421-0a48-49eb-8d67-d2d40c9237fa"],
Cell[478811, 8936, 694, 10, 32, "Output",ExpressionUUID->"2dc613ff-bbad-44bb-a118-6a16206ae079"]
}, Open  ]],
Cell[CellGroupData[{
Cell[479542, 8951, 164, 3, 45, "Subsubsection",ExpressionUUID->"ba134df6-2b1f-4a7a-93c3-6e4c28ac4fd4"],
Cell[CellGroupData[{
Cell[479731, 8958, 430, 11, 28, "Input",ExpressionUUID->"da40c4f1-838b-486e-9f3b-2ea4b09dec47"],
Cell[480164, 8971, 2510, 53, 166, "Output",ExpressionUUID->"6e0d398a-f731-4d16-b063-74fe43e40651"]
}, Open  ]],
Cell[CellGroupData[{
Cell[482711, 9029, 522, 13, 28, "Input",ExpressionUUID->"c2141706-1558-49af-9ade-13e45815c780"],
Cell[483236, 9044, 1750, 28, 109, "Output",ExpressionUUID->"bffec5bc-da54-4a65-b4da-6bdd906cb247"]
}, Open  ]],
Cell[CellGroupData[{
Cell[485023, 9077, 341, 8, 28, "Input",ExpressionUUID->"c3c04c6c-e99f-4616-abfd-bfda8bbebc0f"],
Cell[485367, 9087, 526, 10, 32, "Output",ExpressionUUID->"034890eb-794a-4ab7-a358-3e1fdbd4b116"]
}, Open  ]],
Cell[485908, 9100, 2064, 49, 162, "Input",ExpressionUUID->"9dd83b67-6ad2-4941-aa02-68b0f6bf3a01"],
Cell[CellGroupData[{
Cell[487997, 9153, 809, 13, 28, "Input",ExpressionUUID->"1b971622-c382-44a7-ad5c-fc2e3255025c"],
Cell[488809, 9168, 5185, 76, 356, "Output",ExpressionUUID->"43f23a34-26d0-454f-903d-f1343d0cfeb4"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[494043, 9250, 184, 3, 45, "Subsubsection",ExpressionUUID->"ede27437-f44f-42c1-ab23-6b53ecaf6a40"],
Cell[494230, 9255, 2122, 50, 162, "Input",ExpressionUUID->"e6e07e38-4111-41b2-8df8-871f8db1f71c"],
Cell[CellGroupData[{
Cell[496377, 9309, 278, 6, 28, "Input",ExpressionUUID->"86c0327c-95f8-4678-bea3-a36c7ad5f115"],
Cell[496658, 9317, 186, 3, 32, "Output",ExpressionUUID->"6a4d0aad-6828-4188-aab1-a7fe8415d50b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[496881, 9325, 207, 4, 28, "Input",ExpressionUUID->"966c3ab0-cd7f-4ff1-9b92-5b6967ae1fdf"],
Cell[497091, 9331, 186, 3, 32, "Output",ExpressionUUID->"ef271278-e479-4528-8e3d-56445827b56f"]
}, Open  ]],
Cell[497292, 9337, 1287, 34, 105, "Input",ExpressionUUID->"277c48ae-b646-4bfb-b119-c85d970419b8"],
Cell[CellGroupData[{
Cell[498604, 9375, 210, 5, 28, "Input",ExpressionUUID->"1955edad-ebe7-479a-8541-a37c938fa52b"],
Cell[498817, 9382, 158, 3, 32, "Output",ExpressionUUID->"829e49e0-8e62-460d-89a6-eb23ebb3bc23"]
}, Open  ]],
Cell[498990, 9388, 1051, 30, 86, "Input",ExpressionUUID->"4f596036-1b02-46ed-a252-e7cb01065bda"],
Cell[CellGroupData[{
Cell[500066, 9422, 210, 5, 28, "Input",ExpressionUUID->"ff04b7aa-d923-4a2f-9b6b-90496a6dc4cf"],
Cell[500279, 9429, 160, 3, 32, "Output",ExpressionUUID->"38bbbe13-90c5-4da4-8ae6-cc3f538e6404"]
}, Open  ]],
Cell[CellGroupData[{
Cell[500476, 9437, 236, 5, 28, "Input",ExpressionUUID->"16d50e20-6ee7-418b-8555-05764f8275ad"],
Cell[500715, 9444, 2213, 44, 139, "Output",ExpressionUUID->"be51ba00-9232-4f58-913e-281264adfab1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[502965, 9493, 454, 11, 28, "Input",ExpressionUUID->"9e2770f0-08af-4019-8b44-a4b6a2a4f58d"],
Cell[503422, 9506, 155, 3, 32, "Output",ExpressionUUID->"e68617dd-4189-4e92-87c3-7fce0cc228b2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[503614, 9514, 450, 11, 28, "Input",ExpressionUUID->"656a0413-a2d3-4d95-bc45-3b734ef444ff"],
Cell[504067, 9527, 160, 3, 32, "Output",ExpressionUUID->"db0c3ac2-6a24-48a4-ba07-f9e2c19457df"]
}, Open  ]],
Cell[CellGroupData[{
Cell[504264, 9535, 1294, 22, 28, "Input",ExpressionUUID->"47ab3939-fee4-4262-bbec-0810b25926a3"],
Cell[505561, 9559, 170, 3, 32, "Output",ExpressionUUID->"04262be2-6b7c-476e-9343-77d8b73f1fd6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[505768, 9567, 433, 11, 28, "Input",ExpressionUUID->"b978e813-a96c-4d92-b923-11202681da2b"],
Cell[506204, 9580, 169, 3, 32, "Output",ExpressionUUID->"78e35540-7108-4f2f-856c-27f3d2fa9c84"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[506434, 9590, 425, 6, 54, "Subsection",ExpressionUUID->"c95cb763-0592-43fc-95f3-c358d052ade8"],
Cell[506862, 9598, 1371, 26, 48, "Input",ExpressionUUID->"ab8dafb7-079f-4be4-a048-7882cf1fa006"],
Cell[CellGroupData[{
Cell[508258, 9628, 389, 7, 28, "Input",ExpressionUUID->"440f0c80-3333-4bd9-a28c-b06cccbfce07"],
Cell[508650, 9637, 748, 12, 32, "Output",ExpressionUUID->"65466da9-f0bd-437f-9af4-fb04c948ade7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[509435, 9654, 184, 3, 45, "Subsubsection",ExpressionUUID->"b5b98f33-db5d-4aa2-bfd5-83bdfb6a3359"],
Cell[509622, 9659, 2172, 50, 162, "Input",ExpressionUUID->"7bc8872c-d0f7-44ca-a938-638242508159"],
Cell[CellGroupData[{
Cell[511819, 9713, 302, 7, 28, "Input",ExpressionUUID->"7b701cf3-8d35-420a-a381-0b4e1c6c5675"],
Cell[512124, 9722, 210, 4, 32, "Output",ExpressionUUID->"ada94dbc-2ddc-4019-94a4-6f61704e5e18"]
}, Open  ]],
Cell[CellGroupData[{
Cell[512371, 9731, 1287, 34, 105, "Input",ExpressionUUID->"d58143e0-5a28-4ab7-bd54-2a92f834741d"],
Cell[513661, 9767, 439, 10, 28, "Message",ExpressionUUID->"d5f8f720-fb8f-4db7-a150-4ae69eb44d9d"],
Cell[514103, 9779, 379, 9, 28, "Message",ExpressionUUID->"b1357608-88a4-4e7c-8a50-88bc939abe12"],
Cell[514485, 9790, 364, 9, 28, "Message",ExpressionUUID->"e41784e4-8619-4385-9f92-646afb1ed3db"],
Cell[514852, 9801, 362, 9, 28, "Message",ExpressionUUID->"8f10524c-6c9d-4071-a090-5e59c002c239"],
Cell[515217, 9812, 362, 9, 28, "Message",ExpressionUUID->"494389c9-d4d1-4db0-afd4-7ca61faae344"],
Cell[515582, 9823, 455, 10, 28, "Message",ExpressionUUID->"4931dc85-6601-4031-a68e-a18efb12fad8"],
Cell[516040, 9835, 385, 9, 28, "Message",ExpressionUUID->"29facedf-e114-4864-85f9-3d8667f43f7d"],
Cell[516428, 9846, 399, 9, 28, "Message",ExpressionUUID->"98f332a0-335a-4106-86b9-986123848d30"],
Cell[516830, 9857, 396, 9, 28, "Message",ExpressionUUID->"0adb9c0c-e310-4ad6-b85a-50c378c487d1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[517263, 9871, 210, 5, 28, "Input",ExpressionUUID->"79cc3bd7-ee22-44bd-a422-a6388f00ea48"],
Cell[517476, 9878, 158, 3, 32, "Output",ExpressionUUID->"2096c946-6a97-4ba7-bbf9-eca7d6d00ea5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[517671, 9886, 970, 28, 67, "Input",ExpressionUUID->"225fc275-9ff5-4377-9c42-67403cf43d75"],
Cell[518644, 9916, 444, 10, 28, "Message",ExpressionUUID->"82d0b43e-643d-42b9-9caa-a27b76b5fd51"],
Cell[519091, 9928, 380, 9, 28, "Message",ExpressionUUID->"794a4d71-004d-4d2e-91c3-ea268c5a83e2"],
Cell[519474, 9939, 364, 9, 28, "Message",ExpressionUUID->"39cf16d0-371d-4e89-a2a4-cd328364869f"],
Cell[519841, 9950, 364, 9, 28, "Message",ExpressionUUID->"049b00c1-d4a1-4d2f-84da-4ace67e74061"],
Cell[520208, 9961, 364, 9, 28, "Message",ExpressionUUID->"1575c58c-f3bc-4daf-8e83-2c1a752bbcab"],
Cell[520575, 9972, 455, 10, 28, "Message",ExpressionUUID->"807acc0f-1a63-4867-b7ad-dfc8b825ce96"],
Cell[521033, 9984, 385, 9, 28, "Message",ExpressionUUID->"5895bc9a-8efe-401f-9b7e-f4ea5376a1c0"],
Cell[521421, 9995, 397, 9, 28, "Message",ExpressionUUID->"26bb93d9-6c5f-47e3-9dd5-04db20201285"],
Cell[521821, 10006, 399, 9, 28, "Message",ExpressionUUID->"5979cd82-8a14-4f29-9f4e-851142113a52"]
}, Open  ]],
Cell[CellGroupData[{
Cell[522257, 10020, 210, 5, 28, "Input",ExpressionUUID->"a799b3e6-94e0-4a6e-a7f6-007717f31a15"],
Cell[522470, 10027, 160, 3, 32, "Output",ExpressionUUID->"8a3e8c5e-a6ec-41e5-b85a-cfd340b55008"]
}, Open  ]],
Cell[CellGroupData[{
Cell[522667, 10035, 505, 12, 28, "Input",ExpressionUUID->"f5c17ce3-aa8e-4fcd-9518-12d9d8fc0699"],
Cell[523175, 10049, 156, 3, 32, "Output",ExpressionUUID->"c73e9c2d-3224-45db-8ee5-8a314edefc54"]
}, Open  ]],
Cell[CellGroupData[{
Cell[523368, 10057, 501, 12, 28, "Input",ExpressionUUID->"5fd40e63-317d-49bd-bd60-4e83faa352fc"],
Cell[523872, 10071, 160, 3, 32, "Output",ExpressionUUID->"4bda7630-e2d8-4154-b192-7d488dbc0346"]
}, Open  ]],
Cell[CellGroupData[{
Cell[524069, 10079, 1346, 23, 28, "Input",ExpressionUUID->"96eb8854-6cfd-4511-b041-260ec28a8177"],
Cell[525418, 10104, 173, 3, 32, "Output",ExpressionUUID->"7d2b4685-bd7a-496c-ac2c-f34dfefac8d3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[525628, 10112, 482, 12, 28, "Input",ExpressionUUID->"31eace4b-eb4d-4728-80ec-9413b5f5d39c"],
Cell[526113, 10126, 173, 3, 32, "Output",ExpressionUUID->"db265b9e-bbfa-425f-ae9c-919089588524"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[526347, 10136, 451, 7, 54, "Subsection",ExpressionUUID->"8faa539f-e81c-4910-8762-f41cd3c467cf"],
Cell[526801, 10145, 1397, 27, 48, "Input",ExpressionUUID->"195d930c-7f5f-4e26-807b-e7e7838f9502"],
Cell[CellGroupData[{
Cell[528223, 10176, 389, 7, 28, "Input",ExpressionUUID->"a0d43197-38db-4183-af61-dc914b44932b"],
Cell[528615, 10185, 747, 12, 32, "Output",ExpressionUUID->"5ccdf2ef-11fd-4b87-a9c0-7a7427012d4d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[529399, 10202, 184, 3, 45, "Subsubsection",ExpressionUUID->"46664c5c-6025-44fa-8f82-4ddf13c0a5fb"],
Cell[529586, 10207, 2252, 52, 162, "Input",ExpressionUUID->"9abc0315-aeb7-41a2-86c3-9f33f8cedf41"],
Cell[CellGroupData[{
Cell[531863, 10263, 328, 8, 28, "Input",ExpressionUUID->"1980a8ad-ff08-44cd-9413-81b9dbf1ce9a"],
Cell[532194, 10273, 234, 5, 32, "Output",ExpressionUUID->"d1f135a1-f5cf-4ec1-9bd2-720d9790b4c8"]
}, Open  ]],
Cell[532443, 10281, 1070, 30, 67, "Input",ExpressionUUID->"7fcb9d83-864b-49f4-a65a-63d52435cbf2"],
Cell[CellGroupData[{
Cell[533538, 10315, 252, 6, 28, "Input",ExpressionUUID->"9d82c09e-24ae-4e75-8bba-30bb5833a72c"],
Cell[533793, 10323, 181, 3, 32, "Output",ExpressionUUID->"1119846e-4140-4e8c-aeec-fef219584675"]
}, Open  ]],
Cell[CellGroupData[{
Cell[534011, 10331, 558, 13, 28, "Input",ExpressionUUID->"127264da-c1a8-41c5-9045-f8e04b7340a9"],
Cell[534572, 10346, 178, 3, 32, "Output",ExpressionUUID->"66483d53-c986-4813-8bbf-1823b0980e55"]
}, Open  ]],
Cell[CellGroupData[{
Cell[534787, 10354, 554, 13, 28, "Input",ExpressionUUID->"979a7fc3-6402-4005-a220-41efd69c67b3"],
Cell[535344, 10369, 181, 3, 32, "Output",ExpressionUUID->"45f277c2-eb89-418a-ae52-f29ed89e9eb6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[535562, 10377, 1396, 23, 28, "Input",ExpressionUUID->"3124907d-3bd2-468f-8e26-e6b348efa9cc"],
Cell[536961, 10402, 195, 3, 32, "Output",ExpressionUUID->"715aedf2-c504-4cad-ae86-9e521e1bd837"]
}, Open  ]],
Cell[CellGroupData[{
Cell[537193, 10410, 531, 13, 28, "Input",ExpressionUUID->"91713bfe-3527-43d8-844b-25f9742172c3"],
Cell[537727, 10425, 197, 3, 32, "Output",ExpressionUUID->"b520241a-5b28-4db1-a886-78fb512d85b5"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[537985, 10435, 473, 7, 38, "Subsection",ExpressionUUID->"458e6b4c-5b8e-47f5-b27b-dcf916fb470a"],
Cell[538461, 10444, 1422, 27, 48, "Input",ExpressionUUID->"a774371b-8cfd-4922-b4cc-25b3d302cfa7"],
Cell[CellGroupData[{
Cell[539908, 10475, 389, 7, 28, "Input",ExpressionUUID->"d10d32d4-d68a-4366-a63f-2390cddb58cc"],
Cell[540300, 10484, 800, 12, 32, "Output",ExpressionUUID->"347000cb-7c95-4b11-9f54-86bdf5c2726f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[541137, 10501, 184, 3, 45, "Subsubsection",ExpressionUUID->"5d544bb8-953f-487e-b061-62e65d8b9994"],
Cell[541324, 10506, 2478, 55, 162, "Input",ExpressionUUID->"15128ce6-9f16-4359-bf72-5702b6d27c89"],
Cell[CellGroupData[{
Cell[543827, 10565, 398, 9, 28, "Input",ExpressionUUID->"dbe1ae05-d4ac-4641-b42f-5f625b9fcbd1"],
Cell[544228, 10576, 158, 3, 32, "Output",ExpressionUUID->"923dd686-bd7c-4f13-9d18-586bcf146970"]
}, Open  ]],
Cell[544401, 10582, 1298, 33, 67, "Input",ExpressionUUID->"07a7037d-59b5-419a-ab32-f56f14e2e162"],
Cell[CellGroupData[{
Cell[545724, 10619, 325, 7, 28, "Input",ExpressionUUID->"cc0bff45-a405-480d-8238-6f476db047d5"],
Cell[546052, 10628, 160, 3, 32, "Output",ExpressionUUID->"9cc8d8ec-f37a-42bf-ab27-8b4c44e50b62"]
}, Open  ]],
Cell[CellGroupData[{
Cell[546249, 10636, 708, 15, 28, "Input",ExpressionUUID->"29928d48-0c31-4b5c-bdc9-a0e310571b09"],
Cell[546960, 10653, 157, 3, 32, "Output",ExpressionUUID->"21b9895d-19b5-4d4f-ab28-d62129ba4d1e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[547154, 10661, 704, 15, 28, "Input",ExpressionUUID->"70f78dec-55f0-4813-8b1e-595efc626fc4"],
Cell[547861, 10678, 158, 3, 32, "Output",ExpressionUUID->"d05779ee-5984-4e70-a253-7e314b3b5d41"]
}, Open  ]],
Cell[CellGroupData[{
Cell[548056, 10686, 1554, 26, 28, "Input",ExpressionUUID->"74742785-e224-4592-bea1-03513635b046"],
Cell[549613, 10714, 172, 3, 32, "Output",ExpressionUUID->"7af801b2-02c3-419a-b425-26d25d7bdb48"]
}, Open  ]],
Cell[CellGroupData[{
Cell[549822, 10722, 687, 15, 28, "Input",ExpressionUUID->"83ab65c1-dbc2-4603-af7b-975b49c8699c"],
Cell[550512, 10739, 171, 3, 32, "Output",ExpressionUUID->"44b66d05-8293-4696-bbbe-70968bbb73d4"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[550744, 10749, 475, 7, 38, "Subsection",ExpressionUUID->"e49adb37-6ad3-488e-9547-f3b51e452f84"],
Cell[551222, 10758, 1423, 27, 48, "Input",ExpressionUUID->"a4e60bbf-547a-4353-a36b-6fb456fcbfa9"],
Cell[CellGroupData[{
Cell[552670, 10789, 389, 7, 28, "Input",ExpressionUUID->"5ce74353-2b46-45ce-b2d5-9511901b579e"],
Cell[553062, 10798, 765, 12, 32, "Output",ExpressionUUID->"14d4ceb3-a110-4184-8cc4-76b7f0aac22a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[553864, 10815, 184, 3, 45, "Subsubsection",ExpressionUUID->"0b0b3cf7-017e-411d-85a8-960567694325"],
Cell[554051, 10820, 2326, 53, 162, "Input",ExpressionUUID->"c5e0f018-3246-4f8c-96a8-2ef0f509cb83"],
Cell[CellGroupData[{
Cell[556402, 10877, 350, 8, 28, "Input",ExpressionUUID->"000a9e35-2fe8-4ee9-952e-d7ddb0ae2a0b"],
Cell[556755, 10887, 259, 5, 32, "Output",ExpressionUUID->"aac197fd-2482-4d1e-9f3b-81b49de02037"]
}, Open  ]],
Cell[557029, 10895, 1146, 31, 67, "Input",ExpressionUUID->"e7af3acc-41fc-44c8-8814-fdea7978f1a5"],
Cell[CellGroupData[{
Cell[558200, 10930, 274, 6, 28, "Input",ExpressionUUID->"0f70fbee-d9b0-48a1-b19f-4a274439dc3f"],
Cell[558477, 10938, 209, 4, 32, "Output",ExpressionUUID->"25d20a06-46c1-4f11-bb5e-30b55e04c404"]
}, Open  ]],
Cell[CellGroupData[{
Cell[558723, 10947, 608, 13, 28, "Input",ExpressionUUID->"49dcb8b8-7ea0-427b-ae40-953df1451ea2"],
Cell[559334, 10962, 201, 4, 32, "Output",ExpressionUUID->"5df8161f-4fbf-40a8-8e5f-e3018b1395a4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[559572, 10971, 602, 13, 28, "Input",ExpressionUUID->"7234c607-5512-4ccb-aece-21dd63e95ef0"],
Cell[560177, 10986, 207, 4, 32, "Output",ExpressionUUID->"7c2b7c47-c8aa-44de-a34a-ae3ac1730a9f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[560421, 10995, 1446, 24, 28, "Input",ExpressionUUID->"fde621a7-33a2-48a0-9f30-6eefe4d20619"],
Cell[561870, 11021, 220, 4, 32, "Output",ExpressionUUID->"02cb4eb4-45e9-4e87-a4c8-a6040861d562"]
}, Open  ]],
Cell[CellGroupData[{
Cell[562127, 11030, 579, 13, 28, "Input",ExpressionUUID->"31abbbcc-b485-40fb-a437-710e4574a352"],
Cell[562709, 11045, 252, 5, 32, "Output",ExpressionUUID->"2df4e675-5e19-40a5-9793-a465fe1a96ff"]
}, Open  ]],
Cell[562976, 11053, 238, 5, 28, "Input",ExpressionUUID->"54364e20-8c93-44ab-a8c6-fba93cf4f6d3"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[563263, 11064, 499, 7, 38, "Subsection",ExpressionUUID->"309e550d-ed28-4bae-a0c6-561907653fb1"],
Cell[563765, 11073, 1449, 27, 48, "Input",ExpressionUUID->"d6793c87-3e69-41d7-9960-fa9407114d0b"],
Cell[CellGroupData[{
Cell[565239, 11104, 389, 7, 28, "Input",ExpressionUUID->"acfe31ef-c72e-4ac5-8aaf-2fd5684fcc00"],
Cell[565631, 11113, 160, 3, 32, "Output",ExpressionUUID->"7a843088-d338-4a4d-8f55-8637622ebb5c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[565828, 11121, 184, 3, 45, "Subsubsection",ExpressionUUID->"8d1ad993-edfe-46b4-a429-629bb7c995d0"],
Cell[566015, 11126, 2404, 54, 162, "Input",ExpressionUUID->"1e76e8e1-ebfc-4383-9d07-72e3607143ad"],
Cell[CellGroupData[{
Cell[568444, 11184, 372, 8, 28, "Input",ExpressionUUID->"34d931da-b3da-4313-807b-7fb254113037"],
Cell[568819, 11194, 157, 3, 32, "Output",ExpressionUUID->"c584d995-1e7a-4e7a-ba67-1e2b4bc0729d"]
}, Open  ]],
Cell[568991, 11200, 1224, 32, 67, "Input",ExpressionUUID->"fd5f4b73-e52f-448e-ac8e-3df9b2894bb3"],
Cell[CellGroupData[{
Cell[570240, 11236, 301, 7, 28, "Input",ExpressionUUID->"1c816c1f-7957-4ed8-88d9-3b480e4e8da8"],
Cell[570544, 11245, 160, 3, 32, "Output",ExpressionUUID->"ac890576-863e-41bd-8bbd-b77c3681fabb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[570741, 11253, 659, 14, 28, "Input",ExpressionUUID->"3ce36cee-e4b5-4ca2-9f54-10e2d847d986"],
Cell[571403, 11269, 159, 3, 32, "Output",ExpressionUUID->"3ddd6884-ff54-4477-8d08-b7df5c47e4a5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[571599, 11277, 654, 14, 28, "Input",ExpressionUUID->"d13c41af-83e3-4e4d-869c-d9710115d58e"],
Cell[572256, 11293, 159, 3, 32, "Output",ExpressionUUID->"42520249-1068-468e-9354-90f419b79b60"]
}, Open  ]],
Cell[CellGroupData[{
Cell[572452, 11301, 1500, 25, 28, "Input",ExpressionUUID->"4411f51d-67e1-42f4-b0cb-12f461fc565e"],
Cell[573955, 11328, 171, 3, 32, "Output",ExpressionUUID->"d13221be-42cd-441e-9151-2fd6a86b8833"]
}, Open  ]],
Cell[CellGroupData[{
Cell[574163, 11336, 633, 14, 28, "Input",ExpressionUUID->"6d20d8f7-f775-4c21-ad87-dc2d61cc7a73"],
Cell[574799, 11352, 172, 3, 32, "Output",ExpressionUUID->"29f24fa3-8ef8-4f8e-970a-3ac83aada352"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[575032, 11362, 525, 8, 38, "Subsection",ExpressionUUID->"96cb5c90-b824-44b4-a256-c6039c4ef55d"],
Cell[575560, 11372, 1475, 28, 48, "Input",ExpressionUUID->"951f4b5f-1ed8-4019-a183-3a2adc57cfce"],
Cell[CellGroupData[{
Cell[577060, 11404, 385, 6, 28, "Input",ExpressionUUID->"733937f8-a6d7-42fb-a7e5-445ec54ae9f5"],
Cell[577448, 11412, 227, 3, 32, "Output",ExpressionUUID->"e12a5320-2042-4388-9e3c-5c82c60ba959"]
}, Open  ]],
Cell[CellGroupData[{
Cell[577712, 11420, 184, 3, 45, "Subsubsection",ExpressionUUID->"14c6f07b-6658-42af-9b90-7b0932d3b433"],
Cell[577899, 11425, 2500, 54, 162, "Input",ExpressionUUID->"291c7d5a-8422-4b86-ab34-748a658decd1"],
Cell[CellGroupData[{
Cell[580424, 11483, 393, 8, 28, "Input",ExpressionUUID->"5e21c5e4-6208-420b-9951-499644373783"],
Cell[580820, 11493, 227, 3, 32, "Output",ExpressionUUID->"4c807eb4-3d04-4d5a-850f-8d42e551882b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[581084, 11501, 706, 14, 28, "Input",ExpressionUUID->"c0a13389-5921-45a2-9d14-3c8943fcae45"],
Cell[581793, 11517, 178, 2, 32, "Output",ExpressionUUID->"0830c70f-a837-4e0d-8d3b-fbfad8ac42fb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[582008, 11524, 699, 14, 28, "Input",ExpressionUUID->"d290f043-5158-48d4-9ac0-4381314f2228"],
Cell[582710, 11540, 180, 2, 32, "Output",ExpressionUUID->"468b0250-3cfa-4b6d-bcd3-e30762026cee"]
}, Open  ]],
Cell[CellGroupData[{
Cell[582927, 11547, 1548, 25, 28, "Input",ExpressionUUID->"27dccfe0-35ac-42db-8b7b-1c6c5636c303"],
Cell[584478, 11574, 190, 2, 32, "Output",ExpressionUUID->"d9222da7-5800-4935-a995-f65a4969b280"]
}, Open  ]],
Cell[CellGroupData[{
Cell[584705, 11581, 679, 14, 28, "Input",ExpressionUUID->"0966de87-d15b-4181-a0b2-f7aad0937db1"],
Cell[585387, 11597, 193, 2, 32, "Output",ExpressionUUID->"467f2893-966f-436d-936d-025c8e5fb7c3"]
}, Open  ]],
Cell[585595, 11602, 1606, 42, 162, "Input",ExpressionUUID->"984f2908-7c05-49e9-a124-2e8eac0d1310"],
Cell[CellGroupData[{
Cell[587226, 11648, 206, 4, 28, "Input",ExpressionUUID->"9957cd9d-408c-40d9-bf53-80d647935278"],
Cell[587435, 11654, 203, 3, 32, "Output",ExpressionUUID->"bdaa98ee-2461-4aac-bd44-3efee6fb2ffc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[587675, 11662, 706, 14, 28, "Input",ExpressionUUID->"170e7655-2d60-46eb-b8c0-c34f5c4551b2"],
Cell[588384, 11678, 177, 2, 32, "Output",ExpressionUUID->"82cb17ec-4372-4e40-a297-85de574ef603"]
}, Open  ]],
Cell[CellGroupData[{
Cell[588598, 11685, 699, 14, 28, "Input",ExpressionUUID->"b5a605e4-9267-48e1-b128-e6810ba70fed"],
Cell[589300, 11701, 180, 2, 32, "Output",ExpressionUUID->"a5485d3c-8db5-4fc1-8a74-4ecca5a8fe7f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[589517, 11708, 1548, 25, 28, "Input",ExpressionUUID->"d6b995db-69cc-4f48-abdb-9e857d979ee4"],
Cell[591068, 11735, 191, 2, 32, "Output",ExpressionUUID->"718852f6-93b9-47a8-9569-74992afd2bfe"]
}, Open  ]],
Cell[CellGroupData[{
Cell[591296, 11742, 679, 14, 28, "Input",ExpressionUUID->"94e762b9-96fd-4b84-a055-b2f1a29827be"],
Cell[591978, 11758, 191, 2, 32, "Output",ExpressionUUID->"2cf5d39a-7bd7-4d9c-a2f9-b6d60dc1c3af"]
}, Open  ]],
Cell[592184, 11763, 1615, 40, 124, "Input",ExpressionUUID->"a20abd1d-63c4-49cd-9578-3d3cfde765d2"],
Cell[CellGroupData[{
Cell[593824, 11807, 321, 6, 28, "Input",ExpressionUUID->"ea2e63c9-4b8b-4494-b0bb-d593134433f8"],
Cell[594148, 11815, 226, 3, 32, "Output",ExpressionUUID->"07361b93-19d2-45b9-8865-87be6f8a3fa9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[594411, 11823, 706, 14, 28, "Input",ExpressionUUID->"5b66db96-bb12-46e5-905f-863a14c5a6b2"],
Cell[595120, 11839, 173, 2, 32, "Output",ExpressionUUID->"4de62ffc-061d-471c-a06e-8525f7529a5c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[595330, 11846, 699, 14, 28, "Input",ExpressionUUID->"2839f66f-7bac-428c-ae4b-efae90e42e43"],
Cell[596032, 11862, 177, 2, 32, "Output",ExpressionUUID->"68e4ee7f-2b1c-4366-9cef-8c171e5d3b65"]
}, Open  ]],
Cell[CellGroupData[{
Cell[596246, 11869, 1548, 25, 28, "Input",ExpressionUUID->"7d0ac452-49f8-4da6-bbad-8658d35911c1"],
Cell[597797, 11896, 173, 2, 32, "Output",ExpressionUUID->"fe1168d6-07bf-4faa-83a3-49329af2e93a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[598007, 11903, 679, 14, 28, "Input",ExpressionUUID->"f63e3aba-6081-4ebc-9083-2d374587c407"],
Cell[598689, 11919, 191, 2, 32, "Output",ExpressionUUID->"adad0248-2e51-499e-893a-8d91f0e3e99b"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[598941, 11928, 354, 5, 54, "Subsection",ExpressionUUID->"703de693-c195-47ec-8b4f-de4ab2ae6f65"],
Cell[599298, 11935, 1194, 24, 48, "Input",ExpressionUUID->"c257eb9f-b259-4b74-84f9-cb5e0d9dd18b"],
Cell[CellGroupData[{
Cell[600517, 11963, 290, 6, 28, "Input",ExpressionUUID->"ea51d0bc-92bb-467b-b330-a465c8f924f6"],
Cell[600810, 11971, 676, 11, 32, "Output",ExpressionUUID->"c1482a97-dc02-44fa-ad2b-624ef88dc965"]
}, Open  ]],
Cell[CellGroupData[{
Cell[601523, 11987, 233, 4, 45, "Subsubsection",ExpressionUUID->"b04d6f35-9dc7-4ba9-8a1a-5e99798dec84"],
Cell[601759, 11993, 1605, 43, 162, "Input",ExpressionUUID->"776ae4cc-6742-4cb0-b509-bb7b783195b3"],
Cell[603367, 12038, 970, 28, 67, "Input",ExpressionUUID->"a654b3b9-6466-41a6-bd00-9a42713b8c70"],
Cell[CellGroupData[{
Cell[604362, 12070, 253, 6, 28, "Input",ExpressionUUID->"46b0efa1-0767-4b7d-bf64-975d9698d62a"],
Cell[604618, 12078, 159, 3, 32, "Output",ExpressionUUID->"1577993a-59d6-42a4-976d-c769717e7d35"]
}, Open  ]],
Cell[CellGroupData[{
Cell[604814, 12086, 756, 15, 28, "Input",ExpressionUUID->"b540cfba-affd-4d3e-884e-1344c2f5ce0f"],
Cell[605573, 12103, 206, 4, 32, "Output",ExpressionUUID->"55df64da-0ab5-4325-9e0c-d3bc659695d4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[605816, 12112, 751, 15, 28, "Input",ExpressionUUID->"944c3c57-0480-46b9-9755-221f56d2d0f3"],
Cell[606570, 12129, 210, 4, 32, "Output",ExpressionUUID->"f079a96a-ef54-4fd8-a156-d1482f89b9b6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[606817, 12138, 1602, 26, 28, "Input",ExpressionUUID->"cebc914e-f829-433a-a044-2db532ed3fc3"],
Cell[608422, 12166, 218, 4, 32, "Output",ExpressionUUID->"99a67cc5-9d14-4566-85b9-4d835ff3a7e6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[608677, 12175, 729, 15, 28, "Input",ExpressionUUID->"0aca069b-6559-4a5b-9ec7-a55b8e38f8f0"],
Cell[609409, 12192, 219, 4, 32, "Output",ExpressionUUID->"4487d97f-7170-48c3-ae64-62ebaf0750ef"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[609689, 12203, 380, 6, 54, "Subsection",ExpressionUUID->"318baea1-56b3-4baa-9ca7-541cd6445814"],
Cell[610072, 12211, 1216, 24, 48, "Input",ExpressionUUID->"46450245-2c8a-4a92-90dc-ce283deba321"],
Cell[CellGroupData[{
Cell[611313, 12239, 290, 6, 28, "Input",ExpressionUUID->"ad4fbc9a-a9d2-4c3e-a72d-a87148bb314b"],
Cell[611606, 12247, 726, 11, 32, "Output",ExpressionUUID->"4a86a2a3-5e5c-4dfc-b6de-6bd46317321e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[612369, 12263, 233, 4, 45, "Subsubsection",ExpressionUUID->"b0d6e32a-efe4-43e5-b1af-ef84ccb65501"],
Cell[612605, 12269, 1682, 44, 162, "Input",ExpressionUUID->"d565522b-52cf-4026-aa46-85eafe8d52d5"],
Cell[614290, 12315, 1048, 29, 67, "Input",ExpressionUUID->"a32bbb9d-5a60-47a1-8c3a-b743e126b57f"],
Cell[CellGroupData[{
Cell[615363, 12348, 275, 6, 28, "Input",ExpressionUUID->"d3e21200-75ba-4006-a672-c2c1c6851e52"],
Cell[615641, 12356, 183, 3, 32, "Output",ExpressionUUID->"9790ea3d-f481-4826-8a97-53f8005559ce"]
}, Open  ]],
Cell[CellGroupData[{
Cell[615861, 12364, 805, 16, 28, "Input",ExpressionUUID->"4688fcda-c85c-4318-bd8c-eba908bbdc5d"],
Cell[616669, 12382, 228, 4, 32, "Output",ExpressionUUID->"6461ccac-62a2-4781-a5a9-5497c83a4fda"]
}, Open  ]],
Cell[CellGroupData[{
Cell[616934, 12391, 803, 16, 28, "Input",ExpressionUUID->"b2b5b088-a6db-4aaf-ae36-676071c1823c"],
Cell[617740, 12409, 234, 4, 32, "Output",ExpressionUUID->"39914d73-da17-4f77-b49a-c0fffa8bac4d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[618011, 12418, 1653, 27, 28, "Input",ExpressionUUID->"d29e7a18-c7c7-4387-8122-9fb787bbda39"],
Cell[619667, 12447, 244, 4, 32, "Output",ExpressionUUID->"fbd23413-2c1b-4b20-89be-3204a8204759"]
}, Open  ]],
Cell[CellGroupData[{
Cell[619948, 12456, 784, 16, 28, "Input",ExpressionUUID->"987f2ae0-21f4-4e7b-84ef-77d449876a68"],
Cell[620735, 12474, 244, 4, 32, "Output",ExpressionUUID->"9c139126-9f18-44f5-a110-963a8507462c"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[621040, 12485, 403, 6, 54, "Subsection",ExpressionUUID->"9ddad48e-249b-4952-93fc-088d35ba4e20"],
Cell[621446, 12493, 1245, 25, 48, "Input",ExpressionUUID->"ad3f8f1a-4017-4d3a-86f1-106aba410c2e"],
Cell[CellGroupData[{
Cell[622716, 12522, 290, 6, 28, "Input",ExpressionUUID->"423530d9-34bb-45bc-be6e-7e0442e02c5b"],
Cell[623009, 12530, 726, 11, 32, "Output",ExpressionUUID->"d3519136-1d07-4726-ae0a-b15d3ab6dc16"]
}, Open  ]],
Cell[CellGroupData[{
Cell[623772, 12546, 233, 4, 45, "Subsubsection",ExpressionUUID->"ca6b6b61-6ef3-4a36-be7b-458a525b665a"],
Cell[624008, 12552, 1736, 45, 162, "Input",ExpressionUUID->"7698f9f1-4bb2-49ae-8a4b-66ab7de328d3"],
Cell[625747, 12599, 1100, 30, 67, "Input",ExpressionUUID->"a2b6bccf-d1ee-43a4-9fa9-a3635104461e"],
Cell[CellGroupData[{
Cell[626872, 12633, 301, 7, 28, "Input",ExpressionUUID->"b80ad952-e570-4461-9aeb-8689f1e83cdd"],
Cell[627176, 12642, 208, 4, 32, "Output",ExpressionUUID->"a7f7e9b1-a917-4552-a65d-2e1bf5d5b227"]
}, Open  ]],
Cell[CellGroupData[{
Cell[627421, 12651, 860, 17, 28, "Input",ExpressionUUID->"2822d672-9a25-4c53-ba45-b2e5ae4518fb"],
Cell[628284, 12670, 252, 4, 32, "Output",ExpressionUUID->"91bbf804-e8ff-45e2-9511-d21a8cc50002"]
}, Open  ]],
Cell[CellGroupData[{
Cell[628573, 12679, 854, 17, 28, "Input",ExpressionUUID->"af38664c-470f-4e71-8cfd-ffbeaeb25d71"],
Cell[629430, 12698, 257, 4, 32, "Output",ExpressionUUID->"c9837445-7b21-47fd-aad7-0a0ed5577a49"]
}, Open  ]],
Cell[CellGroupData[{
Cell[629724, 12707, 1710, 28, 28, "Input",ExpressionUUID->"f4a00aa7-22d5-441f-bdc0-42a81f7ebd8c"],
Cell[631437, 12737, 268, 4, 32, "Output",ExpressionUUID->"81879b6b-02a9-4992-b7e9-462245c3ef0c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[631742, 12746, 836, 17, 28, "Input",ExpressionUUID->"dce0dce6-cec5-4e0c-bdce-56669414e7d6"],
Cell[632581, 12765, 266, 4, 32, "Output",ExpressionUUID->"eb376308-4f86-436a-9eb6-595a018be00a"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[632908, 12776, 239, 4, 54, "Subsection",ExpressionUUID->"f2a4a0f0-110b-4f9d-a870-a74bfeb5b441"],
Cell[CellGroupData[{
Cell[633172, 12784, 213, 4, 45, "Subsubsection",ExpressionUUID->"69c67962-6015-453b-bfa2-6c2f09a8a7bc"],
Cell[CellGroupData[{
Cell[633410, 12792, 754, 19, 48, "Input",ExpressionUUID->"ea2208f4-68df-40d6-970c-0a820b61970b"],
Cell[634167, 12813, 161, 3, 32, "Output",ExpressionUUID->"fbdc7688-72c2-4c04-b44c-0a65153d1744"]
}, Open  ]],
Cell[CellGroupData[{
Cell[634365, 12821, 338, 10, 48, "Input",ExpressionUUID->"fbe5dbb5-16ae-48fd-89a8-d15d0d577ed4"],
Cell[634706, 12833, 158, 3, 32, "Output",ExpressionUUID->"12de586e-e1a0-4fe7-9a50-c1b1813c8e7b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[634901, 12841, 231, 6, 28, "Input",ExpressionUUID->"b3f44c2b-3dac-43c3-bfe0-2bf821bb8095"],
Cell[635135, 12849, 173, 3, 32, "Output",ExpressionUUID->"0b693896-d500-49ea-93b5-509eee4115b4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[635345, 12857, 189, 4, 28, "Input",ExpressionUUID->"67982c51-cd2c-438d-8308-83c4bf218b73"],
Cell[635537, 12863, 173, 3, 32, "Output",ExpressionUUID->"5d2a4d79-94e1-4109-9cb3-53a063eb366d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[635747, 12871, 228, 4, 28, "Input",ExpressionUUID->"1b40090e-6759-4a17-a9ad-8863084bf719"],
Cell[635978, 12877, 172, 3, 32, "Output",ExpressionUUID->"ee8f921b-885a-4a50-be8c-33d9650ca96e"]
}, Open  ]],
Cell[636165, 12883, 208, 4, 67, "Input",ExpressionUUID->"5d5c8227-efe3-4430-8e93-73fa642a497b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[636410, 12892, 266, 4, 45, "Subsubsection",ExpressionUUID->"765b5c40-3191-4274-87c1-5024caac0c9e"],
Cell[636679, 12898, 620, 11, 28, "Input",ExpressionUUID->"8c4e57ec-68a1-4cdf-b9ad-df5ea86186c0"],
Cell[CellGroupData[{
Cell[637324, 12913, 721, 19, 48, "Input",ExpressionUUID->"ce989c8a-d937-41c2-9721-6730851201da"],
Cell[638048, 12934, 208, 4, 32, "Output",ExpressionUUID->"0ba5337a-575f-49b2-8027-258c69e64654"]
}, Open  ]],
Cell[638271, 12941, 649, 12, 28, "Input",ExpressionUUID->"29b5b581-01d6-46b9-93d5-8e343e3edb5e"],
Cell[CellGroupData[{
Cell[638945, 12957, 771, 19, 48, "Input",ExpressionUUID->"a1567ffe-da39-45a5-977b-90accf32701a"],
Cell[639719, 12978, 159, 3, 32, "Output",ExpressionUUID->"a199a6a1-a977-4fe2-84d4-db48102d3511"]
}, Open  ]],
Cell[639893, 12984, 677, 12, 28, "Input",ExpressionUUID->"5d6c36e7-0bf9-4442-ae00-d6cb666ddfd6"],
Cell[CellGroupData[{
Cell[640595, 13000, 773, 19, 48, "Input",ExpressionUUID->"adbecbbc-9407-4946-845b-4c7e1d7c3e18"],
Cell[641371, 13021, 157, 3, 32, "Output",ExpressionUUID->"3539ed44-1c4b-42bc-b9c6-1fa89c084fd0"]
}, Open  ]],
Cell[641543, 13027, 289, 7, 28, "Input",ExpressionUUID->"e07860ef-3adf-46f7-ad6c-8be80daec54e"],
Cell[CellGroupData[{
Cell[641857, 13038, 223, 4, 28, "Input",ExpressionUUID->"938400fc-c0b4-4c05-af8b-5a32fd58eead"],
Cell[642083, 13044, 159, 3, 46, "Output",ExpressionUUID->"cd340cb5-48eb-4068-a037-88c1c1bf346e"]
}, Open  ]],
Cell[642257, 13050, 313, 8, 28, "Input",ExpressionUUID->"b0e39e20-80a1-4f37-9ce6-ed1b11490be3"],
Cell[CellGroupData[{
Cell[642595, 13062, 457, 12, 48, "Input",ExpressionUUID->"aeba1b3e-6013-4d57-bb3d-df5c8e97e207"],
Cell[643055, 13076, 180, 3, 32, "Output",ExpressionUUID->"e2228c16-496c-4ae7-8231-72cd21d47cbd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[643272, 13084, 348, 8, 28, "Input",ExpressionUUID->"3306b942-dc0d-485b-a7da-cb8aba665a0b"],
Cell[643623, 13094, 221, 4, 32, "Output",ExpressionUUID->"054dd9d0-1f59-48a0-a202-bab7cc3083dd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[643881, 13103, 213, 4, 28, "Input",ExpressionUUID->"14012b3b-5087-44e9-b218-d07f7506d244"],
Cell[644097, 13109, 197, 3, 32, "Output",ExpressionUUID->"c80625f4-a2b9-478b-a7cc-a33b995bd679"]
}, Open  ]],
Cell[CellGroupData[{
Cell[644331, 13117, 254, 5, 28, "Input",ExpressionUUID->"d97e9d5d-b92b-4f34-91cf-bd34cadc93a5"],
Cell[644588, 13124, 196, 3, 32, "Output",ExpressionUUID->"9087dd41-c5ac-4c58-8ad6-7459fab0723a"]
}, Open  ]],
Cell[644799, 13130, 231, 4, 67, "Input",ExpressionUUID->"9f808d59-5332-4a84-a4cd-75ec508826f0"]
}, Open  ]]
}, Open  ]]
}
]
*)

